{"version":3,"file":"static/js/7378.715a60ff.chunk.js","mappings":"mTAqBA,MAAMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,EAAmBE,IAAA,IAAC,MAAEC,EAAK,OAAEC,GAAQF,EAAA,MAAM,CAC5DG,eAAgB,OAChBC,MAAOF,EAAS,QAAU,QAC1BG,gBAAiBH,EAAS,QAAU,cACpC,UAAW,CACTE,MAAOF,EAAS,QAAU,QAE5BI,aAAc,OACdC,QAAS,YACV,IAEKC,EAAY,CAChB,CACEC,KAAM,YACNC,KAAM,mBACNC,MAAMC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,KAEtB,CACEJ,KAAM,OACNC,KAAM,cACNC,MAAMC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,KAEnB,CACEL,KAAM,QACNC,KAAM,yBACNC,MAAMC,EAAAA,EAAAA,KAACG,EAAAA,EAAS,KAElB,CACEN,KAAM,WACNC,KAAM,6BACNC,MAAMC,EAAAA,EAAAA,KAACI,EAAAA,EAAW,MAwDhBC,EAAUC,IAAmC,IAAlC,EAAEC,EAAI,OAAM,cAACC,GAAeF,EAC3C,MAAMG,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,MAAON,EAAGO,UAAU,SAASC,EAAE,OAAOC,QAAQ,OAAMC,SAAA,EACzDjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAc,YAAYC,UAAU,SAAQJ,SAAC,WAGtEN,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACI,QAAQ,OAAMC,SAAA,CAClBrB,EAAU0B,KAAKC,IACdvB,EAAAA,EAAAA,KAACf,EAAU,CAETuC,GAAID,EAAIzB,KACRR,OAAQmB,EAASgB,WAAaF,EAAIzB,KAAKmB,UAEvCN,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJE,UAAU,MACVY,WAAW,SACXC,eAAe,aACfC,aAAa,OAAMX,SAAA,CAElBM,EAAIxB,MACLC,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACW,WAAW,OAAOC,GAAI,CAAEC,SAAU,UAAWd,SACtDM,EAAI1B,WAZJ0B,EAAI1B,SAiBbG,EAAAA,EAAAA,KAACf,EAAU,CAACuC,GAAG,IAAIQ,QAASxB,EAAcS,UACxCN,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJE,UAAU,MACVY,WAAW,SACXC,eAAe,aACfX,QAAQ,OAAMC,SAAA,EAEdjB,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,KACVjC,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAAD,SAAC,qBAIZ,EAIZ,EA7FoBiB,IAAmB,IAAlB,SAAEjB,GAAUiB,EAC/B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAgB7C,OACE1B,EAAAA,EAAAA,MAAC2B,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,QAAOvB,SAAA,EAC/BjB,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CACFX,GAAI,CACFY,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,SAAU,QACVC,IAAK,OACLC,MAAO,QACP9B,UAEFjB,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAAChB,QAxBSiB,KACzBb,GAAeD,EAAW,EAuBkBlB,SACrCkB,GAAanC,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,KAAMlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAQ,SAG3CnD,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACc,MAAI,EAACR,GAAI,EAAGS,GAAI,EAAGvB,GAAI,CAAEY,QAAS,CAAEC,GAAI,OAAQC,GAAI,UAAY3B,UACpEjB,EAAAA,EAAAA,KAACK,EAAO,CAACG,cArBOA,YAuBlBR,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CACHc,MAAI,EACJR,GAAI,EACJS,GAAI,EACJV,GAAI,GACJb,GAAI,CAAEwB,QAAS,mBAAoBrC,SAElCA,KAEHjB,EAAAA,EAAAA,KAACuD,EAAAA,GAAM,CAACC,OAAO,OAAOC,KAAMtB,EAAYuB,QApCxBC,KAClBvB,GAAc,EAAM,EAmC2CnB,UAC3DjB,EAAAA,EAAAA,KAACK,EAAO,CAACE,EAAE,aAER,C,mECrGX,MAUQqD,EAAkB,WAAiB,OAAbC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAC,EAAmB,EAE1CG,EAAaA,KACjB,MAAMC,EAAYC,MACZC,EAAW,GACjB,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IAAI,CACnB,MACMC,EADOJ,EAAYK,QAAQC,SAASH,EAAE,QACrBI,OAAO,QAE9BL,EAAUM,QAAQJ,EACnB,CAEA,OAAOF,CAAS,C,mOCrBAjF,EAAAA,EAAAA,IAAOwF,EAAAA,GAAc;;;;;;;GASjBxF,EAAAA,EAAAA,IAAO,QAAQ;;;;;;;;EAThC,MAoBMyF,GAAczF,EAAAA,EAAAA,IAAO,QAAQ;;;;;;;;EAS7B0F,GAAU1F,EAAAA,EAAAA,IAAO,SAAS;;;;;;;;;;;;;;;;;;;;;uDChBvC2F,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGK,MAAMC,EAAqBnG,IAAqB,IAApB,MAAEoG,EAAQ,IAAIpG,EAC7C,MA8BIqG,EAAO,CACXC,QA/Bc1B,EAAAA,EAAAA,MAgCd2B,SAAU,CACR,CACEF,KAAMD,EACNI,MAAO,YACPC,MAAM,EACNC,YAAa,iBACbrG,gBAAiB,yBAIvB,OAAOO,EAAAA,EAAAA,KAAC+F,EAAAA,GAAI,CAACC,QAxCG,CACdC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNtD,SAAU,OAEZuD,MAAO,CACL1D,SAAS,EACT2D,KAAM,wBAGVC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJ9D,SAAS,IAGb+D,EAAG,CACDC,aAAa,EACbF,KAAM,CACJ9D,SAAS,MAoBc+C,KAAMA,GAAa,EAGvCkB,EAAyBzE,IAA2B,IAA1B,MAACsD,EAAM,GAAE,OAACE,EAAO,IAAGxD,EACzD,MAAMuD,EAAO,CACXC,SACAC,SAAU,CACR,CACEC,MAAO,4BACPH,KAAMD,EACN/F,gBAAiB,CAEf,2BACA,2BAEFqG,YAAa,CAEX,yBACA,yBAEFc,qBAAqB,CACjB,2BACA,2BAEJC,YAAa,EACbC,OAAO,MAKb,OAAO9G,EAAAA,EAAAA,KAAC+G,EAAAA,GAAQ,CAACC,MAAO,CAACC,OAAO,IAAKxB,KAAMA,GAAiB,EC5FxDyB,EAAS9H,IAAA,IAAC,MAAEgH,EAAK,MAAEZ,EAAK,KAAE2B,GAAM/H,EAAA,OACpCY,EAAAA,EAAAA,KAACoH,EAAAA,EAAK,CAACC,UAAW,EAAGvF,GAAI,CACvBpC,aAAc,OACdmB,MAAO,QACPyG,OAAO,UACPrG,UACAN,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACc,WAAY,SAAUV,QAAS,OAASsG,OAAQ,OAAOrG,SAAA,EAC5DjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CACTY,GAAI,CACFtC,MAAO,OACPE,aAAc,MACd6H,OAAQ,4BACR1G,MAAO,OACP2G,OAAQ,OACR9E,QAAS,OACTf,eAAgB,SAChBD,WAAY,UACZT,SAEDuE,KAEH7E,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACE,UAAW,MAAMG,SAAA,CACrBkG,GACDnH,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAAD,SAAEmF,WAGX,EAGJqB,GACJ9G,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJE,UAAW,CACT6B,GAAI,SACJ+E,GAAI,OAEN1G,QAAS,OACTW,eAAgB,gBAChBD,WAAY,SACZ4F,OAAQ,OAAOrG,SAAA,EAEfjB,EAAAA,EAAAA,KAACkH,EAAM,CAACd,MAAO,QAASZ,MAAO,GAAI2B,MAAMnH,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,OAChD3H,EAAAA,EAAAA,KAACkH,EAAM,CAACd,MAAO,QAASZ,MAAO,EAAG2B,MAAMnH,EAAAA,EAAAA,KAAC4H,EAAAA,EAAI,OAC7C5H,EAAAA,EAAAA,KAACkH,EAAM,CAACd,MAAO,WAAYZ,MAAO,IAAK2B,MAAMnH,EAAAA,EAAAA,KAAC6H,EAAAA,EAAO,SA8FzD,EA1FkBC,KAChB,MAAMC,GACJ/H,EAAAA,EAAAA,KAACoH,EAAAA,EAAK,CACJC,UAAW,EACXvF,GAAI,CAAEnC,QAAS,OAAQ2H,OAAQ,SAAU5H,aAAc,QAASuB,UAEhEN,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACE,UAAW,MAAOY,WAAY,SAAUV,QAAS,OAAOC,SAAA,EAC7DjB,EAAAA,EAAAA,KAACgI,EAAAA,EAAkB,CAAClG,GAAI,CAAEC,SAAU,WACpC/B,EAAAA,EAAAA,KAAC2E,EAAW,CAACsD,KAAK,UAClBjI,EAAAA,EAAAA,KAAC4E,EAAO,CAAA3D,SAAC,YACTjB,EAAAA,EAAAA,KAACyC,EAAAA,EAAG,CAACyF,SAAU,EAAEjH,UACfjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CACTC,QAAQ,QACRW,GAAI,CACFY,QAAS,CAAEC,GAAI,OAAQU,GAAI,UAC3BpC,SAEDiD,MAASM,OAAO,qBAGrBxE,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,CAAA/B,UACTjB,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,CAACrG,GAAI,CAAEC,SAAU,OAAQvC,MAAO,kBAMtD,OACEmB,EAAAA,EAAAA,MAACyH,EAAAA,EAAW,CAAAnH,SAAA,EACVjB,EAAAA,EAAAA,KAACqI,EAAAA,EAAS,CAACC,UAAW,OAAOrH,SAAE8G,KAE/BpH,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJE,UAAW,CACT6B,GAAG,SACHU,GAAG,OAELrC,QAAS,OACTuH,SAAU,OACV5G,eAAgB,SAChBD,WAAY,CACTiB,GAAG,SACJU,GAAG,WACHpC,SAAA,EAEFN,EAAAA,EAAAA,MAACyG,EAAAA,EAAK,CAACC,UAAW,EAChBvF,GAAI,CACFnC,QAAS,YACTD,aAAc,OACdmB,MAAO,OACP2H,SAAU,SACVvH,SAAA,EAEFjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAACC,QAAQ,KAAKmG,OAAQ,SAASrG,SAAC,mBAC3CjB,EAAAA,EAAAA,KAACuF,EAAkB,CAACC,MAAO,CAAC,GAAG,GAAG,GAAG,GAAG,UAE1C7E,EAAAA,EAAAA,MAACyG,EAAAA,EAAK,CAACC,UAAW,EAChBvF,GAAI,CACFnC,QAAS,OACTD,aAAc,OACdmB,MAAO,OACP6B,QAAS,OACTf,eAAgB,SAChBD,WAAY,SACZmB,SAAU,WACV2F,SAAU,SACVvH,SAAA,EAEFjB,EAAAA,EAAAA,KAAC2G,EAAsB,CAACjB,OAAQ,CAAC,eAAe,gBAAiBF,MAAO,CAAC,GAAG,OAE5E7E,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJiC,SAAU,WACV/B,UAAW,MACXa,eAAgB,SAChBX,QAAS,SACTH,MAAO,OACP2G,OAAQ,OACR9F,WAAY,SAAST,SAAA,EAErBjB,EAAAA,EAAAA,KAACyI,EAAAA,EAAK,KACNzI,EAAAA,EAAAA,KAACkB,EAAAA,EAAU,CAAAD,SAAC,QACZjB,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,aAKZF,IACW,C","sources":["layout/AdminLayout.jsx","lib/feature.js","styles/StyleComponent.jsx","specific/Chart.jsx","pages/Admin/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  Stack,\r\n  Typography,\r\n  styled,\r\n} from '@mui/material';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport {\r\n  Group as GroupIcon,\r\n  Close as CloseIcon,\r\n  Message as MessageIcon,\r\n  PeopleSharp as PeopleIcon,\r\n  Dashboard as DashboardIcon,\r\n  ExitToApp,\r\n} from '@mui/icons-material';\r\nimport { useLocation, Link as RouterLink, Navigate } from 'react-router-dom';\r\n\r\nconst StyledLink = styled(RouterLink)(({ theme, active }) => ({\r\n  textDecoration: 'none',\r\n  color: active ? 'white' : 'black',\r\n  backgroundColor: active ? 'black' : 'transparent',\r\n  '&:hover': {\r\n    color: active ? 'white' : 'gray',\r\n  },\r\n  borderRadius: '2rem',\r\n  padding: '1rem 2rem',\r\n}));\r\n\r\nconst adminTabs = [\r\n  {\r\n    name: 'Dashboard',\r\n    path: '/admin/dashboard',\r\n    icon: <DashboardIcon />,\r\n  },\r\n  {\r\n    name: 'User',\r\n    path: '/admin/user',\r\n    icon: <PeopleIcon />,\r\n  },\r\n  {\r\n    name: 'Chats',\r\n    path: '/admin/chat-management',\r\n    icon: <GroupIcon />,\r\n  },\r\n  {\r\n    name: 'Messages',\r\n    path: '/admin/messages-management',\r\n    icon: <MessageIcon />,\r\n  },\r\n];\r\n\r\nconst isAdmin = true;\r\n\r\nconst AdminLayout = ({ children }) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setMobileOpen(false);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    // Add logout logic here\r\n  };\r\n\r\n  if(!isAdmin) return <Navigate to=\"/admin\"/>;\r\n\r\n  return (\r\n    <Grid container minHeight=\"100vh\">\r\n      <Box\r\n        sx={{\r\n          display: { xs: 'block', md: 'none' },\r\n          position: 'fixed',\r\n          top: '1rem',\r\n          right: '1rem',\r\n        }}\r\n      >\r\n        <IconButton onClick={handleDrawerToggle}>\r\n          {mobileOpen ? <CloseIcon /> : <MenuIcon />}\r\n        </IconButton>\r\n      </Box>\r\n      <Grid item md={4} lg={3} sx={{ display: { xs: 'none', md: 'block' } }}>\r\n        <Sidebar logoutHandler={logoutHandler}/>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        md={8}\r\n        lg={9}\r\n        xs={12}\r\n        sx={{ bgcolor: 'rgba(0,0,0,0.3)' }}\r\n      >\r\n        {children}\r\n      </Grid>\r\n      <Drawer anchor=\"left\" open={mobileOpen} onClose={handleClose}>\r\n        <Sidebar w=\"50vw\" />\r\n      </Drawer>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Sidebar = ({ w = '100%',logoutHandler }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <Stack width={w} direction=\"column\" p=\"3rem\" spacing=\"3rem\">\r\n      <Typography variant=\"h6\" textTransform=\"uppercase\" textAlign=\"center\">\r\n        Admin\r\n      </Typography>\r\n      <Stack spacing=\"1rem\">\r\n        {adminTabs.map((tab) => (\r\n          <StyledLink\r\n            key={tab.name}\r\n            to={tab.path}\r\n            active={location.pathname === tab.path}\r\n          >\r\n            <Stack\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"flex-start\"\r\n              marginBottom=\"1rem\"\r\n            >\r\n              {tab.icon}\r\n              <Typography marginLeft=\"1rem\" sx={{ fontSize: '0.8rem' }}>\r\n                {tab.name}\r\n              </Typography>\r\n            </Stack>\r\n          </StyledLink>\r\n        ))}\r\n        <StyledLink to=\"#\" onClick={logoutHandler}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-start\"\r\n            spacing=\"1rem\"\r\n          >\r\n            <ExitToApp />\r\n            <Typography>Logout</Typography>\r\n          </Stack>\r\n        </StyledLink>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default AdminLayout;\r\n","import moment from \"moment\";\r\n\r\nconst fileFormat = (url = \"\") => {\r\n    const fileExt = url.split(\".\").pop().toLowerCase();\r\n  \r\n    if ([\"mp4\", \"webm\"].includes(fileExt)) return \"video\";\r\n    if ([\"mp3\", \"wav\", \"ogg\"].includes(fileExt)) return \"audio\";\r\n    if ([\"jpg\", \"jpeg\", \"png\", \"gif\"].includes(fileExt)) return \"img\";\r\n    if ([\"svg\"].includes(fileExt)) return \"emoji\"; \r\n    return \"unknown\"; \r\n  };\r\n  \r\n  const transformImageUrl=(url=\"\",width=100)=>url;\r\n\r\n  const getLast7Days=()=>{\r\n    const currentData=moment()\r\n    const last7Days =[]\r\n    for(let i=0;i<7;i++){\r\n     const dayate=currentData.clone().subtract(i,\"days\");\r\n     const dayName = dayate.format(\"dddd\");\r\n\r\n     last7Days.unshift(dayName)\r\n    }\r\n\r\n    return last7Days\r\n\r\n \r\n  }\r\n\r\n  \r\n\r\n  export { fileFormat,transformImageUrl,getLast7Days };\r\n  ","import {styled} from \"@mui/material\"\r\nimport { Link as LinkComponent } from 'react-router-dom'\r\n\r\nexport const Link = styled(LinkComponent)`\r\n  text-decoration: none;\r\n    color: inherit;\r\n    padding: 1rem;\r\n    &:hover{\r\n        background-color: rgba(0,0,0,0.1);\r\n    }\r\n`\r\n\r\nexport const InputBox = styled(\"input\")`\r\n    border: none;\r\n    outline: none;\r\n    background-color: rgba(0,0,0,0.1);\r\n    padding: 0 3rem;\r\n    border-radius: 1.5rem;\r\n    height: 100%;\r\n    width: 100%;\r\n`\r\n\r\n\r\nexport const SearchField = styled(\"input\")`\r\n    width: 20vmax;\r\n    padding: 1rem 2rem;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 1.5rem;\r\n    background-color:#f1f1f1 ;\r\n    font-size: 1.1rem;\r\n`\r\nexport const CurvBtn = styled('button')`\r\n  padding: 1rem 2rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 1.5rem;\r\n  background-color: black;\r\n  font-size: 1.1rem;\r\n  color: white;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: gray; // Add any hover styles here\r\n  }\r\n\r\n  &:active {\r\n    background-color: darkgray; // Add any active styles here\r\n  }\r\n\r\n  &:focus {\r\n    outline: 2px solid blue; // Add any focus styles here\r\n  }\r\n`;","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement, // Import ArcElement\r\n} from 'chart.js';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\nimport { faker } from '@faker-js/faker';\r\nimport { getLast7Days } from '../lib/feature';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement \r\n);\r\n\r\nexport const LineChartComponent = ({ value = [] }) => {\r\n    const labels =getLast7Days();\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Chart.js Line Chart',\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n \r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        data: value,\r\n        label: 'Revenue 2',\r\n        fill: true,\r\n        borderColor: 'rgb(75,12,192)',\r\n        backgroundColor: 'rgba(75,12,192,0.2)',\r\n      },\r\n    ],\r\n  };\r\n  return <Line options={options} data={data}></Line>;\r\n};\r\n\r\nexport const DoughnutChartComponent = ({value=[],labels=[]}) => {\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Total Chat VS Group Chats',\r\n        data: value,\r\n        backgroundColor: [\r\n          \r\n          'rgba(153, 102, 255, 0.2)',\r\n          'rgba(255, 159, 64, 0.2)',\r\n        ],\r\n        borderColor: [\r\n         \r\n          'rgba(153, 102, 255, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        ],\r\n        hoverBackgroundColor:[\r\n            'rgba(153, 102, 255, 0.2)',\r\n            'rgba(255, 159, 64, 0.2)',\r\n        ],\r\n        borderWidth: 1,\r\n        offset:30,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Doughnut style={{zIndex:10}} data={data}></Doughnut>;\r\n};\r\n","import React from 'react';\r\nimport AdminLayout from '../../layout/AdminLayout';\r\nimport { Box, Container, IconButton, Paper, Stack, Typography } from '@mui/material';\r\nimport { AdminPanelSettings, Chat, Group, Message, Notifications, Person } from '@mui/icons-material';\r\nimport moment from 'moment';\r\nimport { CurvBtn, SearchField } from '../../styles/StyleComponent';\r\nimport { DoughnutChartComponent, LineChartComponent } from '../../specific/Chart';\r\n\r\nconst Widget = ({ title, value, Icon }) => (\r\n  <Paper elevation={3} sx={{\r\n    borderRadius: \"1rem\",\r\n    width: \"20rem\",\r\n    margin:\"2rem 0\"\r\n  }}>\r\n    <Stack alignItems={\"center\"} spacing={\"1rem\"}  margin={\"1rem\"}>\r\n      <Typography\r\n        sx={{\r\n          color: \"gray\",\r\n          borderRadius: \"50%\",\r\n          border: `5px solid rgba(0,0,0,0.9)`,\r\n          width: \"5rem\",\r\n          height: \"5rem\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        {value}\r\n      </Typography>\r\n      <Stack direction={\"row\"} >\r\n        {Icon}\r\n        <Typography>{title}</Typography>\r\n      </Stack>\r\n    </Stack>\r\n  </Paper>\r\n);\r\n\r\nconst Widgets = (\r\n  <Stack\r\n    direction={{\r\n      xs: \"column\",\r\n      sm: \"row\"\r\n    }}\r\n    spacing={\"2rem\"}\r\n    justifyContent={\"space-between\"}\r\n    alignItems={\"center\"}\r\n    margin={\"2rem\"}\r\n  >\r\n    <Widget title={\"Users\"} value={34} Icon={<Person />} />\r\n    <Widget title={\"Chats\"} value={4} Icon={<Chat />} />\r\n    <Widget title={\"Messages\"} value={456} Icon={<Message />} />\r\n  </Stack>\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const AppBar = (\r\n    <Paper\r\n      elevation={3}\r\n      sx={{ padding: \"2rem\", margin: \"2rem 0\", borderRadius: \"1rem\" }}\r\n    >\r\n      <Stack direction={\"row\"} alignItems={\"center\"} spacing={\"1rem\"}>\r\n        <AdminPanelSettings sx={{ fontSize: \"3rem\" }} />\r\n        <SearchField type='text' />\r\n        <CurvBtn>Search</CurvBtn>\r\n        <Box flexGrow={1}>\r\n          <Typography\r\n            variant='body1'\r\n            sx={{\r\n              display: { xs: \"none\", lg: \"block\" }\r\n            }}\r\n          >\r\n            {moment().format(\"Do MMMM YYYY\")}\r\n          </Typography>\r\n        </Box>\r\n        <IconButton>\r\n          <Notifications sx={{ fontSize: \"2rem\", color: \"black\" }} />\r\n        </IconButton>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <AdminLayout>\r\n      <Container component={\"main\"}>{AppBar}</Container>\r\n\r\n      <Stack\r\n        direction={{\r\n          xs:\"column\",\r\n          lg:\"row\"\r\n        }}\r\n        spacing={\"2rem\"}\r\n        flexWrap={\"wrap\"}\r\n        justifyContent={\"center\"}\r\n        alignItems={{\r\n           xs:\"center\",\r\n          lg:\"stretch\"\r\n        }}\r\n      >\r\n        <Paper elevation={3}\r\n          sx={{\r\n            padding: \"2rem 3rem\",\r\n            borderRadius: \"1rem\",\r\n            width: \"100%\",\r\n            maxWidth: \"35rem\"\r\n          }}\r\n        >\r\n          <Typography variant='h5' margin={\"2rem 0\"}>Last Messages</Typography>\r\n          <LineChartComponent value={[23,56,33,67,33]}/>\r\n        </Paper>\r\n        <Paper elevation={3}\r\n          sx={{\r\n            padding: \"1rem\",\r\n            borderRadius: \"1rem\",\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            position: \"relative\",\r\n            maxWidth: \"22rem\"\r\n          }}\r\n        >\r\n          <DoughnutChartComponent labels={[\"Single Chats\",\"Groups Chats\"]} value={[33,66]}/>\r\n\r\n          <Stack\r\n            position={\"absolute\"}\r\n            direction={\"row\"}\r\n            justifyContent={\"center\"}\r\n            spacing={\"0.5rem\"}\r\n            width={\"100%\"}\r\n            height={\"100%\"}\r\n            alignItems={\"center\"}\r\n          >\r\n            <Group />\r\n            <Typography>Vs</Typography>\r\n            <Person />\r\n          </Stack>\r\n        </Paper>\r\n      </Stack>\r\n\r\n      {Widgets}\r\n    </AdminLayout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["StyledLink","styled","RouterLink","_ref","theme","active","textDecoration","color","backgroundColor","borderRadius","padding","adminTabs","name","path","icon","_jsx","DashboardIcon","PeopleIcon","GroupIcon","MessageIcon","Sidebar","_ref3","w","logoutHandler","location","useLocation","_jsxs","Stack","width","direction","p","spacing","children","Typography","variant","textTransform","textAlign","map","tab","to","pathname","alignItems","justifyContent","marginBottom","marginLeft","sx","fontSize","onClick","ExitToApp","_ref2","mobileOpen","setMobileOpen","useState","Grid","container","minHeight","Box","display","xs","md","position","top","right","IconButton","handleDrawerToggle","CloseIcon","MenuIcon","item","lg","bgcolor","Drawer","anchor","open","onClose","handleClose","transformImageUrl","arguments","length","undefined","getLast7Days","currentData","moment","last7Days","i","dayName","clone","subtract","format","unshift","LinkComponent","SearchField","CurvBtn","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","ArcElement","LineChartComponent","value","data","labels","datasets","label","fill","borderColor","Line","options","responsive","plugins","legend","title","text","scales","x","grid","y","beginAtZero","DoughnutChartComponent","hoverBackgroundColor","borderWidth","offset","Doughnut","style","zIndex","Widget","Icon","Paper","elevation","margin","border","height","Widgets","sm","Person","Chat","Message","Dashboard","AppBar","AdminPanelSettings","type","flexGrow","Notifications","AdminLayout","Container","component","flexWrap","maxWidth","Group"],"sourceRoot":""}