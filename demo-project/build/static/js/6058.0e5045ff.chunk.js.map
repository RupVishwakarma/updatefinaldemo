{"version":3,"file":"static/js/6058.0e5045ff.chunk.js","mappings":";yPAWO,MAAMA,EACXC,WAAAA,GACEC,KAAKC,SAAW,KAChBD,KAAKE,QAAU,IAAIC,IACnBH,KAAKI,UAAW,EAChBJ,KAAKK,eAAYC,CACnB,CAKAC,OAAAA,CAAQC,EAAOC,EAAOC,EAAMC,GAC1B,MAAMC,EAAYH,EAAMI,UAAUF,GAC5BG,EAAWL,EAAMM,SAEvBH,EAAUI,SAAQC,GAAMA,EAAG,CACzBT,QACAU,QAAST,EAAMS,QACfJ,WACAK,YAAaC,KAAKC,IAAIX,EAAOD,EAAMa,MAAOR,MAE9C,CAKAS,QAAAA,GACMvB,KAAKC,WAGTD,KAAKI,UAAW,EAEhBJ,KAAKC,SAAWuB,EAAAA,EAAiBC,KAAKC,QAAQ,KAC5C1B,KAAK2B,UACL3B,KAAKC,SAAW,KAEZD,KAAKI,UACPJ,KAAKuB,cAGX,CAKAI,OAAAA,GAA2B,IAAnBjB,EAAAkB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAOE,KAAKC,MACdC,EAAY,EAEhBhC,KAAKE,QAAQc,SAAQ,CAACP,EAAOD,KAC3B,IAAKC,EAAMwB,UAAYxB,EAAMyB,MAAML,OACjC,OAEF,MAAMK,EAAQzB,EAAMyB,MACpB,IAEIC,EAFAC,EAAIF,EAAML,OAAS,EACnBQ,GAAO,EAGX,KAAOD,GAAK,IAAKA,EACfD,EAAOD,EAAME,GAETD,EAAKG,SACHH,EAAKI,OAAS9B,EAAMM,WAGtBN,EAAMM,SAAWoB,EAAKI,QAExBJ,EAAKK,KAAK9B,GACV2B,GAAO,IAIPH,EAAME,GAAKF,EAAMA,EAAML,OAAS,GAChCK,EAAMO,OAINJ,IACF7B,EAAM6B,OACNrC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,aAG9BwB,EAAML,SACTpB,EAAMwB,SAAU,EAChBjC,KAAKO,QAAQC,EAAOC,EAAOC,EAAM,YACjCD,EAAMS,SAAU,GAGlBc,GAAaE,EAAML,MAAM,IAG3B7B,KAAKK,UAAYK,EAEC,IAAdsB,IACFhC,KAAKI,UAAW,EAEpB,CAKAsC,SAAAA,CAAUlC,GACR,MAAMmC,EAAS3C,KAAKE,QACpB,IAAIO,EAAQkC,EAAOC,IAAIpC,GAavB,OAZKC,IACHA,EAAQ,CACNwB,SAAS,EACTf,SAAS,EACTgB,MAAO,GACPrB,UAAW,CACTgC,SAAU,GACVC,SAAU,KAGdH,EAAOI,IAAIvC,EAAOC,IAEbA,CACT,CAOAuC,MAAAA,CAAOxC,EAAOyC,EAAOC,GACnBlD,KAAK0C,UAAUlC,GAAOK,UAAUoC,GAAOE,KAAKD,EAC9C,CAOAE,GAAAA,CAAI5C,EAAO0B,GACJA,GAAUA,EAAML,QAGrB7B,KAAK0C,UAAUlC,GAAO0B,MAAMiB,QAAQjB,EACtC,CAMAmB,GAAAA,CAAI7C,GACF,OAAOR,KAAK0C,UAAUlC,GAAO0B,MAAML,OAAS,CAC9C,CAMAP,KAAAA,CAAMd,GACJ,MAAMC,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC1BC,IAGLA,EAAMwB,SAAU,EAChBxB,EAAMa,MAAQQ,KAAKC,MACnBtB,EAAMM,SAAWN,EAAMyB,MAAMoB,QAAO,CAACC,EAAKC,IAAQpC,KAAKqC,IAAIF,EAAKC,EAAIE,YAAY,GAChF1D,KAAKuB,WACP,CAEAU,OAAAA,CAAQzB,GACN,IAAKR,KAAKI,SACR,OAAO,EAET,MAAMK,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC/B,SAAKC,GAAUA,EAAMwB,SAAYxB,EAAMyB,MAAML,OAI/C,CAMA8B,IAAAA,CAAKnD,GACH,MAAMC,EAAQT,KAAKE,QAAQ0C,IAAIpC,GAC/B,IAAKC,IAAUA,EAAMyB,MAAML,OACzB,OAEF,MAAMK,EAAQzB,EAAMyB,MACpB,IAAIE,EAAIF,EAAML,OAAS,EAEvB,KAAOO,GAAK,IAAKA,EACfF,EAAME,GAAGwB,SAEXnD,EAAMyB,MAAQ,GACdlC,KAAKO,QAAQC,EAAOC,EAAOqB,KAAKC,MAAO,WACzC,CAMA8B,MAAAA,CAAOrD,GACL,OAAOR,KAAKE,QAAQ4D,OAAOtD,EAC7B,EAIF,IAAAuD,EAA+B,IAAIjE,ECjNnC,MAAMkE,EAAc,cACdC,EAAgB,CACpBC,QAAO,CAACC,EAAMC,EAAIC,IACTA,EAAS,GAAMD,EAAKD,EAO7BG,KAAAA,CAAMH,EAAMC,EAAIC,GACd,MAAME,GAAKD,EAAAA,EAAAA,GAAaH,GAAQH,GAC1BQ,EAAKD,EAAGE,QAASH,EAAAA,EAAAA,GAAaF,GAAMJ,GAC1C,OAAOQ,GAAMA,EAAGC,MACZD,EAAGE,IAAIH,EAAIF,GAAQM,YACnBP,CACN,EACAQ,OAAM,CAACT,EAAMC,EAAIC,IACRF,GAAQC,EAAKD,GAAQE,GAIjB,MAAMQ,EACnB9E,WAAAA,CAAY+E,EAAKC,EAAQC,EAAMZ,GAC7B,MAAMa,EAAeF,EAAOC,GAE5BZ,GAAKc,EAAAA,EAAAA,GAAQ,CAACJ,EAAIV,GAAIA,EAAIa,EAAcH,EAAIX,OAC5C,MAAMA,GAAOe,EAAAA,EAAAA,GAAQ,CAACJ,EAAIX,KAAMc,EAAcb,IAE9CpE,KAAKsC,SAAU,EACftC,KAAKmF,IAAML,EAAI7D,IAAMgD,EAAca,EAAInE,aAAewD,GACtDnE,KAAKoF,QAAUC,EAAAA,EAAQP,EAAIQ,SAAWD,EAAAA,EAAQE,OAC9CvF,KAAKwF,OAASpE,KAAKqE,MAAM3D,KAAKC,OAAS+C,EAAIY,OAAS,IACpD1F,KAAK0D,UAAY1D,KAAKuC,OAASnB,KAAKqE,MAAMX,EAAI/D,UAC9Cf,KAAK2F,QAAUb,EAAIc,KACnB5F,KAAK6F,QAAUd,EACf/E,KAAK8F,MAAQd,EACbhF,KAAK+F,MAAQ5B,EACbnE,KAAKgG,IAAM5B,EACXpE,KAAKiG,eAAY3F,CACnB,CAEA4F,MAAAA,GACE,OAAOlG,KAAKsC,OACd,CAEA6D,MAAAA,CAAOrB,EAAKV,EAAI1D,GACd,GAAIV,KAAKsC,QAAS,CAChBtC,KAAKO,SAAQ,GAEb,MAAM0E,EAAejF,KAAK6F,QAAQ7F,KAAK8F,OACjCM,EAAU1F,EAAOV,KAAKwF,OACtBa,EAASrG,KAAK0D,UAAY0C,EAChCpG,KAAKwF,OAAS9E,EACdV,KAAK0D,UAAYtC,KAAKqE,MAAMrE,KAAKqC,IAAI4C,EAAQvB,EAAI/D,WACjDf,KAAKuC,QAAU6D,EACfpG,KAAK2F,QAAUb,EAAIc,KACnB5F,KAAKgG,KAAMd,EAAAA,EAAAA,GAAQ,CAACJ,EAAIV,GAAIA,EAAIa,EAAcH,EAAIX,OAClDnE,KAAK+F,OAAQb,EAAAA,EAAAA,GAAQ,CAACJ,EAAIX,KAAMc,EAAcb,IAElD,CAEAR,MAAAA,GACM5D,KAAKsC,UAEPtC,KAAKwC,KAAKV,KAAKC,OACf/B,KAAKsC,SAAU,EACftC,KAAKO,SAAQ,GAEjB,CAEAiC,IAAAA,CAAK9B,GACH,MAAM0F,EAAU1F,EAAOV,KAAKwF,OACtBzE,EAAWf,KAAK0D,UAChBsB,EAAOhF,KAAK8F,MACZ3B,EAAOnE,KAAK+F,MACZH,EAAO5F,KAAK2F,MACZvB,EAAKpE,KAAKgG,IAChB,IAAI3B,EAIJ,GAFArE,KAAKsC,QAAU6B,IAASC,IAAOwB,GAASQ,EAAUrF,IAE7Cf,KAAKsC,QAGR,OAFAtC,KAAK6F,QAAQb,GAAQZ,OACrBpE,KAAKO,SAAQ,GAIX6F,EAAU,EACZpG,KAAK6F,QAAQb,GAAQb,GAIvBE,EAAU+B,EAAUrF,EAAY,EAChCsD,EAASuB,GAAQvB,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASrE,KAAKoF,QAAQhE,KAAKC,IAAI,EAAGD,KAAKqC,IAAI,EAAGY,KAE9CrE,KAAK6F,QAAQb,GAAQhF,KAAKmF,IAAIhB,EAAMC,EAAIC,GAC1C,CAEAiC,IAAAA,GACE,MAAMC,EAAWvG,KAAKiG,YAAcjG,KAAKiG,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACvBH,EAASpD,KAAK,CAACsD,MAAKC,OAAK,GAE7B,CAEAnG,OAAAA,CAAQoG,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAWvG,KAAKiG,WAAa,GACnC,IAAK,IAAI7D,EAAI,EAAGA,EAAImE,EAAS1E,OAAQO,IACnCmE,EAASnE,GAAGwE,IAEhB,EChHa,MAAMC,EACnB9G,WAAAA,CAAYS,EAAOsG,GACjB9G,KAAK+G,OAASvG,EACdR,KAAKgH,YAAc,IAAI7G,IACvBH,KAAKiH,UAAUH,EACjB,CAEAG,SAAAA,CAAUH,GACR,KAAKI,EAAAA,EAAAA,GAASJ,GACZ,OAGF,MAAMK,EAAmBC,OAAOC,KAAKC,EAAAA,EAASC,WACxCC,EAAgBxH,KAAKgH,YAE3BI,OAAOK,oBAAoBX,GAAQ9F,SAAQ0G,IACzC,MAAM5C,EAAMgC,EAAOY,GACnB,KAAKR,EAAAA,EAAAA,GAASpC,GACZ,OAEF,MAAM6B,EAAW,CAAC,EAClB,IAAK,MAAMgB,KAAUR,EACnBR,EAASgB,GAAU7C,EAAI6C,KAGxBC,EAAAA,EAAAA,GAAQ9C,EAAI+C,aAAe/C,EAAI+C,YAAc,CAACH,IAAM1G,SAASgE,IACxDA,IAAS0C,GAAQF,EAAcnE,IAAI2B,IACrCwC,EAAczE,IAAIiC,EAAM2B,KAE1B,GAEN,CAMAmB,eAAAA,CAAgB/C,EAAQgD,GACtB,MAAMC,EAAaD,EAAOE,QACpBA,EAsGV,SAA8BlD,EAAQiD,GACpC,IAAKA,EACH,OAEF,IAAIC,EAAUlD,EAAOkD,QACrB,IAAKA,EAEH,YADAlD,EAAOkD,QAAUD,GAGfC,EAAQC,UAGVnD,EAAOkD,QAAUA,EAAUb,OAAOe,OAAO,CAAC,EAAGF,EAAS,CAACC,SAAS,EAAOE,YAAa,CAAC,KAEvF,OAAOH,CACT,CArHoBI,CAAqBtD,EAAQiD,GAC7C,IAAKC,EACH,MAAO,GAGT,MAAMK,EAAatI,KAAKuI,kBAAkBN,EAASD,GAYnD,OAXIA,EAAWE,SAmFnB,SAAkBI,EAAYT,GAC5B,MAAM5F,EAAU,GACVoF,EAAOD,OAAOC,KAAKQ,GACzB,IAAK,IAAIzF,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAAK,CACpC,MAAMoG,EAAOF,EAAWjB,EAAKjF,IACzBoG,GAAQA,EAAKtC,UACfjE,EAAQkB,KAAKqF,EAAKlC,OAEtB,CAEA,OAAOE,QAAQiC,IAAIxG,EACrB,CA1FMyG,CAAS3D,EAAOkD,QAAQG,YAAaJ,GAAYW,MAAK,KACpD5D,EAAOkD,QAAUD,CAAA,IAChB,SAKEM,CACT,CAKAC,iBAAAA,CAAkBxD,EAAQgD,GACxB,MAAMP,EAAgBxH,KAAKgH,YACrBsB,EAAa,GACbrG,EAAU8C,EAAOqD,cAAgBrD,EAAOqD,YAAc,CAAC,GACvDQ,EAAQxB,OAAOC,KAAKU,GACpBrH,EAAOoB,KAAKC,MAClB,IAAIK,EAEJ,IAAKA,EAAIwG,EAAM/G,OAAS,EAAGO,GAAK,IAAKA,EAAG,CACtC,MAAM4C,EAAO4D,EAAMxG,GACnB,GAAuB,MAAnB4C,EAAK6D,OAAO,GACd,SAGF,GAAa,YAAT7D,EAAoB,CACtBsD,EAAWnF,QAAQnD,KAAK8H,gBAAgB/C,EAAQgD,IAChD,SAEF,MAAMe,EAAQf,EAAO/C,GACrB,IAAIuC,EAAYtF,EAAQ+C,GACxB,MAAMF,EAAM0C,EAAc5E,IAAIoC,GAE9B,GAAIuC,EAAW,CACb,GAAIzC,GAAOyC,EAAUrB,SAAU,CAE7BqB,EAAUpB,OAAOrB,EAAKgE,EAAOpI,GAC7B,SAEA6G,EAAU3D,SAGTkB,GAAQA,EAAI/D,UAMjBkB,EAAQ+C,GAAQuC,EAAY,IAAI1C,EAAUC,EAAKC,EAAQC,EAAM8D,GAC7DR,EAAWnF,KAAKoE,IALdxC,EAAOC,GAAQ8D,CAMnB,CACA,OAAOR,CACT,CASAnC,MAAAA,CAAOpB,EAAQgD,GACb,GAA8B,IAA1B/H,KAAKgH,YAAY+B,KAGnB,YADA3B,OAAOe,OAAOpD,EAAQgD,GAIxB,MAAMO,EAAatI,KAAKuI,kBAAkBxD,EAAQgD,GAElD,OAAIO,EAAWzG,QACbkC,EAASX,IAAIpD,KAAK+G,OAAQuB,IACnB,QAFT,CAIF,ECvHF,SAASU,EAAUC,EAAOC,GACxB,MAAMC,EAAOF,GAASA,EAAMhB,SAAW,CAAC,EAClCmB,EAAUD,EAAKC,QACf/H,OAAmBf,IAAb6I,EAAK9H,IAAoB6H,EAAkB,EACjDzF,OAAmBnD,IAAb6I,EAAK1F,IAAoByF,EAAkB,EACvD,MAAO,CACL5H,MAAO8H,EAAU3F,EAAMpC,EACvBgI,IAAKD,EAAU/H,EAAMoC,EAEzB,CAsCA,SAAS6F,EAAwB9I,EAAO+I,GACtC,MAAMlC,EAAO,GACPmC,EAAWhJ,EAAMiJ,uBAAuBF,GAC9C,IAAInH,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAC9CiF,EAAKlE,KAAKqG,EAASpH,GAAGuH,OAExB,OAAOtC,CACT,CAEA,SAASuC,EAAWC,EAAOf,EAAOgB,GAAuB,IAAd7B,EAAArG,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAU,CAAC,EACpD,MAAMyF,EAAOwC,EAAMxC,KACb0C,EAA8B,WAAjB9B,EAAQ+B,KAC3B,IAAI5H,EAAGsH,EAAMO,EAAcC,EAE3B,GAAc,OAAVpB,EAAJ,CAIA,IAAK1G,EAAI,EAAGsH,EAAOrC,EAAKxF,OAAQO,EAAIsH,IAAQtH,EAAG,CAE7C,GADA6H,GAAgB5C,EAAKjF,GACjB6H,IAAiBH,EAAS,CAC5B,GAAI7B,EAAQQ,IACV,SAEF,MAEFyB,EAAaL,EAAM9B,OAAOkC,IACtBE,EAAAA,EAAAA,GAASD,KAAgBH,GAAyB,IAAVjB,IAAesB,EAAAA,EAAAA,GAAKtB,MAAWsB,EAAAA,EAAAA,GAAKF,MAC9EpB,GAASoB,EAEb,CACA,OAAOpB,EACT,CAmBA,SAASuB,EAAUpB,EAAOqB,GACxB,MAAMC,EAAUtB,GAASA,EAAMhB,QAAQsC,QACvC,OAAOA,QAAwBjK,IAAZiK,QAAwCjK,IAAfgK,EAAKT,KACnD,CAcA,SAASW,EAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CAEA,SAASE,EAAoBhB,EAAOiB,EAAQC,EAAUpK,GACpD,IAAK,MAAM2J,KAAQQ,EAAOE,wBAAwBrK,GAAMyI,UAAW,CACjE,MAAMN,EAAQe,EAAMS,EAAKX,OACzB,GAAIoB,GAAajC,EAAQ,IAAQiC,GAAYjC,EAAQ,EACnD,OAAOwB,EAAKX,KAEhB,CAEA,OAAO,IACT,CAEA,SAASsB,EAAaC,EAAYC,GAChC,MAAM,MAAC3K,EAAO4K,YAAad,GAAQY,EAC7BT,EAASjK,EAAM6K,UAAY7K,EAAM6K,QAAU,CAAC,IAC5C,OAACC,EAAA,OAAQR,EAAQnB,MAAOM,GAAgBK,EACxCiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf9D,EAlCR,SAAqBgE,EAAYC,EAAYrB,GAC3C,MAAO,GAAGoB,EAAWE,MAAMD,EAAWC,MAAMtB,EAAKT,OAASS,EAAK3J,MACjE,CAgCckL,CAAYP,EAAQR,EAAQR,GAClCZ,EAAOyB,EAAOtJ,OACpB,IAAIgI,EAEJ,IAAK,IAAIzH,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAC7B,MAAMD,EAAOgJ,EAAO/I,IACb,CAACmJ,GAAQ5B,EAAO,CAAC8B,GAAQ3C,GAAS3G,EAEzC0H,GADmB1H,EAAKkJ,UAAYlJ,EAAKkJ,QAAU,CAAC,IACjCI,GAASjB,EAAiBC,EAAQ/C,EAAKiC,GAC1DE,EAAMI,GAAgBnB,EAEtBe,EAAMiC,KAAOjB,EAAoBhB,EAAOiB,GAAQ,EAAMR,EAAK3J,MAC3DkJ,EAAMkC,QAAUlB,EAAoBhB,EAAOiB,GAAQ,EAAOR,EAAK3J,OAE1CkJ,EAAMmC,gBAAkBnC,EAAMmC,cAAgB,CAAC,IACvD/B,GAAgBnB,CAC/B,CACF,CAEA,SAASmD,EAAgBzL,EAAOgL,GAC9B,MAAMU,EAAS1L,EAAM0L,OACrB,OAAO9E,OAAOC,KAAK6E,GAAQC,QAAOzE,GAAOwE,EAAOxE,GAAK8D,OAASA,IAAMY,OACtE,CA4BA,SAASC,EAAY/B,EAAMpI,GAEzB,MAAM+H,EAAeK,EAAKY,WAAWvB,MAC/B6B,EAAOlB,EAAKQ,QAAUR,EAAKQ,OAAOU,KACxC,GAAKA,EAAL,CAIAtJ,EAAQA,GAASoI,EAAKgC,QACtB,IAAK,MAAMnB,KAAUjJ,EAAO,CAC1B,MAAMuI,EAASU,EAAOE,QACtB,IAAKZ,QAA2BnK,IAAjBmK,EAAOe,SAAsDlL,IAA/BmK,EAAOe,GAAMvB,GACxD,cAEKQ,EAAOe,GAAMvB,QACe3J,IAA/BmK,EAAOe,GAAMQ,oBAA4E1L,IAA7CmK,EAAOe,GAAMQ,cAAc/B,WAClEQ,EAAOe,GAAMQ,cAAc/B,EAEtC,EACF,CAEA,MAAMsC,EAAsBvC,GAAkB,UAATA,GAA6B,SAATA,EACnDwC,EAAmBA,CAACC,EAAQC,IAAWA,EAASD,EAASrF,OAAOe,OAAO,CAAC,EAAGsE,GAIlE,MAAME,EAKnBC,gBAAkB,GAKlBA,0BAA4B,KAK5BA,uBAAyB,KAMzB7M,WAAAA,CAAYS,EAAOyJ,GACjBjK,KAAKQ,MAAQA,EACbR,KAAK6M,KAAOrM,EAAMsM,IAClB9M,KAAK2J,MAAQM,EACbjK,KAAK+M,gBAAkB,CAAC,EACxB/M,KAAKoL,YAAcpL,KAAKgN,UACxBhN,KAAKiN,MAAQjN,KAAKoL,YAAYzK,KAC9BX,KAAKiI,aAAU3H,EAEfN,KAAKkN,UAAW,EAChBlN,KAAKmN,WAAQ7M,EACbN,KAAKoN,iBAAc9M,EACnBN,KAAKqN,oBAAiB/M,EACtBN,KAAKsN,gBAAahN,EAClBN,KAAKuN,gBAAajN,EAClBN,KAAKwN,qBAAsB,EAC3BxN,KAAKyN,oBAAqB,EAC1BzN,KAAK0N,cAAWpN,EAChBN,KAAK2N,UAAY,GACjB3N,KAAK4N,8BAAgCA,mBACrC5N,KAAK6N,2BAA6BA,gBAElC7N,KAAK8N,YACP,CAEAA,UAAAA,GACE,MAAMxD,EAAOtK,KAAKoL,YAClBpL,KAAKiH,YACLjH,KAAK+N,aACLzD,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GACvCtK,KAAKiO,cAEDjO,KAAKiI,QAAQiG,OAASlO,KAAKQ,MAAM2N,gBAAgB,WACnDC,QAAQC,KAAK,qKAEjB,CAEAC,WAAAA,CAAYrE,GACNjK,KAAK2J,QAAUM,GACjBoC,EAAYrM,KAAKoL,aAEnBpL,KAAK2J,MAAQM,CACf,CAEA8D,UAAAA,GACE,MAAMvN,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZmD,EAAUvO,KAAKwO,aAEfC,EAAWA,CAACjD,EAAMkD,EAAGC,EAAGC,IAAe,MAATpD,EAAekD,EAAa,MAATlD,EAAeoD,EAAID,EAEpEE,EAAMvE,EAAKwE,SAAUC,EAAAA,EAAAA,GAAeR,EAAQO,QAAS7C,EAAgBzL,EAAO,MAC5EwO,EAAM1E,EAAK2E,SAAUF,EAAAA,EAAAA,GAAeR,EAAQU,QAAShD,EAAgBzL,EAAO,MAC5E0O,EAAM5E,EAAK6E,SAAUJ,EAAAA,EAAAA,GAAeR,EAAQY,QAASlD,EAAgBzL,EAAO,MAC5E4O,EAAY9E,EAAK8E,UACjBC,EAAM/E,EAAKgF,QAAUb,EAASW,EAAWP,EAAKG,EAAKE,GACnDK,EAAMjF,EAAKkF,QAAUf,EAASW,EAAWJ,EAAKH,EAAKK,GACzD5E,EAAKmF,OAASzP,KAAK0P,cAAcb,GACjCvE,EAAKqF,OAAS3P,KAAK0P,cAAcV,GACjC1E,EAAKsF,OAAS5P,KAAK0P,cAAcR,GACjC5E,EAAKgB,OAAStL,KAAK0P,cAAcL,GACjC/E,EAAKQ,OAAS9K,KAAK0P,cAAcH,EACnC,CAEAf,UAAAA,GACE,OAAOxO,KAAKQ,MAAMqP,KAAKC,SAAS9P,KAAK2J,MACvC,CAEAqD,OAAAA,GACE,OAAOhN,KAAKQ,MAAMuP,eAAe/P,KAAK2J,MACxC,CAMA+F,aAAAA,CAAcM,GACZ,OAAOhQ,KAAKQ,MAAM0L,OAAO8D,EAC3B,CAKAC,cAAAA,CAAehH,GACb,MAAMqB,EAAOtK,KAAKoL,YAClB,OAAOnC,IAAUqB,EAAKgB,OAClBhB,EAAKQ,OACLR,EAAKgB,MACX,CAEA4E,KAAAA,GACElQ,KAAK2B,QAAQ,QACf,CAKAwO,QAAAA,GACE,MAAM7F,EAAOtK,KAAKoL,YACdpL,KAAKmN,QACPiD,EAAAA,EAAAA,GAAoBpQ,KAAKmN,MAAOnN,MAE9BsK,EAAK0D,UACP3B,EAAY/B,EAEhB,CAKA+F,UAAAA,GACE,MAAM9B,EAAUvO,KAAKwO,aACfqB,EAAOtB,EAAQsB,OAAStB,EAAQsB,KAAO,IACvC1C,EAAQnN,KAAKmN,MAMnB,IAAIjG,EAAAA,EAAAA,GAAS2I,GAAO,CAClB,MAAMvF,EAAOtK,KAAKoL,YAClBpL,KAAKmN,MAlRX,SAAkC0C,EAAMvF,GACtC,MAAM,OAACgB,EAAA,OAAQR,GAAUR,EACnBgG,EAA2B,MAAhBhF,EAAOE,KAAe,IAAM,IACvC+E,EAA2B,MAAhBzF,EAAOU,KAAe,IAAM,IACvCnE,EAAOD,OAAOC,KAAKwI,GACnBW,EAAQ,IAAIC,MAAMpJ,EAAKxF,QAC7B,IAAIO,EAAGsH,EAAMhC,EACb,IAAKtF,EAAI,EAAGsH,EAAOrC,EAAKxF,OAAQO,EAAIsH,IAAQtH,EAC1CsF,EAAML,EAAKjF,GACXoO,EAAMpO,GAAK,CACT,CAACkO,GAAW5I,EACZ,CAAC6I,GAAWV,EAAKnI,IAGrB,OAAO8I,CACT,CAmQmBE,CAAyBb,EAAMvF,QACvC,GAAI6C,IAAU0C,EAAM,CACzB,GAAI1C,EAAO,EAETiD,EAAAA,EAAAA,GAAoBjD,EAAOnN,MAE3B,MAAMsK,EAAOtK,KAAKoL,YAClBiB,EAAY/B,GACZA,EAAKgC,QAAU,GAEbuD,GAAQzI,OAAOuJ,aAAad,KAC9Be,EAAAA,EAAAA,GAAkBf,EAAM7P,MAE1BA,KAAK2N,UAAY,GACjB3N,KAAKmN,MAAQ0C,EAEjB,CAEA5B,WAAAA,GACE,MAAM3D,EAAOtK,KAAKoL,YAElBpL,KAAKqQ,aAEDrQ,KAAK4N,qBACPtD,EAAKiE,QAAU,IAAIvO,KAAK4N,mBAE5B,CAEAiD,qBAAAA,CAAsBC,GACpB,MAAMxG,EAAOtK,KAAKoL,YACZmD,EAAUvO,KAAKwO,aACrB,IAAIuC,GAAe,EAEnB/Q,KAAKqQ,aAGL,MAAMW,EAAa1G,EAAK0D,SACxB1D,EAAK0D,SAAW3D,EAAUC,EAAKQ,OAAQR,GAGnCA,EAAKT,QAAU0E,EAAQ1E,QACzBkH,GAAe,EAEf1E,EAAY/B,GACZA,EAAKT,MAAQ0E,EAAQ1E,OAKvB7J,KAAKiR,gBAAgBH,IAGjBC,GAAgBC,IAAe1G,EAAK0D,WACtC/C,EAAajL,KAAMsK,EAAKgC,QAE5B,CAMArF,SAAAA,GACE,MAAMH,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAOqK,iBAAiBnR,KAAKiN,OACzCmE,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GAAW,GACpElR,KAAKiI,QAAUnB,EAAOwK,eAAeF,EAAQpR,KAAKuR,cAClDvR,KAAKkN,SAAWlN,KAAKiI,QAAQuJ,QAC7BxR,KAAK+M,gBAAkB,CAAC,CAC1B,CAMA0E,KAAAA,CAAMnQ,EAAOoQ,GACX,MAAOtG,YAAad,EAAM6C,MAAO0C,GAAQ7P,MACnC,OAACsL,EAAA,SAAQ0C,GAAY1D,EACrBiB,EAAQD,EAAOE,KAErB,IAEIpJ,EAAGoB,EAAK2H,EAFRwG,EAAmB,IAAVrQ,GAAeoQ,IAAU7B,EAAKhO,QAAgByI,EAAKsH,QAC5DC,EAAOvQ,EAAQ,GAAKgJ,EAAKgC,QAAQhL,EAAQ,GAG7C,IAAsB,IAAlBtB,KAAKkN,SACP5C,EAAKgC,QAAUuD,EACfvF,EAAKsH,SAAU,EACfzG,EAAS0E,MACJ,CAEH1E,GADEvD,EAAAA,EAAAA,GAAQiI,EAAKvO,IACNtB,KAAK8R,eAAexH,EAAMuF,EAAMvO,EAAOoQ,IACvCxK,EAAAA,EAAAA,GAAS2I,EAAKvO,IACdtB,KAAK+R,gBAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GAExC1R,KAAKgS,mBAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GAGtD,MAAMO,EAA6BA,IAAqB,OAAfzO,EAAI+H,IAAoBsG,GAAQrO,EAAI+H,GAASsG,EAAKtG,GAC3F,IAAKnJ,EAAI,EAAGA,EAAIsP,IAAStP,EACvBkI,EAAKgC,QAAQlK,EAAId,GAASkC,EAAM2H,EAAO/I,GACnCuP,IACEM,MACFN,GAAS,GAEXE,EAAOrO,GAGX8G,EAAKsH,QAAUD,EAGb3D,GACF/C,EAAajL,KAAMmL,EAEvB,CAaA6G,kBAAAA,CAAmB1H,EAAMuF,EAAMvO,EAAOoQ,GACpC,MAAM,OAACpG,EAAA,OAAQR,GAAUR,EACnBiB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,KACf0G,EAAS5G,EAAO6G,YAChBC,EAAc9G,IAAWR,EACzBK,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAEb,IAAKvH,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZ6J,EAAO/I,GAAK,CACV,CAACmJ,GAAQ6G,GAAe9G,EAAOmG,MAAMS,EAAOvI,GAAQA,GACpD,CAAC8B,GAAQX,EAAO2G,MAAM5B,EAAKlG,GAAQA,IAGvC,OAAOwB,CACT,CAaA2G,cAAAA,CAAexH,EAAMuF,EAAMvO,EAAOoQ,GAChC,MAAM,OAACjC,EAAA,OAAQE,GAAUrF,EACnBa,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAAOxH,EAEpB,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVsM,EAAGe,EAAOgC,MAAMtP,EAAK,GAAIwH,GACzBgF,EAAGgB,EAAO8B,MAAMtP,EAAK,GAAIwH,IAG7B,OAAOwB,CACT,CAaA4G,eAAAA,CAAgBzH,EAAMuF,EAAMvO,EAAOoQ,GACjC,MAAM,OAACjC,EAAA,OAAQE,GAAUrF,GACnB,SAAC+H,EAAW,aAAKC,EAAW,KAAOtS,KAAKkN,SACxC/B,EAAS,IAAIsF,MAAMiB,GACzB,IAAItP,EAAGsH,EAAMC,EAAOxH,EAEpB,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVsM,EAAGe,EAAOgC,OAAMc,EAAAA,EAAAA,GAAiBpQ,EAAMkQ,GAAW1I,GAClDgF,EAAGgB,EAAO8B,OAAMc,EAAAA,EAAAA,GAAiBpQ,EAAMmQ,GAAW3I,IAGtD,OAAOwB,CACT,CAKAqH,SAAAA,CAAU7I,GACR,OAAO3J,KAAKoL,YAAYkB,QAAQ3C,EAClC,CAKA8I,cAAAA,CAAe9I,GACb,OAAO3J,KAAKoL,YAAYyE,KAAKlG,EAC/B,CAKAC,UAAAA,CAAWX,EAAOkC,EAAQnB,GACxB,MAAMxJ,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZtC,EAAQqC,EAAOlC,EAAMuC,MAK3B,OAAO5B,EAJO,CACZvC,KAAMiC,EAAwB9I,GAAO,GACrCuH,OAAQoD,EAAOE,QAAQpC,EAAMuC,MAAMQ,eAEZlD,EAAOwB,EAAKX,MAAO,CAACK,QAC/C,CAKA0I,qBAAAA,CAAsBC,EAAO1J,EAAOkC,EAAQtB,GAC1C,MAAM+I,EAAczH,EAAOlC,EAAMuC,MACjC,IAAI1C,EAAwB,OAAhB8J,EAAuBC,IAAMD,EACzC,MAAM7K,EAAS8B,GAASsB,EAAOE,QAAQpC,EAAMuC,MACzC3B,GAAS9B,IACX8B,EAAM9B,OAASA,EACfe,EAAQc,EAAWC,EAAO+I,EAAa5S,KAAKoL,YAAYzB,QAE1DgJ,EAAMtR,IAAMD,KAAKC,IAAIsR,EAAMtR,IAAKyH,GAChC6J,EAAMlP,IAAMrC,KAAKqC,IAAIkP,EAAMlP,IAAKqF,EAClC,CAKAgK,SAAAA,CAAU7J,EAAO8J,GACf,MAAMzI,EAAOtK,KAAKoL,YACZkB,EAAUhC,EAAKgC,QACfqF,EAASrH,EAAKsH,SAAW3I,IAAUqB,EAAKgB,OACxC5B,EAAO4C,EAAQzK,OACfmR,EAAahT,KAAKiQ,eAAehH,GACjCY,EA5YUoJ,EAACF,EAAUzI,EAAM9J,IAAUuS,IAAazI,EAAK4I,QAAU5I,EAAK0D,UAC3E,CAAC3G,KAAMiC,EAAwB9I,GAAO,GAAOuH,OAAQ,MA2YxCkL,CAAYF,EAAUzI,EAAMtK,KAAKQ,OACzCmS,EAAQ,CAACtR,IAAK8R,OAAOC,kBAAmB3P,IAAK0P,OAAOE,oBACnDhS,IAAKiS,EAAU7P,IAAK8P,GArf/B,SAAuBtK,GACrB,MAAM,IAAC5H,EAAG,IAAEoC,EAAG,WAAE+P,EAAU,WAAEC,GAAcxK,EAAMyK,gBACjD,MAAO,CACLrS,IAAKmS,EAAanS,EAAM8R,OAAOE,kBAC/B5P,IAAKgQ,EAAahQ,EAAM0P,OAAOC,kBAEnC,CA+e2CM,CAAcV,GACrD,IAAI5Q,EAAG+I,EAEP,SAASwI,IACPxI,EAASmB,EAAQlK,GACjB,MAAM8H,EAAaiB,EAAO6H,EAAWxH,MACrC,QAAQrB,EAAAA,EAAAA,GAASgB,EAAOlC,EAAMuC,QAAU8H,EAAWpJ,GAAcqJ,EAAWrJ,CAC9E,CAEA,IAAK9H,EAAI,EAAGA,EAAIsH,IACViK,MAGJ3T,KAAK0S,sBAAsBC,EAAO1J,EAAOkC,EAAQtB,IAC7C8H,MALkBvP,GAUxB,GAAIuP,EAEF,IAAKvP,EAAIsH,EAAO,EAAGtH,GAAK,IAAKA,EAC3B,IAAIuR,IAAJ,CAGA3T,KAAK0S,sBAAsBC,EAAO1J,EAAOkC,EAAQtB,GACjD,MAGJ,OAAO8I,CACT,CAEAiB,kBAAAA,CAAmB3K,GACjB,MAAMkC,EAASnL,KAAKoL,YAAYkB,QAC1BvE,EAAS,GACf,IAAI3F,EAAGsH,EAAMZ,EAEb,IAAK1G,EAAI,EAAGsH,EAAOyB,EAAOtJ,OAAQO,EAAIsH,IAAQtH,EAC5C0G,EAAQqC,EAAO/I,GAAG6G,EAAMuC,OACpBrB,EAAAA,EAAAA,GAASrB,IACXf,EAAO5E,KAAK2F,GAGhB,OAAOf,CACT,CAMA8L,cAAAA,GACE,OAAO,CACT,CAKAC,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZE,EAAShB,EAAKgB,OACdR,EAASR,EAAKQ,OACdK,EAASnL,KAAKwS,UAAU7I,GAC9B,MAAO,CACLoK,MAAOzI,EAAS,GAAKA,EAAO0I,iBAAiB7I,EAAOG,EAAOE,OAAS,GACpE1C,MAAOgC,EAAS,GAAKA,EAAOkJ,iBAAiB7I,EAAOL,EAAOU,OAAS,GAExE,CAKA7J,OAAAA,CAAQqI,GACN,MAAMM,EAAOtK,KAAKoL,YAClBpL,KAAKmG,OAAO6D,GAAQ,WACpBM,EAAK2J,MAlpBT,SAAgBnL,GACd,IAAIoL,EAAGtF,EAAGuF,EAAGC,EAWb,OATIlN,EAAAA,EAAAA,GAAS4B,IACXoL,EAAIpL,EAAMuL,IACVzF,EAAI9F,EAAMwL,MACVH,EAAIrL,EAAMyL,OACVH,EAAItL,EAAM0L,MAEVN,EAAItF,EAAIuF,EAAIC,EAAItL,EAGX,CACLuL,IAAKH,EACLI,MAAO1F,EACP2F,OAAQJ,EACRK,KAAMJ,EACNK,UAAoB,IAAV3L,EAEd,CA+nBiB4L,EAAO3F,EAAAA,EAAAA,GAAe/O,KAAKiI,QAAQ0M,KAjqBpD,SAAqBlF,EAAQE,EAAQzG,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMwF,EAAI1F,EAAUyG,EAAQvG,GACtByF,EAAI3F,EAAU2G,EAAQzG,GAE5B,MAAO,CACLmL,IAAK1F,EAAEtF,IACPiL,MAAO5F,EAAErF,IACTkL,OAAQ5F,EAAErN,MACVkT,KAAM9F,EAAEpN,MAEZ,CAopB0DsT,CAAYtK,EAAKmF,OAAQnF,EAAKqF,OAAQ3P,KAAK6T,mBACnG,CAKA1N,MAAAA,CAAO6D,GAAO,CAEd3H,IAAAA,GACE,MAAMyK,EAAM9M,KAAK6M,KACXrM,EAAQR,KAAKQ,MACb8J,EAAOtK,KAAKoL,YACZyJ,EAAWvK,EAAKuF,MAAQ,GACxBiF,EAAOtU,EAAMuU,UACb7O,EAAS,GACT5E,EAAQtB,KAAKsN,YAAc,EAC3BoE,EAAQ1R,KAAKuN,YAAesH,EAAShT,OAASP,EAC9C0T,EAA0BhV,KAAKiI,QAAQ+M,wBAC7C,IAAI5S,EAMJ,IAJIkI,EAAKiE,SACPjE,EAAKiE,QAAQlM,KAAKyK,EAAKgI,EAAMxT,EAAOoQ,GAGjCtP,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CACtC,MAAM6S,EAAUJ,EAASzS,GACrB6S,EAAQ/B,SAGR+B,EAAQ/O,QAAU8O,EACpB9O,EAAO/C,KAAK8R,GAEZA,EAAQ5S,KAAKyK,EAAKgI,GAEtB,CAEA,IAAK1S,EAAI,EAAGA,EAAI8D,EAAOrE,SAAUO,EAC/B8D,EAAO9D,GAAGC,KAAKyK,EAAKgI,EAExB,CASAI,QAAAA,CAASvL,EAAOzD,GACd,MAAM8D,EAAO9D,EAAS,SAAW,UACjC,YAAiB5F,IAAVqJ,GAAuB3J,KAAKoL,YAAYmD,QAC3CvO,KAAKmV,6BAA6BnL,GAClChK,KAAKoV,0BAA0BzL,GAAS,EAAGK,EACjD,CAKAuH,UAAAA,CAAW5H,EAAOzD,EAAQ8D,GACxB,MAAMuE,EAAUvO,KAAKwO,aACrB,IAAI6G,EACJ,GAAI1L,GAAS,GAAKA,EAAQ3J,KAAKoL,YAAYyE,KAAKhO,OAAQ,CACtD,MAAMoT,EAAUjV,KAAKoL,YAAYyE,KAAKlG,GACtC0L,EAAUJ,EAAQvH,WACfuH,EAAQvH,SA5jBjB,SAA2B4H,EAAQ3L,EAAOsL,GACxC,OAAOM,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BpP,QAAQ,EACRsP,UAAW7L,EACXwB,YAAQ7K,EACRmV,SAAKnV,EACL2U,UACAtL,QACAK,KAAM,UACNrJ,KAAM,QAEV,CAijB4B+U,CAAkB1V,KAAKuR,aAAc5H,EAAOsL,IAClEI,EAAQlK,OAASnL,KAAKwS,UAAU7I,GAChC0L,EAAQI,IAAMlH,EAAQsB,KAAKlG,GAC3B0L,EAAQ1L,MAAQ0L,EAAQG,UAAY7L,OAEpC0L,EAAUrV,KAAK0N,WACZ1N,KAAK0N,SA/kBd,SAA8B4H,EAAQ3L,GACpC,OAAO4L,EAAAA,EAAAA,GAAcD,EACnB,CACEpP,QAAQ,EACRqI,aAASjO,EACT2J,aAAcN,EACdA,QACAK,KAAM,UACNrJ,KAAM,WAGZ,CAokByBgV,CAAqB3V,KAAKQ,MAAM+Q,aAAcvR,KAAK2J,QACtE0L,EAAQ9G,QAAUA,EAClB8G,EAAQ1L,MAAQ0L,EAAQpL,aAAejK,KAAK2J,MAK9C,OAFA0L,EAAQnP,SAAWA,EACnBmP,EAAQrL,KAAOA,EACRqL,CACT,CAMAF,4BAAAA,CAA6BnL,GAC3B,OAAOhK,KAAK4V,uBAAuB5V,KAAK4N,mBAAmBhC,GAAI5B,EACjE,CAOAoL,yBAAAA,CAA0BzL,EAAOK,GAC/B,OAAOhK,KAAK4V,uBAAuB5V,KAAK6N,gBAAgBjC,GAAI5B,EAAML,EACpE,CAKAiM,sBAAAA,CAAuBC,GAAsC,IAAzB7L,EAAApI,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAO,UAAW+H,EAAK/H,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EACzD,MAAM4F,EAAkB,WAAT8D,EACT8L,EAAQ9V,KAAK+M,gBACbgJ,EAAWF,EAAc,IAAM7L,EAC/ByC,EAASqJ,EAAMC,GACfC,EAAUhW,KAAKwN,sBAAuByI,EAAAA,EAAAA,GAAQtM,GACpD,GAAI8C,EACF,OAAOD,EAAiBC,EAAQuJ,GAElC,MAAMlP,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAOoP,wBAAwBlW,KAAKiN,MAAO4I,GACvDM,EAAWjQ,EAAS,CAAC,GAAG2P,SAAoB,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFzE,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GACnDkF,EAAQhP,OAAOC,KAAKC,EAAAA,EAASuN,SAASgB,IAItC9N,EAASjB,EAAOuP,oBAAoBjF,EAAQgF,GADlCf,IAAMrV,KAAKuR,WAAW5H,EAAOzD,EAAQ8D,IACamM,GAalE,OAXIpO,EAAOG,UAGTH,EAAOG,QAAU8N,EAKjBF,EAAMC,GAAY3O,OAAOkP,OAAO9J,EAAiBzE,EAAQiO,KAGpDjO,CACT,CAMAwO,kBAAAA,CAAmB5M,EAAO6M,EAAYtQ,GACpC,MAAM1F,EAAQR,KAAKQ,MACbsV,EAAQ9V,KAAK+M,gBACbgJ,EAAW,aAAaS,IACxB/J,EAASqJ,EAAMC,GACrB,GAAItJ,EACF,OAAOA,EAET,IAAIxE,EACJ,IAAgC,IAA5BzH,EAAMyH,QAAQV,UAAqB,CACrC,MAAMT,EAAS9G,KAAKQ,MAAMsG,OACpBoK,EAAYpK,EAAO2P,0BAA0BzW,KAAKiN,MAAOuJ,GACzDpF,EAAStK,EAAOuK,gBAAgBrR,KAAKwO,aAAc0C,GACzDjJ,EAAUnB,EAAOwK,eAAeF,EAAQpR,KAAKuR,WAAW5H,EAAOzD,EAAQsQ,IAEzE,MAAMlO,EAAa,IAAIzB,EAAWrG,EAAOyH,GAAWA,EAAQK,YAI5D,OAHIL,GAAWA,EAAQyO,aACrBZ,EAAMC,GAAY3O,OAAOkP,OAAOhO,IAE3BA,CACT,CAMAqO,gBAAAA,CAAiB1O,GACf,GAAKA,EAAQC,QAGb,OAAOlI,KAAKqN,iBAAmBrN,KAAKqN,eAAiBjG,OAAOe,OAAO,CAAC,EAAGF,GACzE,CAMA2O,cAAAA,CAAe5M,EAAM6M,GACnB,OAAQA,GAAiBtK,EAAmBvC,IAAShK,KAAKQ,MAAMsW,mBAClE,CAKAC,iBAAAA,CAAkBzV,EAAO0I,GACvB,MAAMgN,EAAYhX,KAAKoV,0BAA0B9T,EAAO0I,GAClDiN,EAA0BjX,KAAKqN,eAC/BwJ,EAAgB7W,KAAK2W,iBAAiBK,GACtCJ,EAAiB5W,KAAK4W,eAAe5M,EAAM6M,IAAmBA,IAAkBI,EAEtF,OADAjX,KAAKkX,oBAAoBL,EAAe7M,EAAMgN,GACvC,CAACH,gBAAeD,iBACzB,CAMAO,aAAAA,CAAclC,EAAStL,EAAO9B,EAAYmC,GACpCuC,EAAmBvC,GACrB5C,OAAOe,OAAO8M,EAASpN,GAEvB7H,KAAKuW,mBAAmB5M,EAAOK,GAAM7D,OAAO8O,EAASpN,EAEzD,CAMAqP,mBAAAA,CAAoBL,EAAe7M,EAAMhC,GACnC6O,IAAkBtK,EAAmBvC,IACvChK,KAAKuW,wBAAmBjW,EAAW0J,GAAM7D,OAAO0Q,EAAe7O,EAEnE,CAKAoP,SAAAA,CAAUnC,EAAStL,EAAOK,EAAM9D,GAC9B+O,EAAQ/O,OAASA,EACjB,MAAM+B,EAAUjI,KAAKkV,SAASvL,EAAOzD,GACrClG,KAAKuW,mBAAmB5M,EAAOK,EAAM9D,GAAQC,OAAO8O,EAAS,CAG3DhN,SAAW/B,GAAUlG,KAAK2W,iBAAiB1O,IAAaA,GAE5D,CAEAoP,gBAAAA,CAAiBpC,EAAShL,EAAcN,GACtC3J,KAAKoX,UAAUnC,EAAStL,EAAO,UAAU,EAC3C,CAEA2N,aAAAA,CAAcrC,EAAShL,EAAcN,GACnC3J,KAAKoX,UAAUnC,EAAStL,EAAO,UAAU,EAC3C,CAKA4N,wBAAAA,GACE,MAAMtC,EAAUjV,KAAKoL,YAAYmD,QAE7B0G,GACFjV,KAAKoX,UAAUnC,OAAS3U,EAAW,UAAU,EAEjD,CAKAkX,qBAAAA,GACE,MAAMvC,EAAUjV,KAAKoL,YAAYmD,QAE7B0G,GACFjV,KAAKoX,UAAUnC,OAAS3U,EAAW,UAAU,EAEjD,CAKA2Q,eAAAA,CAAgBH,GACd,MAAMjB,EAAO7P,KAAKmN,MACZ0H,EAAW7U,KAAKoL,YAAYyE,KAGlC,IAAK,MAAOjJ,EAAQ6Q,EAAMC,KAAS1X,KAAK2N,UACtC3N,KAAK4G,GAAQ6Q,EAAMC,GAErB1X,KAAK2N,UAAY,GAEjB,MAAMgK,EAAU9C,EAAShT,OACnB+V,EAAU/H,EAAKhO,OACf6P,EAAQtQ,KAAKC,IAAIuW,EAASD,GAE5BjG,GAKF1R,KAAKyR,MAAM,EAAGC,GAGZkG,EAAUD,EACZ3X,KAAK6X,gBAAgBF,EAASC,EAAUD,EAAS7G,GACxC8G,EAAUD,GACnB3X,KAAK8X,gBAAgBF,EAASD,EAAUC,EAE5C,CAKAC,eAAAA,CAAgBvW,EAAOoQ,GAAgC,IAAzBZ,IAAAlP,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,KAAAA,UAAA,GAC5B,MAAM0I,EAAOtK,KAAKoL,YACZyE,EAAOvF,EAAKuF,KACZxG,EAAM/H,EAAQoQ,EACpB,IAAItP,EAEJ,MAAM2V,EAAQC,IAEZ,IADAA,EAAInW,QAAU6P,EACTtP,EAAI4V,EAAInW,OAAS,EAAGO,GAAKiH,EAAKjH,IACjC4V,EAAI5V,GAAK4V,EAAI5V,EAAIsP,EACnB,EAIF,IAFAqG,EAAKlI,GAEAzN,EAAId,EAAOc,EAAIiH,IAAOjH,EACzByN,EAAKzN,GAAK,IAAIpC,KAAK6N,gBAGjB7N,KAAKkN,UACP6K,EAAKzN,EAAKgC,SAEZtM,KAAKyR,MAAMnQ,EAAOoQ,GAEdZ,GACF9Q,KAAKiY,eAAepI,EAAMvO,EAAOoQ,EAAO,QAE5C,CAEAuG,cAAAA,CAAehD,EAAS3T,EAAOoQ,EAAO1H,GAAO,CAK7C8N,eAAAA,CAAgBxW,EAAOoQ,GACrB,MAAMpH,EAAOtK,KAAKoL,YAClB,GAAIpL,KAAKkN,SAAU,CACjB,MAAMgL,EAAU5N,EAAKgC,QAAQ6L,OAAO7W,EAAOoQ,GACvCpH,EAAK0D,UACP3B,EAAY/B,EAAM4N,GAGtB5N,EAAKuF,KAAKsI,OAAO7W,EAAOoQ,EAC1B,CAKA0G,KAAAA,CAAMC,GACJ,GAAIrY,KAAKkN,SACPlN,KAAK2N,UAAUxK,KAAKkV,OACf,CACL,MAAOzR,EAAQ6Q,EAAMC,GAAQW,EAC7BrY,KAAK4G,GAAQ6Q,EAAMC,GAErB1X,KAAKQ,MAAM8X,aAAanV,KAAK,CAACnD,KAAK2J,SAAU0O,GAC/C,CAEAE,WAAAA,GACE,MAAM7G,EAAQ9P,UAAUC,OACxB7B,KAAKoY,MAAM,CAAC,kBAAmBpY,KAAKwO,aAAaqB,KAAKhO,OAAS6P,EAAOA,GACxE,CAEA8G,UAAAA,GACExY,KAAKoY,MAAM,CAAC,kBAAmBpY,KAAKoL,YAAYyE,KAAKhO,OAAS,EAAG,GACnE,CAEA4W,YAAAA,GACEzY,KAAKoY,MAAM,CAAC,kBAAmB,EAAG,GACpC,CAEAM,aAAAA,CAAcpX,EAAOoQ,GACfA,GACF1R,KAAKoY,MAAM,CAAC,kBAAmB9W,EAAOoQ,IAExC,MAAMiH,EAAW/W,UAAUC,OAAS,EAChC8W,GACF3Y,KAAKoY,MAAM,CAAC,kBAAmB9W,EAAOqX,GAE1C,CAEAC,cAAAA,GACE5Y,KAAKoY,MAAM,CAAC,kBAAmB,EAAGxW,UAAUC,QAC9C,ECvgCa,MAAMgX,UAA2BlM,EAE9CC,UAAY,WAKZA,gBAAkB,CAChBgB,oBAAoB,EACpBC,gBAAiB,MACjBtG,UAAW,CAETuR,eAAe,EAEfC,cAAc,GAEhBzQ,WAAY,CACV0Q,QAAS,CACPrY,KAAM,SACNkH,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAI7HoR,OAAQ,MAGRC,SAAU,EAGVC,cAAe,IAGfC,OAAQ,OAGRC,QAAS,EAETjK,UAAW,KAGbxC,mBAAqB,CACnB0M,YAAcC,GAAkB,YAATA,EACvBC,WAAaD,GAAkB,YAATA,IAAuBA,EAAKE,WAAW,gBAAkBF,EAAKE,WAAW,oBAMjG7M,iBAAmB,CACjB8M,YAAa,EAGbC,QAAS,CACPC,OAAQ,CACN1H,OAAQ,CACN2H,cAAAA,CAAerZ,GACb,MAAMqP,EAAOrP,EAAMqP,KACnB,GAAIA,EAAKqC,OAAOrQ,QAAUgO,EAAKC,SAASjO,OAAQ,CAC9C,MAAOqQ,QAAQ,WAAC4H,EAAA,MAAYxV,IAAU9D,EAAMoZ,OAAO3R,QAEnD,OAAO4H,EAAKqC,OAAO6H,KAAI,CAAChG,EAAO3R,KAC7B,MACM4X,EADOxZ,EAAMuP,eAAe,GACf7E,WAAWgK,SAAS9S,GAEvC,MAAO,CACL6X,KAAMlG,EACNmG,UAAWF,EAAMG,gBACjBC,YAAaJ,EAAMK,YACnBC,UAAWhW,EACXiW,UAAWP,EAAMQ,YACjBV,WAAYA,EACZ5G,QAAS1S,EAAMia,kBAAkBrY,GAGjCuH,MAAOvH,EACR,IAGL,MAAO,EACT,GAGFsY,OAAAA,CAAQC,EAAGC,EAAYhB,GACrBA,EAAOpZ,MAAMqa,qBAAqBD,EAAWjR,OAC7CiQ,EAAOpZ,MAAM2F,QACf,KAKNpG,WAAAA,CAAYS,EAAOyJ,GACjB6Q,MAAMta,EAAOyJ,GAEbjK,KAAKwN,qBAAsB,EAC3BxN,KAAK+a,iBAAcza,EACnBN,KAAKgb,iBAAc1a,EACnBN,KAAKib,aAAU3a,EACfN,KAAKkb,aAAU5a,CACjB,CAEAyN,UAAAA,GAAc,CAKd0D,KAAAA,CAAMnQ,EAAOoQ,GACX,MAAM7B,EAAO7P,KAAKwO,aAAaqB,KACzBvF,EAAOtK,KAAKoL,YAElB,IAAsB,IAAlBpL,KAAKkN,SACP5C,EAAKgC,QAAUuD,MACV,CACL,IAOIzN,EAAGsH,EAPHyR,EAAU/Y,IAAOyN,EAAKzN,GAE1B,IAAI8E,EAAAA,EAAAA,GAAS2I,EAAKvO,IAAS,CACzB,MAAM,IAACoG,EAAM,SAAW1H,KAAKkN,SAC7BiO,EAAU/Y,KAAOmQ,EAAAA,EAAAA,GAAiB1C,EAAKzN,GAAIsF,GAI7C,IAAKtF,EAAId,EAAOoI,EAAOpI,EAAQoQ,EAAOtP,EAAIsH,IAAQtH,EAChDkI,EAAKgC,QAAQlK,GAAK+Y,EAAO/Y,GAG/B,CAKAgZ,YAAAA,GACE,OAAOC,EAAAA,EAAAA,GAAUrb,KAAKiI,QAAQiR,SAAW,GAC3C,CAKAoC,iBAAAA,GACE,OAAOD,EAAAA,EAAAA,GAAUrb,KAAKiI,QAAQkR,cAChC,CAMAoC,mBAAAA,GACE,IAAIla,EAAMma,EAAAA,EACN/X,GAAO+X,EAAAA,EAEX,IAAK,IAAIpZ,EAAI,EAAGA,EAAIpC,KAAKQ,MAAMqP,KAAKC,SAASjO,SAAUO,EACrD,GAAIpC,KAAKQ,MAAMib,iBAAiBrZ,IAAMpC,KAAKQ,MAAMuP,eAAe3N,GAAGzB,OAASX,KAAKiN,MAAO,CACtF,MAAM/B,EAAalL,KAAKQ,MAAMuP,eAAe3N,GAAG8I,WAC1CgO,EAAWhO,EAAWkQ,eACtBjC,EAAgBjO,EAAWoQ,oBAEjCja,EAAMD,KAAKC,IAAIA,EAAK6X,GACpBzV,EAAMrC,KAAKqC,IAAIA,EAAKyV,EAAWC,GAInC,MAAO,CACLD,SAAU7X,EACV8X,cAAe1V,EAAMpC,EAEzB,CAKA8E,MAAAA,CAAO6D,GACL,MAAMxJ,EAAQR,KAAKQ,OACb,UAACuU,GAAavU,EACd8J,EAAOtK,KAAKoL,YACZsQ,EAAOpR,EAAKuF,KACZwJ,EAAUrZ,KAAK2b,oBAAsB3b,KAAK4b,aAAaF,GAAQ1b,KAAKiI,QAAQoR,QAC5EwC,EAAUza,KAAKqC,KAAKrC,KAAKC,IAAI0T,EAAU+G,MAAO/G,EAAUgH,QAAU1C,GAAW,EAAG,GAChFJ,EAAS7X,KAAKC,KAAI2a,EAAAA,EAAAA,GAAahc,KAAKiI,QAAQgR,OAAQ4C,GAAU,GAC9DI,EAAcjc,KAAKkc,eAAelc,KAAK2J,QAKvC,cAACwP,EAAA,SAAeD,GAAYlZ,KAAKub,uBACjC,OAACY,EAAA,OAAQC,EAAA,QAAQnB,EAAA,QAASC,GAjNpC,SAA2BhC,EAAUC,EAAeF,GAClD,IAAIkD,EAAS,EACTC,EAAS,EACTnB,EAAU,EACVC,EAAU,EAEd,GAAI/B,EAAgBqC,EAAAA,EAAK,CACvB,MAAMa,EAAanD,EACboD,EAAWD,EAAalD,EACxBoD,EAASnb,KAAKob,IAAIH,GAClBI,EAASrb,KAAKsb,IAAIL,GAClBM,EAAOvb,KAAKob,IAAIF,GAChBM,EAAOxb,KAAKsb,IAAIJ,GAChBO,EAAUA,CAACC,EAAOC,EAAG5I,KAAM6I,EAAAA,EAAAA,GAAcF,EAAOT,EAAYC,GAAU,GAAQ,EAAIlb,KAAKqC,IAAIsZ,EAAGA,EAAI9D,EAAQ9E,EAAGA,EAAI8E,GACjHgE,EAAUA,CAACH,EAAOC,EAAG5I,KAAM6I,EAAAA,EAAAA,GAAcF,EAAOT,EAAYC,GAAU,IAAS,EAAIlb,KAAKC,IAAI0b,EAAGA,EAAI9D,EAAQ9E,EAAGA,EAAI8E,GAClHiE,EAAOL,EAAQ,EAAGN,EAAQI,GAC1BQ,EAAON,EAAQO,EAAAA,EAASX,EAAQG,GAChCS,EAAOJ,EAAQK,EAAAA,EAAIf,EAAQI,GAC3BY,EAAON,EAAQK,EAAAA,EAAKF,EAAAA,EAASX,EAAQG,GAC3CT,GAAUe,EAAOG,GAAQ,EACzBjB,GAAUe,EAAOI,GAAQ,EACzBtC,IAAYiC,EAAOG,GAAQ,EAC3BnC,IAAYiC,EAAOI,GAAQ,EAE7B,MAAO,CAACpB,SAAQC,SAAQnB,UAASC,UACnC,CAwL+CsC,CAAkBtE,EAAUC,EAAeF,GAChFwE,GAAY1I,EAAU+G,MAAQzC,GAAW8C,EACzCuB,GAAa3I,EAAUgH,OAAS1C,GAAW+C,EAC3CuB,EAAYvc,KAAKqC,IAAIrC,KAAKC,IAAIoc,EAAUC,GAAa,EAAG,GACxD1C,GAAc4C,EAAAA,EAAAA,GAAY5d,KAAKiI,QAAQmR,OAAQuE,GAE/CE,GAAgB7C,EADF5Z,KAAKqC,IAAIuX,EAAc/B,EAAQ,IACAjZ,KAAK8d,gCACxD9d,KAAKib,QAAUA,EAAUD,EACzBhb,KAAKkb,QAAUA,EAAUF,EAEzB1Q,EAAKyT,MAAQ/d,KAAKge,iBAElBhe,KAAKgb,YAAcA,EAAc6C,EAAe7d,KAAKie,qBAAqBje,KAAK2J,OAC/E3J,KAAK+a,YAAc3Z,KAAKqC,IAAIzD,KAAKgb,YAAc6C,EAAe5B,EAAa,GAE3Ejc,KAAKiY,eAAeyD,EAAM,EAAGA,EAAK7Z,OAAQmI,EAC5C,CAKAkU,cAAAA,CAAe9b,EAAG8N,GAChB,MAAM/G,EAAOnJ,KAAKiI,QACZqC,EAAOtK,KAAKoL,YACZ+N,EAAgBnZ,KAAKsb,oBAC3B,OAAIpL,GAAU/G,EAAK5B,UAAUuR,gBAAmB9Y,KAAKQ,MAAMia,kBAAkBrY,IAA0B,OAApBkI,EAAKgC,QAAQlK,IAAekI,EAAKuF,KAAKzN,GAAG8Q,OACnH,EAEFlT,KAAKme,uBAAuB7T,EAAKgC,QAAQlK,GAAK+W,EAAgBqC,EAAAA,EACvE,CAEAvD,cAAAA,CAAeyD,EAAMpa,EAAOoQ,EAAO1H,GACjC,MAAMkG,EAAiB,UAATlG,EACRxJ,EAAQR,KAAKQ,MACbuU,EAAYvU,EAAMuU,UAElBqJ,EADO5d,EAAMyH,QACQV,UACrB8W,GAAWtJ,EAAUP,KAAOO,EAAUT,OAAS,EAC/CgK,GAAWvJ,EAAUV,IAAMU,EAAUR,QAAU,EAC/CwE,EAAe7I,GAASkO,EAAcrF,aACtCgC,EAAchC,EAAe,EAAI/Y,KAAK+a,YACtCC,EAAcjC,EAAe,EAAI/Y,KAAKgb,aACtC,cAACnE,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GACtE,IACI5H,EADAia,EAAarc,KAAKob,eAGtB,IAAKhZ,EAAI,EAAGA,EAAId,IAASc,EACvBia,GAAcrc,KAAKke,eAAe9b,EAAG8N,GAGvC,IAAK9N,EAAId,EAAOc,EAAId,EAAQoQ,IAAStP,EAAG,CACtC,MAAM+W,EAAgBnZ,KAAKke,eAAe9b,EAAG8N,GACvCqO,EAAM7C,EAAKtZ,GACXyF,EAAa,CACjB6G,EAAG2P,EAAUre,KAAKib,QAClBtM,EAAG2P,EAAUte,KAAKkb,QAClBmB,aACAC,SAAUD,EAAalD,EACvBA,gBACA6B,cACAD,eAEEnE,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGmc,EAAIrY,OAAS,SAAW8D,IAElGqS,GAAclD,EAEdnZ,KAAKmX,cAAcoH,EAAKnc,EAAGyF,EAAYmC,EACzC,CACF,CAEAgU,cAAAA,GACE,MAAM1T,EAAOtK,KAAKoL,YACZoT,EAAWlU,EAAKuF,KACtB,IACIzN,EADA2b,EAAQ,EAGZ,IAAK3b,EAAI,EAAGA,EAAIoc,EAAS3c,OAAQO,IAAK,CACpC,MAAM0G,EAAQwB,EAAKgC,QAAQlK,GACb,OAAV0G,GAAmB2V,MAAM3V,KAAU9I,KAAKQ,MAAMia,kBAAkBrY,IAAOoc,EAASpc,GAAG8Q,SACrF6K,GAAS3c,KAAKsd,IAAI5V,GAEtB,CAEA,OAAOiV,CACT,CAEAI,sBAAAA,CAAuBrV,GACrB,MAAMiV,EAAQ/d,KAAKoL,YAAY2S,MAC/B,OAAIA,EAAQ,IAAMU,MAAM3V,GACf0S,EAAAA,GAAOpa,KAAKsd,IAAI5V,GAASiV,GAE3B,CACT,CAEAjK,gBAAAA,CAAiBnK,GACf,MAAMW,EAAOtK,KAAKoL,YACZ5K,EAAQR,KAAKQ,MACb0R,EAAS1R,EAAMqP,KAAKqC,QAAU,GAC9BpJ,GAAQ6V,EAAAA,EAAAA,GAAarU,EAAKgC,QAAQ3C,GAAQnJ,EAAMyH,QAAQ2W,QAE9D,MAAO,CACL7K,MAAO7B,EAAOvI,IAAU,GACxBb,QAEJ,CAEA6S,iBAAAA,CAAkBD,GAChB,IAAIjY,EAAM,EACV,MAAMjD,EAAQR,KAAKQ,MACnB,IAAI4B,EAAGsH,EAAMY,EAAMY,EAAYjD,EAE/B,IAAKyT,EAEH,IAAKtZ,EAAI,EAAGsH,EAAOlJ,EAAMqP,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EACzD,GAAI5B,EAAMib,iBAAiBrZ,GAAI,CAC7BkI,EAAO9J,EAAMuP,eAAe3N,GAC5BsZ,EAAOpR,EAAKuF,KACZ3E,EAAaZ,EAAKY,WAClB,MAKN,IAAKwQ,EACH,OAAO,EAGT,IAAKtZ,EAAI,EAAGsH,EAAOgS,EAAK7Z,OAAQO,EAAIsH,IAAQtH,EAC1C6F,EAAUiD,EAAWkK,0BAA0BhT,GACnB,UAAxB6F,EAAQ4W,cACVpb,EAAMrC,KAAKqC,IAAIA,EAAKwE,EAAQuS,aAAe,EAAGvS,EAAQ6W,kBAAoB,IAG9E,OAAOrb,CACT,CAEAmY,YAAAA,CAAaF,GACX,IAAIjY,EAAM,EAEV,IAAK,IAAIrB,EAAI,EAAGsH,EAAOgS,EAAK7Z,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAM6F,EAAUjI,KAAKoV,0BAA0BhT,GAC/CqB,EAAMrC,KAAKqC,IAAIA,EAAKwE,EAAQ8W,QAAU,EAAG9W,EAAQ+W,aAAe,EAClE,CACA,OAAOvb,CACT,CAMAwa,oBAAAA,CAAqBhU,GACnB,IAAIgV,EAAmB,EAEvB,IAAK,IAAI7c,EAAI,EAAGA,EAAI6H,IAAgB7H,EAC9BpC,KAAKQ,MAAMib,iBAAiBrZ,KAC9B6c,GAAoBjf,KAAKkc,eAAe9Z,IAI5C,OAAO6c,CACT,CAKA/C,cAAAA,CAAejS,GACb,OAAO7I,KAAKqC,KAAIsL,EAAAA,EAAAA,GAAe/O,KAAKQ,MAAMqP,KAAKC,SAAS7F,GAAciV,OAAQ,GAAI,EACpF,CAMApB,6BAAAA,GACE,OAAO9d,KAAKie,qBAAqBje,KAAKQ,MAAMqP,KAAKC,SAASjO,SAAW,CACvE,ECrYa,MAAMsd,UAAuBxS,EAE1CC,UAAY,OAKZA,gBAAkB,CAChBgB,mBAAoB,OACpBC,gBAAiB,QAEjBuR,UAAU,EACVC,UAAU,GAMZzS,iBAAmB,CACjBV,OAAQ,CACNoT,QAAS,CACP3e,KAAM,YAER4e,QAAS,CACP5e,KAAM,YAKZmN,UAAAA,GACE9N,KAAKwN,qBAAsB,EAC3BxN,KAAKyN,oBAAqB,EAC1BqN,MAAMhN,YACR,CAEA3H,MAAAA,CAAO6D,GACL,MAAMM,EAAOtK,KAAKoL,aACXmD,QAASiR,EAAM3P,KAAM4P,EAAS,GAAE,SAAEC,GAAYpV,EAE/CqV,EAAqB3f,KAAKQ,MAAMsW,oBACtC,IAAI,MAACxV,EAAA,MAAOoQ,IAASkO,EAAAA,EAAAA,GAAiCtV,EAAMmV,EAAQE,GAEpE3f,KAAKsN,WAAahM,EAClBtB,KAAKuN,WAAamE,GAEdmO,EAAAA,EAAAA,GAAoBvV,KACtBhJ,EAAQ,EACRoQ,EAAQ+N,EAAO5d,QAIjB2d,EAAKzY,OAAS/G,KAAKQ,MACnBgf,EAAKM,cAAgB9f,KAAK2J,MAC1B6V,EAAKO,aAAeL,EAASK,WAC7BP,EAAKC,OAASA,EAEd,MAAMxX,EAAUjI,KAAKmV,6BAA6BnL,GAC7ChK,KAAKiI,QAAQmX,WAChBnX,EAAQuS,YAAc,GAExBvS,EAAQ+X,QAAUhgB,KAAKiI,QAAQ+X,QAC/BhgB,KAAKmX,cAAcqI,OAAMlf,EAAW,CAClC2f,UAAWN,EACX1X,WACC+B,GAGHhK,KAAKiY,eAAewH,EAAQne,EAAOoQ,EAAO1H,EAC5C,CAEAiO,cAAAA,CAAewH,EAAQne,EAAOoQ,EAAO1H,GACnC,MAAMkG,EAAiB,UAATlG,GACR,OAACsB,EAAA,OAAQR,EAAA,SAAQkD,EAAA,SAAU0R,GAAY1f,KAAKoL,aAC5C,cAACyL,EAAa,eAAED,GAAkB5W,KAAK+W,kBAAkBzV,EAAO0I,GAChEuB,EAAQD,EAAOE,KACfC,EAAQX,EAAOU,MACf,SAAC6T,EAAA,QAAUW,GAAWhgB,KAAKiI,QAC3BiY,GAAeC,EAAAA,EAAAA,GAASd,GAAYA,EAAWlM,OAAOC,kBACtDgN,EAAepgB,KAAKQ,MAAMsW,qBAAuB5G,GAAkB,SAATlG,EAC1DX,EAAM/H,EAAQoQ,EACd2O,EAAcZ,EAAO5d,OAC3B,IAAIye,EAAahf,EAAQ,GAAKtB,KAAKwS,UAAUlR,EAAQ,GAErD,IAAK,IAAIc,EAAI,EAAGA,EAAIie,IAAeje,EAAG,CACpC,MAAMme,EAAQd,EAAOrd,GACfyF,EAAauY,EAAeG,EAAQ,GAE1C,GAAIne,EAAId,GAASc,GAAKiH,EAAK,CACzBxB,EAAW2Y,MAAO,EAClB,SAGF,MAAMrV,EAASnL,KAAKwS,UAAUpQ,GACxBqe,GAAWC,EAAAA,EAAAA,GAAcvV,EAAOM,IAChCkV,EAAS9Y,EAAW0D,GAASD,EAAOsV,iBAAiBzV,EAAOI,GAAQnJ,GACpEye,EAAShZ,EAAW4D,GAASyE,GAASuQ,EAAW3V,EAAOgW,eAAiBhW,EAAO8V,iBAAiB5S,EAAWhO,KAAK4J,WAAWkB,EAAQK,EAAQ6C,GAAY7C,EAAOM,GAAQrJ,GAE7KyF,EAAW2Y,KAAO/B,MAAMkC,IAAWlC,MAAMoC,IAAWJ,EACpD5Y,EAAWlE,KAAOvB,EAAI,GAAKhB,KAAMsd,IAAIvT,EAAOI,GAAS+U,EAAW/U,IAAW2U,EACvEF,IACFnY,EAAWsD,OAASA,EACpBtD,EAAW4N,IAAMiK,EAAS7P,KAAKzN,IAG7BwU,IACF/O,EAAWI,QAAU4O,GAAiB7W,KAAKoV,0BAA0BhT,EAAGme,EAAMra,OAAS,SAAW8D,IAG/FoW,GACHpgB,KAAKmX,cAAcoJ,EAAOne,EAAGyF,EAAYmC,GAG3CsW,EAAanV,CACf,CACF,CAKA0I,cAAAA,GACE,MAAMvJ,EAAOtK,KAAKoL,YACZmD,EAAUjE,EAAKiE,QACfwS,EAASxS,EAAQtG,SAAWsG,EAAQtG,QAAQuS,aAAe,EAC3D3K,EAAOvF,EAAKuF,MAAQ,GAC1B,IAAKA,EAAKhO,OACR,OAAOkf,EAET,MAAMC,EAAanR,EAAK,GAAG9G,KAAK/I,KAAKoV,0BAA0B,IACzD6L,EAAYpR,EAAKA,EAAKhO,OAAS,GAAGkH,KAAK/I,KAAKoV,0BAA0BvF,EAAKhO,OAAS,IAC1F,OAAOT,KAAKqC,IAAIsd,EAAQC,EAAYC,GAAa,CACnD,CAEA5e,IAAAA,GACE,MAAMiI,EAAOtK,KAAKoL,YAClBd,EAAKiE,QAAQ2S,oBAAoBlhB,KAAKQ,MAAMuU,UAAWzK,EAAKgB,OAAOE,MACnEsP,MAAMzY,MACR,ECxHF,SAAS8e,EAAaC,EAAS5V,EAAM1C,EAAOuY,GAC1C,MAAM,WAACnW,EAAU,KAAE2E,EAAA,QAAM+B,GAAWwP,EAC9B9V,EAASJ,EAAWE,YAAYE,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBoG,GAAW/B,EAAKhO,OAAQ,CAC5E,MAAMyf,EAAehW,EAAOiW,eAAiBC,EAAAA,EAAgBC,EAAAA,EAC7D,IAAKJ,EACH,OAAOC,EAAazR,EAAMrE,EAAM1C,GAC3B,GAAIoC,EAAWmC,eAAgB,CAIpC,MAAMqU,EAAK7R,EAAK,GACV8C,EAA+B,oBAAhB+O,EAAGC,UAA2BD,EAAGC,SAASnW,GAC/D,GAAImH,EAAO,CACT,MAAMrR,EAAQggB,EAAazR,EAAMrE,EAAM1C,EAAQ6J,GACzCtJ,EAAMiY,EAAazR,EAAMrE,EAAM1C,EAAQ6J,GAC7C,MAAO,CAACiP,GAAItgB,EAAMsgB,GAAIC,GAAIxY,EAAIwY,MAKpC,MAAO,CAACD,GAAI,EAAGC,GAAIhS,EAAKhO,OAAS,EACnC,CAUA,SAASigB,EAAyBthB,EAAOgL,EAAMuW,EAAUC,EAASX,GAChE,MAAM7X,EAAWhJ,EAAMyhB,+BACjBnZ,EAAQiZ,EAASvW,GACvB,IAAK,IAAIpJ,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAAG,CACrD,MAAM,MAACuH,EAAA,KAAOkG,GAAQrG,EAASpH,IACzB,GAACwf,EAAA,GAAIC,GAAMV,EAAa3X,EAASpH,GAAIoJ,EAAM1C,EAAOuY,GACxD,IAAK,IAAIa,EAAIN,EAAIM,GAAKL,IAAMK,EAAG,CAC7B,MAAMjN,EAAUpF,EAAKqS,GAChBjN,EAAQuL,MACXwB,EAAQ/M,EAAStL,EAAOuY,EAE5B,CACF,CACF,CA2BA,SAASC,EAAkB3hB,EAAOuhB,EAAUvW,EAAM4W,EAAkBC,GAClE,MAAMngB,EAAQ,GAEd,IAAKmgB,IAAqB7hB,EAAM8hB,cAAcP,GAC5C,OAAO7f,EAaT,OADA4f,EAAyBthB,EAAOgL,EAAMuW,GATf,SAAS9M,EAAShL,EAAcN,IAChD0Y,IAAqBE,EAAAA,EAAAA,GAAetN,EAASzU,EAAMuU,UAAW,KAG/DE,EAAQuN,QAAQT,EAASrT,EAAGqT,EAASpT,EAAGyT,IAC1ClgB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAEgE,GACzDzH,CACT,CAoCA,SAASugB,EAAyBjiB,EAAOuhB,EAAUvW,EAAM6V,EAAWe,EAAkBC,GACpF,IAAIngB,EAAQ,GACZ,MAAMwgB,EA5ER,SAAkClX,GAChC,MAAMmX,GAA8B,IAAvBnX,EAAKoX,QAAQ,KACpBC,GAA8B,IAAvBrX,EAAKoX,QAAQ,KAE1B,OAAO,SAASE,EAAKC,GACnB,MAAMC,EAASL,EAAOvhB,KAAKsd,IAAIoE,EAAIpU,EAAIqU,EAAIrU,GAAK,EAC1CuU,EAASJ,EAAOzhB,KAAKsd,IAAIoE,EAAInU,EAAIoU,EAAIpU,GAAK,EAChD,OAAOvN,KAAK8hB,KAAK9hB,KAAK+hB,IAAIH,EAAQ,GAAK5hB,KAAK+hB,IAAIF,EAAQ,GAC1D,CACF,CAmEyBG,CAAyB5X,GAChD,IAAI6X,EAAclQ,OAAOC,kBAyBzB,OADA0O,EAAyBthB,EAAOgL,EAAMuW,GAtBtC,SAAwB9M,EAAShL,EAAcN,GAC7C,MAAM6Y,EAAUvN,EAAQuN,QAAQT,EAASrT,EAAGqT,EAASpT,EAAGyT,GACxD,GAAIf,IAAcmB,EAChB,OAGF,MAAMc,EAASrO,EAAQsO,eAAenB,GAEtC,OADsBC,GAAoB7hB,EAAM8hB,cAAcgB,MACzCd,EACnB,OAGF,MAAMgB,EAAWd,EAAeX,EAAUuB,GACtCE,EAAWH,GACbnhB,EAAQ,CAAC,CAAC+S,UAAShL,eAAcN,UACjC0Z,EAAcG,GACLA,IAAaH,GAEtBnhB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAGOzH,CACT,CAYA,SAASuhB,EAAgBjjB,EAAOuhB,EAAUvW,EAAM6V,EAAWe,EAAkBC,GAC3E,OAAKA,GAAqB7hB,EAAM8hB,cAAcP,GAI9B,MAATvW,GAAiB6V,EAEpBoB,EAAyBjiB,EAAOuhB,EAAUvW,EAAM6V,EAAWe,EAAkBC,GA1EnF,SAA+B7hB,EAAOuhB,EAAUvW,EAAM4W,GACpD,IAAIlgB,EAAQ,GAYZ,OADA4f,EAAyBthB,EAAOgL,EAAMuW,GATtC,SAAwB9M,EAAShL,EAAcN,GAC7C,MAAM,WAAC0S,EAAA,SAAYC,GAAYrH,EAAQyO,SAAS,CAAC,aAAc,YAAatB,IACtE,MAACtF,IAAS6G,EAAAA,EAAAA,GAAkB1O,EAAS,CAACvG,EAAGqT,EAASrT,EAAGC,EAAGoT,EAASpT,KAEnEqO,EAAAA,EAAAA,GAAcF,EAAOT,EAAYC,IACnCpa,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,SAEvC,IAGOzH,CACT,CA2DM0hB,CAAsBpjB,EAAOuhB,EAAUvW,EAAM4W,GAJxC,EAMX,CAWA,SAASyB,EAAarjB,EAAOuhB,EAAUvW,EAAM6V,EAAWe,GACtD,MAAMlgB,EAAQ,GACR4hB,EAAuB,MAATtY,EAAe,WAAa,WAChD,IAAIuY,GAAiB,EAWrB,OATAjC,EAAyBthB,EAAOgL,EAAMuW,GAAU,CAAC9M,EAAShL,EAAcN,KAClEsL,EAAQ6O,GAAa/B,EAASvW,GAAO4W,KACvClgB,EAAMiB,KAAK,CAAC8R,UAAShL,eAAcN,UACnCoa,EAAiBA,GAAkB9O,EAAQuN,QAAQT,EAASrT,EAAGqT,EAASpT,EAAGyT,OAM3Ef,IAAc0C,EACT,GAEF7hB,CACT,CAMA,IAAA8hB,EAAe,CAEblC,2BAGAmC,MAAO,CAYLta,KAAAA,CAAMnJ,EAAOma,EAAG1S,EAASma,GACvB,MAAML,GAAWmC,EAAAA,EAAAA,GAAoBvJ,EAAGna,GAElCgL,EAAOvD,EAAQuD,MAAQ,IACvB6W,EAAmBpa,EAAQoa,mBAAoB,EAC/CngB,EAAQ+F,EAAQoZ,UAClBc,EAAkB3hB,EAAOuhB,EAAUvW,EAAM4W,EAAkBC,GAC3DoB,EAAgBjjB,EAAOuhB,EAAUvW,GAAM,EAAO4W,EAAkBC,GAC9DxN,EAAW,GAEjB,OAAK3S,EAAML,QAIXrB,EAAMyhB,+BAA+BjhB,SAASsJ,IAC5C,MAAMX,EAAQzH,EAAM,GAAGyH,MACjBsL,EAAU3K,EAAKuF,KAAKlG,GAGtBsL,IAAYA,EAAQuL,MACtB3L,EAAS1R,KAAK,CAAC8R,UAAShL,aAAcK,EAAKX,MAAOA,aAI/CkL,GAbE,EAcX,EAYAtG,OAAAA,CAAQ/N,EAAOma,EAAG1S,EAASma,GACzB,MAAML,GAAWmC,EAAAA,EAAAA,GAAoBvJ,EAAGna,GAClCgL,EAAOvD,EAAQuD,MAAQ,KACvB6W,EAAmBpa,EAAQoa,mBAAoB,EACrD,IAAIngB,EAAQ+F,EAAQoZ,UAChBc,EAAkB3hB,EAAOuhB,EAAUvW,EAAM4W,EAAkBC,GAC7DoB,EAAgBjjB,EAAOuhB,EAAUvW,GAAM,EAAO4W,EAAkBC,GAElE,GAAIngB,EAAML,OAAS,EAAG,CACpB,MAAMoI,EAAe/H,EAAM,GAAG+H,aACxB4F,EAAOrP,EAAMuP,eAAe9F,GAAc4F,KAChD3N,EAAQ,GACR,IAAK,IAAIE,EAAI,EAAGA,EAAIyN,EAAKhO,SAAUO,EACjCF,EAAMiB,KAAK,CAAC8R,QAASpF,EAAKzN,GAAI6H,eAAcN,MAAOvH,IAIvD,OAAOF,CACT,EAYAqe,MAAK,CAAC/f,EAAOma,EAAG1S,EAASma,IAIhBD,EAAkB3hB,GAHR0jB,EAAAA,EAAAA,GAAoBvJ,EAAGna,GAC3ByH,EAAQuD,MAAQ,KAEmB4W,EADvBna,EAAQoa,mBAAoB,GAavD8B,OAAAA,CAAQ3jB,EAAOma,EAAG1S,EAASma,GACzB,MAAML,GAAWmC,EAAAA,EAAAA,GAAoBvJ,EAAGna,GAClCgL,EAAOvD,EAAQuD,MAAQ,KACvB6W,EAAmBpa,EAAQoa,mBAAoB,EACrD,OAAOoB,EAAgBjjB,EAAOuhB,EAAUvW,EAAMvD,EAAQoZ,UAAWe,EAAkBC,EACrF,EAWA3T,EAAC,CAAClO,EAAOma,EAAG1S,EAASma,IAEZyB,EAAarjB,GADH0jB,EAAAA,EAAAA,GAAoBvJ,EAAGna,GACH,IAAKyH,EAAQoZ,UAAWe,GAY/DzT,EAAC,CAACnO,EAAOma,EAAG1S,EAASma,IAEZyB,EAAarjB,GADH0jB,EAAAA,EAAAA,GAAoBvJ,EAAGna,GACH,IAAKyH,EAAQoZ,UAAWe,KCpWnE,MAAMgC,EAAmB,CAAC,OAAQ,MAAO,QAAS,UAElD,SAASC,EAAiBC,EAAOvC,GAC/B,OAAOuC,EAAMnY,QAAOoY,GAAKA,EAAEC,MAAQzC,GACrC,CAEA,SAAS0C,EAA4BH,EAAO9Y,GAC1C,OAAO8Y,EAAMnY,QAAOoY,IAA0C,IAArCH,EAAiBxB,QAAQ2B,EAAEC,MAAeD,EAAEG,IAAIlZ,OAASA,GACpF,CAEA,SAASmZ,EAAaL,EAAOlb,GAC3B,OAAOkb,EAAMM,MAAK,CAAC7H,EAAG5I,KACpB,MAAM0Q,EAAKzb,EAAU+K,EAAI4I,EACnB+H,EAAK1b,EAAU2T,EAAI5I,EACzB,OAAO0Q,EAAG3F,SAAW4F,EAAG5F,OACtB2F,EAAGlb,MAAQmb,EAAGnb,MACdkb,EAAG3F,OAAS4F,EAAG5F,MAAM,GAE3B,CAuCA,SAAS6F,EAAcC,EAASC,GAC9B,MAAMxa,EAlBR,SAAqBua,GACnB,MAAMva,EAAS,CAAC,EAChB,IAAK,MAAMya,KAAQF,EAAS,CAC1B,MAAM,MAACnb,EAAK,IAAE2a,EAAA,YAAKW,GAAeD,EAClC,IAAKrb,IAAUua,EAAiBgB,SAASZ,GACvC,SAEF,MAAMa,EAAS5a,EAAOZ,KAAWY,EAAOZ,GAAS,CAAC6H,MAAO,EAAG4T,OAAQ,EAAGpG,OAAQ,EAAGnW,KAAM,IACxFsc,EAAO3T,QACP2T,EAAOnG,QAAUiG,CACnB,CACA,OAAO1a,CACT,CAMiB8a,CAAYP,IACrB,aAACQ,EAAA,cAAcC,GAAiBR,EACtC,IAAI7iB,EAAGsH,EAAMgc,EACb,IAAKtjB,EAAI,EAAGsH,EAAOsb,EAAQnjB,OAAQO,EAAIsH,IAAQtH,EAAG,CAChDsjB,EAASV,EAAQ5iB,GACjB,MAAM,SAACujB,GAAYD,EAAOhB,IACpB7a,EAAQY,EAAOib,EAAO7b,OACtBxF,EAASwF,GAAS6b,EAAOP,YAActb,EAAMqV,OAC/CwG,EAAOE,YACTF,EAAO5J,MAAQzX,EAASA,EAASmhB,EAAeG,GAAYV,EAAOY,eACnEH,EAAO3J,OAAS0J,IAEhBC,EAAO5J,MAAQ0J,EACfE,EAAO3J,OAAS1X,EAASA,EAASohB,EAAgBE,GAAYV,EAAOa,gBAEzE,CACA,OAAOrb,CACT,CAsBA,SAASsb,EAAeC,EAAYjR,EAAWgI,EAAG5I,GAChD,OAAO/S,KAAKqC,IAAIuiB,EAAWjJ,GAAIhI,EAAUgI,IAAM3b,KAAKqC,IAAIuiB,EAAW7R,GAAIY,EAAUZ,GACnF,CAEA,SAAS8R,EAAiBD,EAAYE,GACpCF,EAAW3R,IAAMjT,KAAKqC,IAAIuiB,EAAW3R,IAAK6R,EAAW7R,KACrD2R,EAAWxR,KAAOpT,KAAKqC,IAAIuiB,EAAWxR,KAAM0R,EAAW1R,MACvDwR,EAAWzR,OAASnT,KAAKqC,IAAIuiB,EAAWzR,OAAQ2R,EAAW3R,QAC3DyR,EAAW1R,MAAQlT,KAAKqC,IAAIuiB,EAAW1R,MAAO4R,EAAW5R,MAC3D,CAEA,SAAS6R,EAAWpR,EAAWkQ,EAAQS,EAAQjb,GAC7C,MAAM,IAAC+Z,EAAA,IAAKE,GAAOgB,EACbM,EAAajR,EAAUiR,WAG7B,KAAK9e,EAAAA,EAAAA,GAASsd,GAAM,CACdkB,EAAO3c,OAETgM,EAAUyP,IAAQkB,EAAO3c,MAE3B,MAAMc,EAAQY,EAAOib,EAAO7b,QAAU,CAACd,KAAM,EAAG2I,MAAO,GACvD7H,EAAMd,KAAO3H,KAAKqC,IAAIoG,EAAMd,KAAM2c,EAAOE,WAAalB,EAAI3I,OAAS2I,EAAI5I,OACvE4J,EAAO3c,KAAOc,EAAMd,KAAOc,EAAM6H,MACjCqD,EAAUyP,IAAQkB,EAAO3c,KAGvB2b,EAAI0B,YACNH,EAAiBD,EAAYtB,EAAI0B,cAGnC,MAAMC,EAAWjlB,KAAKqC,IAAI,EAAGwhB,EAAOqB,WAAaP,EAAeC,EAAYjR,EAAW,OAAQ,UACzFwR,EAAYnlB,KAAKqC,IAAI,EAAGwhB,EAAOuB,YAAcT,EAAeC,EAAYjR,EAAW,MAAO,WAC1F0R,EAAeJ,IAAatR,EAAU2R,EACtCC,EAAgBJ,IAAcxR,EAAU6R,EAK9C,OAJA7R,EAAU2R,EAAIL,EACdtR,EAAU6R,EAAIL,EAGPb,EAAOE,WACV,CAACiB,KAAMJ,EAAcK,MAAOH,GAC5B,CAACE,KAAMF,EAAeG,MAAOL,EACnC,CAgBA,SAASM,EAAWnB,EAAY7Q,GAC9B,MAAMiR,EAAajR,EAAUiR,WAE7B,SAASgB,EAAmBC,GAC1B,MAAMC,EAAS,CAAC1S,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAInD,OAHA0S,EAAUjmB,SAASwjB,IACjB0C,EAAO1C,GAAOpjB,KAAKqC,IAAIsR,EAAUyP,GAAMwB,EAAWxB,GAAI,IAEjD0C,CACT,CAEA,OACIF,EADGpB,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CAEA,SAASuB,EAASC,EAAOrS,EAAWkQ,EAAQxa,GAC1C,MAAM4c,EAAa,GACnB,IAAIjlB,EAAGsH,EAAMgc,EAAQhB,EAAK4C,EAAOC,EAEjC,IAAKnlB,EAAI,EAAGsH,EAAO0d,EAAMvlB,OAAQylB,EAAQ,EAAGllB,EAAIsH,IAAQtH,EAAG,CACzDsjB,EAAS0B,EAAMhlB,GACfsiB,EAAMgB,EAAOhB,IAEbA,EAAIve,OACFuf,EAAO5J,OAAS/G,EAAU2R,EAC1BhB,EAAO3J,QAAUhH,EAAU6R,EAC3BG,EAAWrB,EAAOE,WAAY7Q,IAEhC,MAAM,KAAC8R,EAAA,MAAMC,GAASX,EAAWpR,EAAWkQ,EAAQS,EAAQjb,GAI5D6c,GAAST,GAAQQ,EAAWxlB,OAG5B0lB,EAAUA,GAAWT,EAEhBpC,EAAIiB,UACP0B,EAAWlkB,KAAKuiB,EAEpB,CAEA,OAAO4B,GAASH,EAASE,EAAYtS,EAAWkQ,EAAQxa,IAAW8c,CACrE,CAEA,SAASC,EAAW9C,EAAKlQ,EAAMH,EAAKyH,EAAOC,GACzC2I,EAAIrQ,IAAMA,EACVqQ,EAAIlQ,KAAOA,EACXkQ,EAAIpQ,MAAQE,EAAOsH,EACnB4I,EAAInQ,OAASF,EAAM0H,EACnB2I,EAAI5I,MAAQA,EACZ4I,EAAI3I,OAASA,CACf,CAEA,SAAS0L,EAAWL,EAAOrS,EAAWkQ,EAAQxa,GAC5C,MAAMid,EAAczC,EAAO0C,QAC3B,IAAI,EAACjZ,EAAA,EAAGC,GAAKoG,EAEb,IAAK,MAAM2Q,KAAU0B,EAAO,CAC1B,MAAM1C,EAAMgB,EAAOhB,IACb7a,EAAQY,EAAOib,EAAO7b,QAAU,CAAC6H,MAAO,EAAG4T,OAAQ,EAAGpG,OAAQ,GAC9DA,EAASwG,EAAQP,YAActb,EAAMqV,QAAW,EACtD,GAAIwG,EAAOE,WAAY,CACrB,MAAM9J,EAAQ/G,EAAU2R,EAAIxH,EACtBnD,EAASlS,EAAMd,MAAQ2b,EAAI3I,QAC7B9F,EAAAA,EAAAA,GAAQpM,EAAMvI,SAChBqN,EAAI9E,EAAMvI,OAERojB,EAAIiB,SACN6B,EAAW9C,EAAKgD,EAAYlT,KAAM7F,EAAGsW,EAAOqB,WAAaoB,EAAYpT,MAAQoT,EAAYlT,KAAMuH,GAE/FyL,EAAW9C,EAAK3P,EAAUP,KAAO3K,EAAMyb,OAAQ3W,EAAGmN,EAAOC,GAE3DlS,EAAMvI,MAAQqN,EACd9E,EAAMyb,QAAUxJ,EAChBnN,EAAI+V,EAAInQ,WACH,CACL,MAAMwH,EAAShH,EAAU6R,EAAI1H,EACvBpD,EAAQjS,EAAMd,MAAQ2b,EAAI5I,OAC5B7F,EAAAA,EAAAA,GAAQpM,EAAMvI,SAChBoN,EAAI7E,EAAMvI,OAERojB,EAAIiB,SACN6B,EAAW9C,EAAKhW,EAAGgZ,EAAYrT,IAAKyH,EAAOmJ,EAAOuB,YAAckB,EAAYnT,OAASmT,EAAYrT,KAEjGmT,EAAW9C,EAAKhW,EAAGqG,EAAUV,IAAMxK,EAAMyb,OAAQxJ,EAAOC,GAE1DlS,EAAMvI,MAAQoN,EACd7E,EAAMyb,QAAUvJ,EAChBrN,EAAIgW,EAAIpQ,MAEZ,CAEAS,EAAUrG,EAAIA,EACdqG,EAAUpG,EAAIA,CAChB,CAwBA,IAAAqW,EAAe,CAQb4C,MAAAA,CAAOpnB,EAAO2B,GACP3B,EAAM4mB,QACT5mB,EAAM4mB,MAAQ,IAIhBjlB,EAAKwjB,SAAWxjB,EAAKwjB,WAAY,EACjCxjB,EAAK4f,SAAW5f,EAAK4f,UAAY,MACjC5f,EAAK+c,OAAS/c,EAAK+c,QAAU,EAE7B/c,EAAK0lB,QAAU1lB,EAAK0lB,SAAW,WAC7B,MAAO,CAAC,CACNC,EAAG,EACHzlB,IAAAA,CAAK0S,GACH5S,EAAKE,KAAK0S,EACZ,GAEJ,EAEAvU,EAAM4mB,MAAMjkB,KAAKhB,EACnB,EAOA4lB,SAAAA,CAAUvnB,EAAOwnB,GACf,MAAMre,EAAQnJ,EAAM4mB,MAAQ5mB,EAAM4mB,MAAMxE,QAAQoF,IAAe,GAChD,IAAXre,GACFnJ,EAAM4mB,MAAMjP,OAAOxO,EAAO,EAE9B,EAQA1C,SAAAA,CAAUzG,EAAO2B,EAAM8F,GACrB9F,EAAKwjB,SAAW1d,EAAQ0d,SACxBxjB,EAAK4f,SAAW9Z,EAAQ8Z,SACxB5f,EAAK+c,OAASjX,EAAQiX,MACxB,EAUA/Y,MAAAA,CAAO3F,EAAOsb,EAAOC,EAAQkM,GAC3B,IAAKznB,EACH,OAGF,MAAMmnB,GAAUO,EAAAA,EAAAA,GAAU1nB,EAAMyH,QAAQyd,OAAOiC,SACzC9B,EAAiBzkB,KAAKqC,IAAIqY,EAAQ6L,EAAQ7L,MAAO,GACjDgK,EAAkB1kB,KAAKqC,IAAIsY,EAAS4L,EAAQ5L,OAAQ,GACpDqL,EA5QV,SAA0BA,GACxB,MAAMe,EA1DR,SAAmBf,GACjB,MAAMe,EAAc,GACpB,IAAI/lB,EAAGsH,EAAMgb,EAAKF,EAAK3a,EAAOsb,EAE9B,IAAK/iB,EAAI,EAAGsH,GAAQ0d,GAAS,IAAIvlB,OAAQO,EAAIsH,IAAQtH,EACnDsiB,EAAM0C,EAAMhlB,KACV2f,SAAUyC,EAAKvc,SAAU4B,QAAOsb,cAAc,IAAMT,GACtDyD,EAAYhlB,KAAK,CACfwG,MAAOvH,EACPsiB,MACAF,MACAoB,WAAYlB,EAAI0D,eAChBlJ,OAAQwF,EAAIxF,OACZrV,MAAOA,GAAU2a,EAAM3a,EACvBsb,gBAGJ,OAAOgD,CACT,CAwCsBE,CAAUjB,GACxBzB,EAAWhB,EAAawD,EAAYhc,QAAO+Y,GAAQA,EAAKR,IAAIiB,YAAW,GACvEnR,EAAOmQ,EAAaN,EAAiB8D,EAAa,SAAS,GAC3D7T,EAAQqQ,EAAaN,EAAiB8D,EAAa,UACnD9T,EAAMsQ,EAAaN,EAAiB8D,EAAa,QAAQ,GACzD5T,EAASoQ,EAAaN,EAAiB8D,EAAa,WACpDG,EAAmB7D,EAA4B0D,EAAa,KAC5DI,EAAiB9D,EAA4B0D,EAAa,KAEhE,MAAO,CACLxC,WACA6C,WAAYhU,EAAKiU,OAAOpU,GACxBqU,eAAgBpU,EAAMmU,OAAOF,GAAgBE,OAAOlU,GAAQkU,OAAOH,GACnEvT,UAAWsP,EAAiB8D,EAAa,aACzCQ,SAAUnU,EAAKiU,OAAOnU,GAAOmU,OAAOF,GACpC3C,WAAYvR,EAAIoU,OAAOlU,GAAQkU,OAAOH,GAE1C,CA0PkBM,CAAiBpoB,EAAM4mB,OAC/ByB,EAAgBzB,EAAMuB,SACtBG,EAAkB1B,EAAMxB,YAI9BmD,EAAAA,EAAAA,GAAKvoB,EAAM4mB,OAAO1C,IACgB,oBAArBA,EAAIsE,cACbtE,EAAIsE,kBA+BR,MAAMC,EAA0BJ,EAAcvlB,QAAO,CAACya,EAAOmH,IAC3DA,EAAKR,IAAIzc,UAAwC,IAA7Bid,EAAKR,IAAIzc,QAAQihB,QAAoBnL,EAAQA,EAAQ,GAAG,IAAM,EAE9EkH,EAAS7d,OAAOkP,OAAO,CAC3BgQ,WAAYxK,EACZ0K,YAAazK,EACb4L,UACA9B,iBACAC,kBACAN,aAAcK,EAAiB,EAAIoD,EACnCxD,cAAeK,EAAkB,IAE7BE,EAAa5e,OAAOe,OAAO,CAAC,EAAGwf,GACrC1B,EAAiBD,GAAYkC,EAAAA,EAAAA,GAAUD,IACvC,MAAMlT,EAAY3N,OAAOe,OAAO,CAC9B6d,aACAU,EAAGb,EACHe,EAAGd,EACHpX,EAAGiZ,EAAQnT,KACX7F,EAAGgZ,EAAQtT,KACVsT,GAEGld,EAASsa,EAAc8D,EAAcJ,OAAOK,GAAkB7D,GAGpEkC,EAASC,EAAMzB,SAAU5Q,EAAWkQ,EAAQxa,GAG5C0c,EAAS0B,EAAe9T,EAAWkQ,EAAQxa,GAGvC0c,EAAS2B,EAAiB/T,EAAWkQ,EAAQxa,IAE/C0c,EAAS0B,EAAe9T,EAAWkQ,EAAQxa,GApRjD,SAA0BsK,GACxB,MAAMiR,EAAajR,EAAUiR,WAE7B,SAASmD,EAAU3E,GACjB,MAAM4E,EAAShoB,KAAKqC,IAAIuiB,EAAWxB,GAAOzP,EAAUyP,GAAM,GAE1D,OADAzP,EAAUyP,IAAQ4E,EACXA,CACT,CACArU,EAAUpG,GAAKwa,EAAU,OACzBpU,EAAUrG,GAAKya,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CA2QIE,CAAiBtU,GAGjB0S,EAAWL,EAAMoB,WAAYzT,EAAWkQ,EAAQxa,GAGhDsK,EAAUrG,GAAKqG,EAAU2R,EACzB3R,EAAUpG,GAAKoG,EAAU6R,EAEzBa,EAAWL,EAAMsB,eAAgB3T,EAAWkQ,EAAQxa,GAEpDjK,EAAMuU,UAAY,CAChBP,KAAMO,EAAUP,KAChBH,IAAKU,EAAUV,IACfC,MAAOS,EAAUP,KAAOO,EAAU2R,EAClCnS,OAAQQ,EAAUV,IAAMU,EAAU6R,EAClC7K,OAAQhH,EAAU6R,EAClB9K,MAAO/G,EAAU2R,IAInBqC,EAAAA,EAAAA,GAAK3B,EAAMrS,WAAY2Q,IACrB,MAAMhB,EAAMgB,EAAOhB,IACnBtd,OAAOe,OAAOuc,EAAKlkB,EAAMuU,WACzB2P,EAAIve,OAAO4O,EAAU2R,EAAG3R,EAAU6R,EAAG,CAACpS,KAAM,EAAGH,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAG,GAEhF,GC7ba,MAAM+U,EAOnBC,cAAAA,CAAeC,EAAQ9P,GAAc,CAQrC+P,cAAAA,CAAepU,GACb,OAAO,CACT,CASAqU,gBAAAA,CAAiBlpB,EAAOG,EAAMgpB,GAAW,CAQzCC,mBAAAA,CAAoBppB,EAAOG,EAAMgpB,GAAW,CAK5CE,mBAAAA,GACE,OAAO,CACT,CASAC,cAAAA,CAAe7U,EAAS6G,EAAOC,EAAQrC,GAGrC,OAFAoC,EAAQ1a,KAAKqC,IAAI,EAAGqY,GAAS7G,EAAQ6G,OACrCC,EAASA,GAAU9G,EAAQ8G,OACpB,CACLD,QACAC,OAAQ3a,KAAKqC,IAAI,EAAGiW,EAActY,KAAKqE,MAAMqW,EAAQpC,GAAeqC,GAExE,CAMAgO,UAAAA,CAAWP,GACT,OAAO,CACT,CAMAQ,YAAAA,CAAaljB,GAEb,ECrEa,MAAMmjB,UAAsBX,EACzCC,cAAAA,CAAepnB,GAIb,OAAOA,GAAQA,EAAKoP,YAAcpP,EAAKoP,WAAW,OAAS,IAC7D,CACAyY,YAAAA,CAAaljB,GACXA,EAAOmB,QAAQV,WAAY,CAC7B,ECRF,MAAM2iB,EAAc,WAOdC,EAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAGRC,EAAgB/hB,GAAmB,OAAVA,GAA4B,KAAVA,EA8DjD,MAAMgiB,IAAuBC,EAAAA,GAA+B,CAACC,SAAS,GAQtE,SAASC,EAAezqB,EAAOG,EAAMgpB,GAC/BnpB,GAASA,EAAMgpB,QACjBhpB,EAAMgpB,OAAOI,oBAAoBjpB,EAAMgpB,EAAUmB,EAErD,CAcA,SAASI,EAAiBC,EAAU3B,GAClC,IAAK,MAAM4B,KAAQD,EACjB,GAAIC,IAAS5B,GAAU4B,EAAKC,SAAS7B,GACnC,OAAO,CAGb,CAEA,SAAS8B,EAAqB9qB,EAAOG,EAAMgpB,GACzC,MAAMH,EAAShpB,EAAMgpB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMC,KAASF,EAClBC,EAAUA,GAAWR,EAAiBS,EAAMC,WAAYpC,GACxDkC,EAAUA,IAAYR,EAAiBS,EAAME,aAAcrC,GAEzDkC,GACF/B,OAIJ,OADA4B,EAASO,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CV,CACT,CAEA,SAASW,EAAqB1rB,EAAOG,EAAMgpB,GACzC,MAAMH,EAAShpB,EAAMgpB,OACf+B,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAMC,KAASF,EAClBC,EAAUA,GAAWR,EAAiBS,EAAME,aAAcrC,GAC1DkC,EAAUA,IAAYR,EAAiBS,EAAMC,WAAYpC,GAEvDkC,GACF/B,OAIJ,OADA4B,EAASO,QAAQC,SAAU,CAACC,WAAW,EAAMC,SAAS,IAC/CV,CACT,CAEA,MAAMY,GAAqB,IAAIhsB,IAC/B,IAAIisB,GAAsB,EAE1B,SAASC,KACP,MAAMC,EAAM5qB,OAAO6qB,iBACfD,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmBnrB,SAAQ,CAACwrB,EAAQhsB,KAC9BA,EAAMisB,0BAA4BH,GACpCE,OAGN,CAgBA,SAASE,GAAqBlsB,EAAOG,EAAMgpB,GACzC,MAAMH,EAAShpB,EAAMgpB,OACfmD,EAAYnD,IAAUoD,EAAAA,EAAAA,GAAepD,GAC3C,IAAKmD,EACH,OAEF,MAAMH,GAASK,EAAAA,EAAAA,IAAU,CAAC/Q,EAAOC,KAC/B,MAAM2K,EAAIiG,EAAUG,YACpBnD,EAAS7N,EAAOC,GACZ2K,EAAIiG,EAAUG,aAQhBnD,MAEDjoB,QAGG6pB,EAAW,IAAIwB,gBAAetB,IAClC,MAAME,EAAQF,EAAQ,GAChB3P,EAAQ6P,EAAMqB,YAAYlR,MAC1BC,EAAS4P,EAAMqB,YAAYjR,OAInB,IAAVD,GAA0B,IAAXC,GAGnByQ,EAAO1Q,EAAOC,EAAA,IAKhB,OAHAwP,EAASO,QAAQa,GAhDnB,SAAuCnsB,EAAOgsB,GACvCL,GAAmBpjB,MACtBrH,OAAOgoB,iBAAiB,SAAU2C,IAEpCF,GAAmBppB,IAAIvC,EAAOgsB,EAChC,CA4CES,CAA8BzsB,EAAOgsB,GAE9BjB,CACT,CAEA,SAAS2B,GAAgB1sB,EAAOG,EAAM4qB,GAChCA,GACFA,EAAS4B,aAEE,WAATxsB,GAnDN,SAAyCH,GACvC2rB,GAAmBroB,OAAOtD,GACrB2rB,GAAmBpjB,MACtBrH,OAAOkoB,oBAAoB,SAAUyC,GAEzC,CA+CIe,CAAgC5sB,EAEpC,CAEA,SAAS6sB,GAAqB7sB,EAAOG,EAAMgpB,GACzC,MAAMH,EAAShpB,EAAMgpB,OACf8D,GAAQT,EAAAA,EAAAA,IAAW5pB,IAIL,OAAdzC,EAAMsM,KACR6c,EA1IN,SAAyB1mB,EAAOzC,GAC9B,MAAMG,EAAOwpB,EAAYlnB,EAAMtC,OAASsC,EAAMtC,MACxC,EAAC+N,EAAC,EAAEC,IAAKuV,EAAAA,EAAAA,GAAoBjhB,EAAOzC,GAC1C,MAAO,CACLG,OACAH,QACA+sB,OAAQtqB,EACRyL,OAASpO,IAANoO,EAAkBA,EAAI,KACzBC,OAASrO,IAANqO,EAAkBA,EAAI,KAE7B,CAgIe6e,CAAgBvqB,EAAOzC,MAEjCA,GAIH,OA5JF,SAAqB4qB,EAAMzqB,EAAMgpB,GAC3ByB,GACFA,EAAK1B,iBAAiB/oB,EAAMgpB,EAAUmB,EAE1C,CAsJE2C,CAAYjE,EAAQ7oB,EAAM2sB,GAEnBA,CACT,CAMe,MAAMI,WAAoBpE,EAOvCC,cAAAA,CAAeC,EAAQ9P,GAIrB,MAAMrE,EAAUmU,GAAUA,EAAOjY,YAAciY,EAAOjY,WAAW,MASjE,OAAI8D,GAAWA,EAAQmU,SAAWA,GA/OtC,SAAoBA,EAAQ9P,GAC1B,MAAMM,EAAQwP,EAAOxP,MAIf2T,EAAenE,EAAOoE,aAAa,UACnCC,EAAcrE,EAAOoE,aAAa,SAsBxC,GAnBApE,EAAOU,GAAe,CACpBhpB,QAAS,CACP6a,OAAQ4R,EACR7R,MAAO+R,EACP7T,MAAO,CACLkP,QAASlP,EAAMkP,QACfnN,OAAQ/B,EAAM+B,OACdD,MAAO9B,EAAM8B,SAQnB9B,EAAMkP,QAAUlP,EAAMkP,SAAW,QAEjClP,EAAM8T,UAAY9T,EAAM8T,WAAa,aAEjCjD,EAAcgD,GAAc,CAC9B,MAAME,GAAeC,EAAAA,EAAAA,GAAaxE,EAAQ,cACrBlpB,IAAjBytB,IACFvE,EAAO1N,MAAQiS,GAInB,GAAIlD,EAAc8C,GAChB,GAA4B,KAAxBnE,EAAOxP,MAAM+B,OAIfyN,EAAOzN,OAASyN,EAAO1N,OAASpC,GAAe,OAC1C,CACL,MAAMuU,GAAgBD,EAAAA,EAAAA,GAAaxE,EAAQ,eACrBlpB,IAAlB2tB,IACFzE,EAAOzN,OAASkS,GAMxB,CAgMMC,CAAW1E,EAAQ9P,GACZrE,GAGF,IACT,CAKAoU,cAAAA,CAAepU,GACb,MAAMmU,EAASnU,EAAQmU,OACvB,IAAKA,EAAOU,GACV,OAAO,EAGT,MAAMhpB,EAAUsoB,EAAOU,GAAahpB,QACpC,CAAC,SAAU,SAASF,SAASgE,IAC3B,MAAM8D,EAAQ5H,EAAQ8D,IAClB0b,EAAAA,EAAAA,GAAc5X,GAChB0gB,EAAO2E,gBAAgBnpB,GAEvBwkB,EAAO4E,aAAappB,EAAM8D,MAI9B,MAAMkR,EAAQ9Y,EAAQ8Y,OAAS,CAAC,EAahC,OAZA5S,OAAOC,KAAK2S,GAAOhZ,SAAS0G,IAC1B8hB,EAAOxP,MAAMtS,GAAOsS,EAAMtS,EAAI,IAQhC8hB,EAAO1N,MAAQ0N,EAAO1N,aAEf0N,EAAOU,IACP,CACT,CAQAR,gBAAAA,CAAiBlpB,EAAOG,EAAMgpB,GAE5B3pB,KAAK4pB,oBAAoBppB,EAAOG,GAEhC,MAAM0tB,EAAU7tB,EAAM8tB,WAAa9tB,EAAM8tB,SAAW,CAAC,GAM/CtM,EALW,CACfuM,OAAQjD,EACRkD,OAAQtC,EACRM,OAAQE,IAEe/rB,IAAS0sB,GAClCgB,EAAQ1tB,GAAQqhB,EAAQxhB,EAAOG,EAAMgpB,EACvC,CAOAC,mBAAAA,CAAoBppB,EAAOG,GACzB,MAAM0tB,EAAU7tB,EAAM8tB,WAAa9tB,EAAM8tB,SAAW,CAAC,GAC/ChB,EAAQe,EAAQ1tB,GAEtB,IAAK2sB,EACH,QAGe,CACfiB,OAAQrB,GACRsB,OAAQtB,GACRV,OAAQU,IAEevsB,IAASsqB,GAC1BzqB,EAAOG,EAAM2sB,GACrBe,EAAQ1tB,QAAQL,CAClB,CAEAupB,mBAAAA,GACE,OAAOnoB,OAAO6qB,gBAChB,CAQAzC,cAAAA,CAAeN,EAAQ1N,EAAOC,EAAQrC,GACpC,OAAOoQ,EAAAA,EAAAA,GAAeN,EAAQ1N,EAAOC,EAAQrC,EAC/C,CAKAqQ,UAAAA,CAAWP,GACT,MAAMmD,EAAYnD,IAAUoD,EAAAA,EAAAA,GAAepD,GAC3C,SAAUmD,IAAaA,EAAU8B,YACnC,EC9Xa,MAAMC,GAEnB9hB,gBAAkB,CAAC,EACnBA,0BAAuBtM,EAEvBoO,EACAC,EACAzI,QAAS,EACT+B,QACAG,YAEAumB,eAAAA,CAAgBvM,GACd,MAAM,EAAC1T,EAAA,EAAGC,GAAK3O,KAAK0jB,SAAS,CAAC,IAAK,KAAMtB,GACzC,MAAO,CAAC1T,IAAGC,IACb,CAEAigB,QAAAA,GACE,OAAOzO,EAAAA,EAAAA,GAASngB,KAAK0O,KAAMyR,EAAAA,EAAAA,GAASngB,KAAK2O,EAC3C,CASA+U,QAAAA,CAAS9a,EAAiBimB,GACxB,MAAMpuB,EAAQT,KAAKoI,YACnB,IAAKymB,IAAUpuB,EAEb,OAAOT,KAET,MAAM8uB,EAA+B,CAAC,EAItC,OAHAlmB,EAAM5H,SAASgE,IACb8pB,EAAI9pB,GAAQvE,EAAMuE,IAASvE,EAAMuE,GAAMkB,SAAWzF,EAAMuE,GAAMgB,IAAMhG,KAAKgF,EAAe,IAEnF8pB,CACT,EC3BK,SAASC,GAAS9lB,EAAO+lB,GAC9B,MAAMC,EAAWhmB,EAAMhB,QAAQ+mB,MACzBE,EA8BR,SAA2BjmB,GACzB,MAAM8V,EAAS9V,EAAMhB,QAAQ8W,OACvBoQ,EAAalmB,EAAMmmB,YACnBC,EAAWpmB,EAAMqmB,QAAUH,GAAcpQ,EAAS,EAAI,GACtDwQ,EAAWtmB,EAAMumB,WAAaL,EACpC,OAAO/tB,KAAKqE,MAAMrE,KAAKC,IAAIguB,EAAUE,GACvC,CApC6BE,CAAkBxmB,GACvCymB,EAAatuB,KAAKC,IAAI4tB,EAASU,eAAiBT,EAAoBA,GACpEU,EAAeX,EAASY,MAAMC,QAgEtC,SAAyBd,GACvB,MAAMe,EAAS,GACf,IAAI3tB,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAOslB,EAAMntB,OAAQO,EAAIsH,EAAMtH,IACrC4sB,EAAM5sB,GAAGytB,OACXE,EAAO5sB,KAAKf,GAGhB,OAAO2tB,CACT,CAzEgDC,CAAgBhB,GAAS,GACjEiB,EAAkBL,EAAa/tB,OAC/BquB,EAAQN,EAAa,GACrBO,EAAOP,EAAaK,EAAkB,GACtCG,EAAW,GAGjB,GAAIH,EAAkBP,EAEpB,OAwEJ,SAAoBV,EAAOoB,EAAUR,EAAcvW,GACjD,IAEIjX,EAFAsP,EAAQ,EACR2e,EAAOT,EAAa,GAIxB,IADAvW,EAAUjY,KAAKkvB,KAAKjX,GACfjX,EAAI,EAAGA,EAAI4sB,EAAMntB,OAAQO,IACxBA,IAAMiuB,IACRD,EAASjtB,KAAK6rB,EAAM5sB,IACpBsP,IACA2e,EAAOT,EAAale,EAAQ2H,GAGlC,CAtFIkX,CAAWvB,EAAOoB,EAAUR,EAAcK,EAAkBP,GACrDU,EAGT,MAAM/W,EA6BR,SAA0BuW,EAAcZ,EAAOU,GAC7C,MAAMc,EA6FR,SAAwBxY,GACtB,MAAMyY,EAAMzY,EAAInW,OAChB,IAAIO,EAAGsuB,EAEP,GAAID,EAAM,EACR,OAAO,EAGT,IAAKC,EAAO1Y,EAAI,GAAI5V,EAAI,EAAGA,EAAIquB,IAAOruB,EACpC,GAAI4V,EAAI5V,GAAK4V,EAAI5V,EAAI,KAAOsuB,EAC1B,OAAO,EAGX,OAAOA,CACT,CA3G2BC,CAAef,GAClCvW,EAAU2V,EAAMntB,OAAS6tB,EAI/B,IAAKc,EACH,OAAOpvB,KAAKqC,IAAI4V,EAAS,GAG3B,MAAMuX,GAAUC,EAAAA,EAAAA,GAAWL,GAC3B,IAAK,IAAIpuB,EAAI,EAAGsH,EAAOknB,EAAQ/uB,OAAS,EAAGO,EAAIsH,EAAMtH,IAAK,CACxD,MAAMiC,EAASusB,EAAQxuB,GACvB,GAAIiC,EAASgV,EACX,OAAOhV,CAEX,CACA,OAAOjD,KAAKqC,IAAI4V,EAAS,EAC3B,CA/CkByX,CAAiBlB,EAAcZ,EAAOU,GAEtD,GAAIO,EAAkB,EAAG,CACvB,IAAI7tB,EAAGsH,EACP,MAAMqnB,EAAkBd,EAAkB,EAAI7uB,KAAK4vB,OAAOb,EAAOD,IAAUD,EAAkB,IAAM,KAEnG,IADAzP,GAAKwO,EAAOoB,EAAU/W,GAASqH,EAAAA,EAAAA,GAAcqQ,GAAmB,EAAIb,EAAQa,EAAiBb,GACxF9tB,EAAI,EAAGsH,EAAOumB,EAAkB,EAAG7tB,EAAIsH,EAAMtH,IAChDoe,GAAKwO,EAAOoB,EAAU/W,EAASuW,EAAaxtB,GAAIwtB,EAAaxtB,EAAI,IAGnE,OADAoe,GAAKwO,EAAOoB,EAAU/W,EAAS8W,GAAMzP,EAAAA,EAAAA,GAAcqQ,GAAmB/B,EAAMntB,OAASsuB,EAAOY,GACrFX,EAGT,OADA5P,GAAKwO,EAAOoB,EAAU/W,GACf+W,CACT,CA6EA,SAAS5P,GAAKwO,EAAOoB,EAAU/W,EAAS4X,EAAYC,GAClD,MAAM5vB,GAAQyN,EAAAA,EAAAA,GAAekiB,EAAY,GACnC5nB,EAAMjI,KAAKC,KAAI0N,EAAAA,EAAAA,GAAemiB,EAAUlC,EAAMntB,QAASmtB,EAAMntB,QACnE,IACIA,EAAQO,EAAGiuB,EADX3e,EAAQ,EAWZ,IARA2H,EAAUjY,KAAKkvB,KAAKjX,GAChB6X,IACFrvB,EAASqvB,EAAWD,EACpB5X,EAAUxX,EAAST,KAAKqE,MAAM5D,EAASwX,IAGzCgX,EAAO/uB,EAEA+uB,EAAO,GACZ3e,IACA2e,EAAOjvB,KAAK4vB,MAAM1vB,EAAQoQ,EAAQ2H,GAGpC,IAAKjX,EAAIhB,KAAKqC,IAAInC,EAAO,GAAIc,EAAIiH,EAAKjH,IAChCA,IAAMiuB,IACRD,EAASjtB,KAAK6rB,EAAM5sB,IACpBsP,IACA2e,EAAOjvB,KAAK4vB,MAAM1vB,EAAQoQ,EAAQ2H,GAGxC,CC7IA,MACM8X,GAAiBA,CAACloB,EAAOmoB,EAAMrS,IAAoB,QAATqS,GAA2B,SAATA,EAAkBnoB,EAAMmoB,GAAQrS,EAAS9V,EAAMmoB,GAAQrS,EACnHsS,GAAgBA,CAACC,EAAa3B,IAAkBvuB,KAAKC,IAAIsuB,GAAiB2B,EAAaA,GAY7F,SAASC,GAAOvZ,EAAKwZ,GACnB,MAAMzB,EAAS,GACT0B,EAAYzZ,EAAInW,OAAS2vB,EACzBf,EAAMzY,EAAInW,OAChB,IAAIO,EAAI,EAER,KAAOA,EAAIquB,EAAKruB,GAAKqvB,EACnB1B,EAAO5sB,KAAK6U,EAAI5W,KAAKqE,MAAMrD,KAE7B,OAAO2tB,CACT,CAOA,SAAS2B,GAAoBzoB,EAAOU,EAAOgoB,GACzC,MAAM9vB,EAASoH,EAAM+lB,MAAMntB,OACrB+vB,EAAaxwB,KAAKC,IAAIsI,EAAO9H,EAAS,GACtCP,EAAQ2H,EAAM4oB,YACdxoB,EAAMJ,EAAM6oB,UACZC,EAAU,KAChB,IACIhT,EADAiT,EAAY/oB,EAAMgpB,gBAAgBL,GAGtC,KAAID,IAEA5S,EADa,IAAXld,EACOT,KAAKqC,IAAIuuB,EAAY1wB,EAAO+H,EAAM2oB,GACxB,IAAVroB,GACCV,EAAMgpB,gBAAgB,GAAKD,GAAa,GAExCA,EAAY/oB,EAAMgpB,gBAAgBL,EAAa,IAAM,EAEjEI,GAAaJ,EAAajoB,EAAQoV,GAAUA,EAGxCiT,EAAY1wB,EAAQywB,GAAWC,EAAY3oB,EAAM0oB,IAIvD,OAAOC,CACT,CAuBA,SAASE,GAAkBjqB,GACzB,OAAOA,EAAQkqB,UAAYlqB,EAAQknB,WAAa,CAClD,CAKA,SAASiD,GAAenqB,EAASoqB,GAC/B,IAAKpqB,EAAQihB,QACX,OAAO,EAGT,MAAMoJ,GAAOC,EAAAA,EAAAA,IAAOtqB,EAAQqqB,KAAMD,GAC5B1K,GAAUO,EAAAA,EAAAA,GAAUjgB,EAAQ0f,SAGlC,QAFc/f,EAAAA,EAAAA,GAAQK,EAAQgS,MAAQhS,EAAQgS,KAAKpY,OAAS,GAE5CywB,EAAKE,WAAc7K,EAAQ5L,MAC7C,CAiBA,SAAS0W,GAAWC,EAAO3Q,EAAU3Y,GAEnC,IAAI0lB,GAAM6D,EAAAA,EAAAA,IAAmBD,GAI7B,OAHItpB,GAAyB,UAAb2Y,IAA2B3Y,GAAwB,UAAb2Y,KACpD+M,EArHkB4D,IAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EAqHhFE,CAAa9D,IAEdA,CACT,CAuCe,MAAM+D,WAAcnE,GAGjC3uB,WAAAA,CAAY+E,GACVgW,QAGA9a,KAAK4L,GAAK9G,EAAI8G,GAEd5L,KAAKW,KAAOmE,EAAInE,KAEhBX,KAAKiI,aAAU3H,EAEfN,KAAK8M,IAAMhI,EAAIgI,IAEf9M,KAAKQ,MAAQsE,EAAItE,MAIjBR,KAAKqU,SAAM/T,EAEXN,KAAKuU,YAASjU,EAEdN,KAAKwU,UAAOlU,EAEZN,KAAKsU,WAAQhU,EAEbN,KAAK8b,WAAQxb,EAEbN,KAAK+b,YAASzb,EACdN,KAAK8yB,SAAW,CACdte,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GAGVvU,KAAKyd,cAAWnd,EAEhBN,KAAK0d,eAAYpd,EAEjBN,KAAK+yB,gBAAazyB,EAElBN,KAAKgzB,mBAAgB1yB,EAErBN,KAAKizB,iBAAc3yB,EAEnBN,KAAKkzB,kBAAe5yB,EAIpBN,KAAKwL,UAAOlL,EAEZN,KAAKmzB,mBAAgB7yB,EACrBN,KAAKqB,SAAMf,EACXN,KAAKyD,SAAMnD,EACXN,KAAKozB,YAAS9yB,EAEdN,KAAKgvB,MAAQ,GAEbhvB,KAAKqzB,eAAiB,KAEtBrzB,KAAKszB,YAAc,KAEnBtzB,KAAKuzB,YAAc,KACnBvzB,KAAKsvB,QAAU,EACftvB,KAAKwvB,WAAa,EAClBxvB,KAAKwzB,kBAAoB,CAAC,EAE1BxzB,KAAK6xB,iBAAcvxB,EAEnBN,KAAK8xB,eAAYxxB,EACjBN,KAAKuhB,gBAAiB,EACtBvhB,KAAKyzB,cAAWnzB,EAChBN,KAAK0zB,cAAWpzB,EAChBN,KAAK2zB,mBAAgBrzB,EACrBN,KAAK4zB,mBAAgBtzB,EACrBN,KAAK6zB,aAAe,EACpB7zB,KAAK8zB,aAAe,EACpB9zB,KAAK+zB,OAAS,CAAC,EACf/zB,KAAKg0B,mBAAoB,EACzBh0B,KAAK0N,cAAWpN,CAClB,CAMA2zB,IAAAA,CAAKhsB,GACHjI,KAAKiI,QAAUA,EAAQisB,WAAWl0B,KAAKuR,cAEvCvR,KAAKwL,KAAOvD,EAAQuD,KAGpBxL,KAAK0zB,SAAW1zB,KAAKyR,MAAMxJ,EAAQ5G,KACnCrB,KAAKyzB,SAAWzzB,KAAKyR,MAAMxJ,EAAQxE,KACnCzD,KAAK4zB,cAAgB5zB,KAAKyR,MAAMxJ,EAAQksB,cACxCn0B,KAAK2zB,cAAgB3zB,KAAKyR,MAAMxJ,EAAQmsB,aAC1C,CAQA3iB,KAAAA,CAAMgE,EAAK9L,GACT,OAAO8L,CACT,CAOA/B,aAAAA,GACE,IAAI,SAACggB,EAAQ,SAAED,EAAQ,cAAEG,EAAA,cAAeD,GAAiB3zB,KAKzD,OAJA0zB,GAAWW,EAAAA,EAAAA,GAAgBX,EAAUvgB,OAAOC,mBAC5CqgB,GAAWY,EAAAA,EAAAA,GAAgBZ,EAAUtgB,OAAOE,mBAC5CugB,GAAgBS,EAAAA,EAAAA,GAAgBT,EAAezgB,OAAOC,mBACtDugB,GAAgBU,EAAAA,EAAAA,GAAgBV,EAAexgB,OAAOE,mBAC/C,CACLhS,KAAKgzB,EAAAA,EAAAA,GAAgBX,EAAUE,GAC/BnwB,KAAK4wB,EAAAA,EAAAA,GAAgBZ,EAAUE,GAC/BngB,YAAYrJ,EAAAA,EAAAA,GAASupB,GACrBjgB,YAAYtJ,EAAAA,EAAAA,GAASspB,GAEzB,CAQA3gB,SAAAA,CAAUC,GAER,IACIJ,GADA,IAACtR,EAAA,IAAKoC,EAAA,WAAK+P,EAAA,WAAYC,GAAczT,KAAK0T,gBAG9C,GAAIF,GAAcC,EAChB,MAAO,CAACpS,MAAKoC,OAGf,MAAM6wB,EAAQt0B,KAAKgL,0BACnB,IAAK,IAAI5I,EAAI,EAAGsH,EAAO4qB,EAAMzyB,OAAQO,EAAIsH,IAAQtH,EAC/CuQ,EAAQ2hB,EAAMlyB,GAAG8I,WAAW4H,UAAU9S,KAAM+S,GACvCS,IACHnS,EAAMD,KAAKC,IAAIA,EAAKsR,EAAMtR,MAEvBoS,IACHhQ,EAAMrC,KAAKqC,IAAIA,EAAKkP,EAAMlP,MAQ9B,OAHApC,EAAMoS,GAAcpS,EAAMoC,EAAMA,EAAMpC,EACtCoC,EAAM+P,GAAcnS,EAAMoC,EAAMpC,EAAMoC,EAE/B,CACLpC,KAAKgzB,EAAAA,EAAAA,GAAgBhzB,GAAKgzB,EAAAA,EAAAA,GAAgB5wB,EAAKpC,IAC/CoC,KAAK4wB,EAAAA,EAAAA,GAAgB5wB,GAAK4wB,EAAAA,EAAAA,GAAgBhzB,EAAKoC,IAEnD,CAOA2iB,UAAAA,GACE,MAAO,CACL5R,KAAMxU,KAAKizB,aAAe,EAC1B5e,IAAKrU,KAAK+yB,YAAc,EACxBze,MAAOtU,KAAKkzB,cAAgB,EAC5B3e,OAAQvU,KAAKgzB,eAAiB,EAElC,CAOAuB,QAAAA,GACE,OAAOv0B,KAAKgvB,KACd,CAKA7c,SAAAA,GACE,MAAMtC,EAAO7P,KAAKQ,MAAMqP,KACxB,OAAO7P,KAAKiI,QAAQiK,SAAWlS,KAAKooB,eAAiBvY,EAAK2kB,QAAU3kB,EAAK4kB,UAAY5kB,EAAKqC,QAAU,EACtG,CAKAwiB,aAAAA,GAAgD,IAAlC3f,EAAYnT,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAA5B,KAAKQ,MAAMuU,UAEnC,OADc/U,KAAKszB,cAAgBtzB,KAAKszB,YAActzB,KAAK20B,mBAAmB5f,GAEhF,CAGAiU,YAAAA,GACEhpB,KAAK+zB,OAAS,CAAC,EACf/zB,KAAKg0B,mBAAoB,CAC3B,CAMAY,YAAAA,IACEC,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQ2sB,aAAc,CAAC50B,MACnC,CAUAmG,MAAAA,CAAOsX,EAAUC,EAAWoX,GAC1B,MAAM,YAACC,EAAW,MAAEC,EAAOhG,MAAOC,GAAYjvB,KAAKiI,QAC7CgtB,EAAahG,EAASgG,WAG5Bj1B,KAAK40B,eAGL50B,KAAKyd,SAAWA,EAChBzd,KAAK0d,UAAYA,EACjB1d,KAAK8yB,SAAWgC,EAAU1tB,OAAOe,OAAO,CACtCqM,KAAM,EACNF,MAAO,EACPD,IAAK,EACLE,OAAQ,GACPugB,GAEH90B,KAAKgvB,MAAQ,KACbhvB,KAAKuzB,YAAc,KACnBvzB,KAAKqzB,eAAiB,KACtBrzB,KAAKszB,YAAc,KAGnBtzB,KAAKk1B,sBACLl1B,KAAKm1B,gBACLn1B,KAAKo1B,qBAELp1B,KAAKwvB,WAAaxvB,KAAKooB,eACnBpoB,KAAK8b,MAAQgZ,EAAQtgB,KAAOsgB,EAAQxgB,MACpCtU,KAAK+b,OAAS+Y,EAAQzgB,IAAMygB,EAAQvgB,OAGnCvU,KAAKg0B,oBACRh0B,KAAKq1B,mBACLr1B,KAAKs1B,sBACLt1B,KAAKu1B,kBACLv1B,KAAKozB,QAASoC,EAAAA,EAAAA,GAAUx1B,KAAMg1B,EAAOD,GACrC/0B,KAAKg0B,mBAAoB,GAG3Bh0B,KAAKy1B,mBAELz1B,KAAKgvB,MAAQhvB,KAAK01B,cAAgB,GAGlC11B,KAAK21B,kBAIL,MAAMC,EAAkBX,EAAaj1B,KAAKgvB,MAAMntB,OAChD7B,KAAK61B,sBAAsBD,EAAkBrE,GAAOvxB,KAAKgvB,MAAOiG,GAAcj1B,KAAKgvB,OAMnFhvB,KAAKiH,YAGLjH,KAAK81B,+BACL91B,KAAK+1B,yBACL/1B,KAAKg2B,8BAGD/G,EAAS/F,UAAY+F,EAASF,UAAgC,SAApBE,EAASgH,UACrDj2B,KAAKgvB,MAAQD,GAAS/uB,KAAMA,KAAKgvB,OACjChvB,KAAKuzB,YAAc,KACnBvzB,KAAKk2B,iBAGHN,GAEF51B,KAAK61B,sBAAsB71B,KAAKgvB,OAGlChvB,KAAKm2B,YACLn2B,KAAKo2B,MACLp2B,KAAKq2B,WAILr2B,KAAKs2B,aACP,CAKArvB,SAAAA,GACE,IACIsvB,EAAYC,EADZC,EAAgBz2B,KAAKiI,QAAQmB,QAG7BpJ,KAAKooB,gBACPmO,EAAav2B,KAAKwU,KAClBgiB,EAAWx2B,KAAKsU,QAEhBiiB,EAAav2B,KAAKqU,IAClBmiB,EAAWx2B,KAAKuU,OAEhBkiB,GAAiBA,GAEnBz2B,KAAK6xB,YAAc0E,EACnBv2B,KAAK8xB,UAAY0E,EACjBx2B,KAAKuhB,eAAiBkV,EACtBz2B,KAAKsvB,QAAUkH,EAAWD,EAC1Bv2B,KAAK02B,eAAiB12B,KAAKiI,QAAQ0uB,aACrC,CAEAL,WAAAA,IACEzB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQquB,YAAa,CAACt2B,MAClC,CAIAk1B,mBAAAA,IACEL,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQitB,oBAAqB,CAACl1B,MAC1C,CACAm1B,aAAAA,GAEMn1B,KAAKooB,gBAEPpoB,KAAK8b,MAAQ9b,KAAKyd,SAClBzd,KAAKwU,KAAO,EACZxU,KAAKsU,MAAQtU,KAAK8b,QAElB9b,KAAK+b,OAAS/b,KAAK0d,UAGnB1d,KAAKqU,IAAM,EACXrU,KAAKuU,OAASvU,KAAK+b,QAIrB/b,KAAKizB,YAAc,EACnBjzB,KAAK+yB,WAAa,EAClB/yB,KAAKkzB,aAAe,EACpBlzB,KAAKgzB,cAAgB,CACvB,CACAoC,kBAAAA,IACEP,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQmtB,mBAAoB,CAACp1B,MACzC,CAEA42B,UAAAA,CAAWrd,GACTvZ,KAAKQ,MAAMq2B,cAActd,EAAMvZ,KAAKuR,eACpCsjB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQsR,GAAO,CAACvZ,MAC5B,CAGAq1B,gBAAAA,GACEr1B,KAAK42B,WAAW,mBAClB,CACAtB,mBAAAA,GAAuB,CACvBC,eAAAA,GACEv1B,KAAK42B,WAAW,kBAClB,CAGAnB,gBAAAA,GACEz1B,KAAK42B,WAAW,mBAClB,CAIAlB,UAAAA,GACE,MAAO,EACT,CACAC,eAAAA,GACE31B,KAAK42B,WAAW,kBAClB,CAEAE,2BAAAA,IACEjC,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQ6uB,4BAA6B,CAAC92B,MAClD,CAKA+2B,kBAAAA,CAAmB/H,GACjB,MAAMC,EAAWjvB,KAAKiI,QAAQ+mB,MAC9B,IAAI5sB,EAAGsH,EAAMlH,EACb,IAAKJ,EAAI,EAAGsH,EAAOslB,EAAMntB,OAAQO,EAAIsH,EAAMtH,IACzCI,EAAOwsB,EAAM5sB,GACbI,EAAKuR,OAAQ8gB,EAAAA,EAAAA,GAAK5F,EAAS4F,SAAU,CAACryB,EAAKsG,MAAO1G,EAAG4sB,GAAQhvB,KAEjE,CACAg3B,0BAAAA,IACEnC,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQ+uB,2BAA4B,CAACh3B,MACjD,CAIA81B,4BAAAA,IACEjB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQ6tB,6BAA8B,CAAC91B,MACnD,CACA+1B,sBAAAA,GACE,MAAM9tB,EAAUjI,KAAKiI,QACfgnB,EAAWhnB,EAAQ+mB,MACnBiI,EAAW5F,GAAcrxB,KAAKgvB,MAAMntB,OAAQoG,EAAQ+mB,MAAMW,eAC1DuH,EAAcjI,EAASiI,aAAe,EACtCC,EAAclI,EAASkI,YAC7B,IACIC,EAAW1Z,EAAW2Z,EADtBlE,EAAgB+D,EAGpB,IAAKl3B,KAAKs3B,eAAiBrI,EAAS/F,SAAWgO,GAAeC,GAAeF,GAAY,IAAMj3B,KAAKooB,eAElG,YADApoB,KAAKmzB,cAAgB+D,GAIvB,MAAMK,EAAav3B,KAAKw3B,iBAClBC,EAAgBF,EAAWG,OAAO5b,MAClC6b,EAAiBJ,EAAWK,QAAQ7b,OAIpC0B,GAAWoa,EAAAA,EAAAA,GAAY73B,KAAKQ,MAAMsb,MAAQ2b,EAAe,EAAGz3B,KAAKyd,UACvE2Z,EAAYnvB,EAAQ8W,OAAS/e,KAAKyd,SAAWwZ,EAAWxZ,GAAYwZ,EAAW,GAG3EQ,EAAgB,EAAIL,IACtBA,EAAY3Z,GAAYwZ,GAAYhvB,EAAQ8W,OAAS,GAAM,IAC3DrB,EAAY1d,KAAK0d,UAAYwU,GAAkBjqB,EAAQ6vB,MACvD7I,EAAStH,QAAUyK,GAAenqB,EAAQ8vB,MAAO/3B,KAAKQ,MAAMyH,QAAQqqB,MACpE+E,EAAmBj2B,KAAK8hB,KAAKuU,EAAgBA,EAAgBE,EAAiBA,GAC9ExE,GAAgB6E,EAAAA,EAAAA,GAAU52B,KAAKC,IAC7BD,KAAK62B,MAAKJ,EAAAA,EAAAA,IAAaN,EAAWK,QAAQ7b,OAAS,GAAKqb,GAAY,EAAG,IACvEh2B,KAAK62B,MAAKJ,EAAAA,EAAAA,GAAYna,EAAY2Z,GAAmB,EAAG,IAAMj2B,KAAK62B,MAAKJ,EAAAA,EAAAA,GAAYF,EAAiBN,GAAmB,EAAG,MAE7HlE,EAAgB/xB,KAAKqC,IAAIyzB,EAAa91B,KAAKC,IAAI81B,EAAahE,KAG9DnzB,KAAKmzB,cAAgBA,CACvB,CACA6C,2BAAAA,IACEnB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQ+tB,4BAA6B,CAACh2B,MAClD,CACAk2B,aAAAA,GAAiB,CAIjBC,SAAAA,IACEtB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQkuB,UAAW,CAACn2B,MAChC,CACAo2B,GAAAA,GAEE,MAAM8B,EAAU,CACdpc,MAAO,EACPC,OAAQ,IAGJ,MAACvb,EAAOyH,SAAU+mB,MAAOC,EAAU8I,MAAOI,EAAWL,KAAMM,IAAap4B,KACxEkpB,EAAUlpB,KAAKs3B,aACflP,EAAepoB,KAAKooB,eAE1B,GAAIc,EAAS,CACX,MAAMmP,EAAcjG,GAAe+F,EAAW33B,EAAMyH,QAAQqqB,MAU5D,GATIlK,GACF8P,EAAQpc,MAAQ9b,KAAKyd,SACrBya,EAAQnc,OAASmW,GAAkBkG,GAAYC,IAE/CH,EAAQnc,OAAS/b,KAAK0d,UACtBwa,EAAQpc,MAAQoW,GAAkBkG,GAAYC,GAI5CpJ,EAAS/F,SAAWlpB,KAAKgvB,MAAMntB,OAAQ,CACzC,MAAM,MAACquB,EAAA,KAAOC,EAAA,OAAMuH,EAAA,QAAQE,GAAW53B,KAAKw3B,iBACtCc,EAAiC,EAAnBrJ,EAAStH,QACvB4Q,GAAeld,EAAAA,EAAAA,GAAUrb,KAAKmzB,eAC9B3W,EAAMpb,KAAKob,IAAI+b,GACf7b,EAAMtb,KAAKsb,IAAI6b,GAErB,GAAInQ,EAAc,CAEhB,MAAMoQ,EAAcvJ,EAASwJ,OAAS,EAAI/b,EAAMgb,EAAO5b,MAAQU,EAAMob,EAAQ7b,OAC7Emc,EAAQnc,OAAS3a,KAAKC,IAAIrB,KAAK0d,UAAWwa,EAAQnc,OAASyc,EAAcF,OACpE,CAGL,MAAMI,EAAazJ,EAASwJ,OAAS,EAAIjc,EAAMkb,EAAO5b,MAAQY,EAAMkb,EAAQ7b,OAE5Emc,EAAQpc,MAAQ1a,KAAKC,IAAIrB,KAAKyd,SAAUya,EAAQpc,MAAQ4c,EAAaJ,GAEvEt4B,KAAK24B,kBAAkBzI,EAAOC,EAAMzT,EAAKF,IAI7Cxc,KAAK44B,iBAEDxQ,GACFpoB,KAAK8b,MAAQ9b,KAAKsvB,QAAU9uB,EAAMsb,MAAQ9b,KAAK8yB,SAASte,KAAOxU,KAAK8yB,SAASxe,MAC7EtU,KAAK+b,OAASmc,EAAQnc,SAEtB/b,KAAK8b,MAAQoc,EAAQpc,MACrB9b,KAAK+b,OAAS/b,KAAKsvB,QAAU9uB,EAAMub,OAAS/b,KAAK8yB,SAASze,IAAMrU,KAAK8yB,SAASve,OAElF,CAEAokB,iBAAAA,CAAkBzI,EAAOC,EAAMzT,EAAKF,GAClC,MAAOwS,OAAO,MAAC0D,EAAA,QAAO/K,GAAQ,SAAE5F,GAAY/hB,KAAKiI,QAC3C4wB,EAAmC,IAAvB74B,KAAKmzB,cACjB2F,EAAgC,QAAb/W,GAAoC,MAAd/hB,KAAKwL,KAEpD,GAAIxL,KAAKooB,eAAgB,CACvB,MAAM2Q,EAAa/4B,KAAKiyB,gBAAgB,GAAKjyB,KAAKwU,KAC5CwkB,EAAch5B,KAAKsU,MAAQtU,KAAKiyB,gBAAgBjyB,KAAKgvB,MAAMntB,OAAS,GAC1E,IAAIoxB,EAAc,EACdC,EAAe,EAIf2F,EACEC,GACF7F,EAAczW,EAAM0T,EAAMpU,MAC1BoX,EAAexW,EAAMyT,EAAKpU,SAE1BkX,EAAcvW,EAAMwT,EAAMnU,OAC1BmX,EAAe1W,EAAM2T,EAAKrU,OAET,UAAV4W,EACTQ,EAAe/C,EAAKrU,MACD,QAAV4W,EACTO,EAAc/C,EAAMpU,MACD,UAAV4W,IACTO,EAAc/C,EAAMpU,MAAQ,EAC5BoX,EAAe/C,EAAKrU,MAAQ,GAI9B9b,KAAKizB,YAAc7xB,KAAKqC,KAAKwvB,EAAc8F,EAAapR,GAAW3nB,KAAK8b,OAAS9b,KAAK8b,MAAQid,GAAa,GAC3G/4B,KAAKkzB,aAAe9xB,KAAKqC,KAAKyvB,EAAe8F,EAAcrR,GAAW3nB,KAAK8b,OAAS9b,KAAK8b,MAAQkd,GAAc,OAC1G,CACL,IAAIjG,EAAa5C,EAAKpU,OAAS,EAC3BiX,EAAgB9C,EAAMnU,OAAS,EAErB,UAAV2W,GACFK,EAAa,EACbC,EAAgB9C,EAAMnU,QACH,QAAV2W,IACTK,EAAa5C,EAAKpU,OAClBiX,EAAgB,GAGlBhzB,KAAK+yB,WAAaA,EAAapL,EAC/B3nB,KAAKgzB,cAAgBA,EAAgBrL,EAEzC,CAMAiR,cAAAA,GACM54B,KAAK8yB,WACP9yB,KAAK8yB,SAASte,KAAOpT,KAAKqC,IAAIzD,KAAKizB,YAAajzB,KAAK8yB,SAASte,MAC9DxU,KAAK8yB,SAASze,IAAMjT,KAAKqC,IAAIzD,KAAK+yB,WAAY/yB,KAAK8yB,SAASze,KAC5DrU,KAAK8yB,SAASxe,MAAQlT,KAAKqC,IAAIzD,KAAKkzB,aAAclzB,KAAK8yB,SAASxe,OAChEtU,KAAK8yB,SAASve,OAASnT,KAAKqC,IAAIzD,KAAKgzB,cAAehzB,KAAK8yB,SAASve,QAEtE,CAEA8hB,QAAAA,IACExB,EAAAA,EAAAA,GAAK70B,KAAKiI,QAAQouB,SAAU,CAACr2B,MAC/B,CAMAooB,YAAAA,GACE,MAAM,KAAC5c,EAAA,SAAMuW,GAAY/hB,KAAKiI,QAC9B,MAAoB,QAAb8Z,GAAmC,WAAbA,GAAkC,MAATvW,CACxD,CAIAytB,UAAAA,GACE,OAAOj5B,KAAKiI,QAAQ0d,QACtB,CAMAkQ,qBAAAA,CAAsB7G,GAMpB,IAAI5sB,EAAGsH,EACP,IANA1J,KAAK82B,8BAEL92B,KAAK+2B,mBAAmB/H,GAInB5sB,EAAI,EAAGsH,EAAOslB,EAAMntB,OAAQO,EAAIsH,EAAMtH,KACrCse,EAAAA,EAAAA,GAAcsO,EAAM5sB,GAAG2R,SACzBib,EAAM7W,OAAO/V,EAAG,GAChBsH,IACAtH,KAIJpC,KAAKg3B,4BACP,CAMAQ,cAAAA,GACE,IAAID,EAAav3B,KAAKuzB,YAEtB,IAAKgE,EAAY,CACf,MAAMtC,EAAaj1B,KAAKiI,QAAQ+mB,MAAMiG,WACtC,IAAIjG,EAAQhvB,KAAKgvB,MACbiG,EAAajG,EAAMntB,SACrBmtB,EAAQuC,GAAOvC,EAAOiG,IAGxBj1B,KAAKuzB,YAAcgE,EAAav3B,KAAKk5B,mBAAmBlK,EAAOA,EAAMntB,OAAQ7B,KAAKiI,QAAQ+mB,MAAMW,eAGlG,OAAO4H,CACT,CAQA2B,kBAAAA,CAAmBlK,EAAOntB,EAAQ8tB,GAChC,MAAM,IAAC7iB,EAAK0mB,kBAAmB2F,GAAUn5B,KACnCo5B,EAAS,GACTC,EAAU,GACV5H,EAAYrwB,KAAKqE,MAAM5D,EAASwvB,GAAcxvB,EAAQ8tB,IAC5D,IAEIvtB,EAAG8f,EAAGoX,EAAMvlB,EAAOwlB,EAAUC,EAAY1jB,EAAO0c,EAAY1W,EAAOC,EAAQ0d,EAF3EC,EAAkB,EAClBC,EAAmB,EAGvB,IAAKv3B,EAAI,EAAGA,EAAIP,EAAQO,GAAKqvB,EAAW,CAQtC,GAPA1d,EAAQib,EAAM5sB,GAAG2R,MACjBwlB,EAAWv5B,KAAK45B,wBAAwBx3B,GACxC0K,EAAIwlB,KAAOkH,EAAaD,EAASM,OACjC/jB,EAAQqjB,EAAOK,GAAcL,EAAOK,IAAe,CAAC3pB,KAAM,CAAC,EAAGiqB,GAAI,IAClEtH,EAAa+G,EAAS/G,WACtB1W,EAAQC,EAAS,GAEZ2E,EAAAA,EAAAA,GAAc3M,KAAWnM,EAAAA,EAAAA,GAAQmM,IAG/B,IAAInM,EAAAA,EAAAA,GAAQmM,GAEjB,IAAKmO,EAAI,EAAGoX,EAAOvlB,EAAMlS,OAAQqgB,EAAIoX,IAAQpX,EAC3CuX,EAAqC1lB,EAAMmO,IAEtCxB,EAAAA,EAAAA,GAAc+Y,KAAiB7xB,EAAAA,EAAAA,GAAQ6xB,KAC1C3d,GAAQie,EAAAA,EAAAA,GAAajtB,EAAKgJ,EAAMjG,KAAMiG,EAAMgkB,GAAIhe,EAAO2d,GACvD1d,GAAUyW,QATd1W,GAAQie,EAAAA,EAAAA,GAAajtB,EAAKgJ,EAAMjG,KAAMiG,EAAMgkB,GAAIhe,EAAO/H,GACvDgI,EAASyW,EAYX4G,EAAOj2B,KAAK2Y,GACZud,EAAQl2B,KAAK4Y,GACb2d,EAAkBt4B,KAAKqC,IAAIqY,EAAO4d,GAClCC,EAAmBv4B,KAAKqC,IAAIsY,EAAQ4d,EACtC,EAhxBJ,SAAwBR,EAAQt3B,IAC9BknB,EAAAA,EAAAA,GAAKoQ,GAASrjB,IACZ,MAAMgkB,EAAKhkB,EAAMgkB,GACXE,EAAQF,EAAGj4B,OAAS,EAC1B,IAAIO,EACJ,GAAI43B,EAAQn4B,EAAQ,CAClB,IAAKO,EAAI,EAAGA,EAAI43B,IAAS53B,SAChB0T,EAAMjG,KAAKiqB,EAAG13B,IAEvB03B,EAAG3hB,OAAO,EAAG6hB,MAGnB,CAqwBIC,CAAed,EAAQt3B,GAEvB,MAAM61B,EAAS0B,EAAOxW,QAAQ8W,GACxB9B,EAAUyB,EAAQzW,QAAQ+W,GAE1BO,EAAWC,IAAA,CAAUre,MAAOsd,EAAOe,IAAQ,EAAGpe,OAAQsd,EAAQc,IAAQ,IAE5E,MAAO,CACLjK,MAAOgK,EAAQ,GACf/J,KAAM+J,EAAQr4B,EAAS,GACvB61B,OAAQwC,EAAQxC,GAChBE,QAASsC,EAAQtC,GACjBwB,SACAC,UAEJ,CAOArlB,gBAAAA,CAAiBlL,GACf,OAAOA,CACT,CASA8X,gBAAAA,CAAiB9X,EAAOa,GACtB,OAAOkJ,GACT,CAQAunB,gBAAAA,CAAiBC,GAAQ,CAQzBpI,eAAAA,CAAgBtoB,GACd,MAAMqlB,EAAQhvB,KAAKgvB,MACnB,OAAIrlB,EAAQ,GAAKA,EAAQqlB,EAAMntB,OAAS,EAC/B,KAEF7B,KAAK4gB,iBAAiBoO,EAAMrlB,GAAOb,MAC5C,CAQAwxB,kBAAAA,CAAmBC,GACbv6B,KAAKuhB,iBACPgZ,EAAU,EAAIA,GAGhB,MAAMF,EAAQr6B,KAAK6xB,YAAc0I,EAAUv6B,KAAKsvB,QAChD,OAAOkL,EAAAA,EAAAA,GAAYx6B,KAAK02B,gBAAiB+D,EAAAA,EAAAA,GAAYz6B,KAAKQ,MAAO65B,EAAO,GAAKA,EAC/E,CAMAK,kBAAAA,CAAmBL,GACjB,MAAME,GAAWF,EAAQr6B,KAAK6xB,aAAe7xB,KAAKsvB,QAClD,OAAOtvB,KAAKuhB,eAAiB,EAAIgZ,EAAUA,CAC7C,CAOAzZ,YAAAA,GACE,OAAO9gB,KAAK4gB,iBAAiB5gB,KAAK26B,eACpC,CAKAA,YAAAA,GACE,MAAM,IAACt5B,EAAG,IAAEoC,GAAOzD,KAEnB,OAAOqB,EAAM,GAAKoC,EAAM,EAAIA,EAC1BpC,EAAM,GAAKoC,EAAM,EAAIpC,EACrB,CACJ,CAKAkQ,UAAAA,CAAW5H,GACT,MAAMqlB,EAAQhvB,KAAKgvB,OAAS,GAE5B,GAAIrlB,GAAS,GAAKA,EAAQqlB,EAAMntB,OAAQ,CACtC,MAAMW,EAAOwsB,EAAMrlB,GACnB,OAAOnH,EAAKkL,WACblL,EAAKkL,SAt1BV,SAA2B4H,EAAQ3L,EAAOnH,GACxC,OAAO+S,EAAAA,EAAAA,GAAcD,EAAQ,CAC3B9S,OACAmH,QACAhJ,KAAM,QAEV,CAg1BqBi6B,CAAkB56B,KAAKuR,aAAc5H,EAAOnH,IAE7D,OAAOxC,KAAK0N,WACZ1N,KAAK0N,UAh2BmB4H,EAg2BWtV,KAAKQ,MAAM+Q,aAh2BdtI,EAg2B4BjJ,MA/1BvDuV,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BrM,QACAtI,KAAM,YAHV,IAA4B2U,EAAQrM,CAi2BlC,CAMAmmB,SAAAA,GACE,MAAMyL,EAAc76B,KAAKiI,QAAQ+mB,MAG3B8L,GAAMzf,EAAAA,EAAAA,GAAUrb,KAAKmzB,eACrB3W,EAAMpb,KAAKsd,IAAItd,KAAKob,IAAIse,IACxBpe,EAAMtb,KAAKsd,IAAItd,KAAKsb,IAAIoe,IAExBvD,EAAav3B,KAAKw3B,iBAClB7P,EAAUkT,EAAYE,iBAAmB,EACzCrU,EAAI6Q,EAAaA,EAAWG,OAAO5b,MAAQ6L,EAAU,EACrDf,EAAI2Q,EAAaA,EAAWK,QAAQ7b,OAAS4L,EAAU,EAG7D,OAAO3nB,KAAKooB,eACRxB,EAAIpK,EAAMkK,EAAIhK,EAAMgK,EAAIlK,EAAMoK,EAAIlK,EAClCkK,EAAIlK,EAAMgK,EAAIlK,EAAMoK,EAAIpK,EAAMkK,EAAIhK,CACxC,CAMA4a,UAAAA,GACE,MAAMpO,EAAUlpB,KAAKiI,QAAQihB,QAE7B,MAAgB,SAAZA,IACOA,EAGJlpB,KAAKgL,0BAA0BnJ,OAAS,CACjD,CAKAm5B,qBAAAA,CAAsBjmB,GACpB,MAAMvJ,EAAOxL,KAAKwL,KACZhL,EAAQR,KAAKQ,MACbyH,EAAUjI,KAAKiI,SACf,KAAC6vB,EAAI,SAAE/V,EAAA,OAAUhB,GAAU9Y,EAC3B8W,EAAS+Y,EAAK/Y,OACdqJ,EAAepoB,KAAKooB,eAEpBkJ,EADQtxB,KAAKgvB,MACOntB,QAAUkd,EAAS,EAAI,GAC3Ckc,EAAK/I,GAAkB4F,GACvB51B,EAAQ,GAERg5B,EAAana,EAAOmT,WAAWl0B,KAAKuR,cACpC4pB,EAAYD,EAAWhS,QAAUgS,EAAWpf,MAAQ,EACpDsf,EAAgBD,EAAY,EAC5BE,EAAmB,SAAShB,GAChC,OAAOI,EAAAA,EAAAA,GAAYj6B,EAAO65B,EAAOc,EACnC,EACA,IAAIG,EAAal5B,EAAG4vB,EAAWuJ,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EAEpC,GAAiB,QAAbha,EACFuZ,EAAcD,EAAiBr7B,KAAKuU,QACpCknB,EAAMz7B,KAAKuU,OAAS0mB,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBtmB,EAAUV,KAAO+mB,EACvCW,EAAKhnB,EAAUR,YACV,GAAiB,WAAbwN,EACTuZ,EAAcD,EAAiBr7B,KAAKqU,KACpCwnB,EAAK9mB,EAAUV,IACf0nB,EAAKV,EAAiBtmB,EAAUR,QAAU6mB,EAC1CK,EAAMH,EAAcF,EACpBO,EAAM37B,KAAKqU,IAAM4mB,OACZ,GAAiB,SAAblZ,EACTuZ,EAAcD,EAAiBr7B,KAAKsU,OACpCknB,EAAMx7B,KAAKsU,MAAQ2mB,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBtmB,EAAUP,MAAQ4mB,EACxCU,EAAK/mB,EAAUT,WACV,GAAiB,UAAbyN,EACTuZ,EAAcD,EAAiBr7B,KAAKwU,MACpConB,EAAK7mB,EAAUP,KACfsnB,EAAKT,EAAiBtmB,EAAUT,OAAS8mB,EACzCI,EAAMF,EAAcF,EACpBM,EAAM17B,KAAKwU,KAAOymB,OACb,GAAa,MAATzvB,EAAc,CACvB,GAAiB,WAAbuW,EACFuZ,EAAcD,GAAkBtmB,EAAUV,IAAMU,EAAUR,QAAU,EAAI,SACnE,IAAIrN,EAAAA,EAAAA,GAAS6a,GAAW,CAC7B,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvBV,EAAcD,EAAiBr7B,KAAKQ,MAAM0L,OAAO8vB,GAAgBpb,iBAAiB9X,IAGpF+yB,EAAK9mB,EAAUV,IACf0nB,EAAKhnB,EAAUR,OACfknB,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,OACP,GAAa,MAATzvB,EAAc,CACvB,GAAiB,WAAbuW,EACFuZ,EAAcD,GAAkBtmB,EAAUP,KAAOO,EAAUT,OAAS,QAC/D,IAAIpN,EAAAA,EAAAA,GAAS6a,GAAW,CAC7B,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvBV,EAAcD,EAAiBr7B,KAAKQ,MAAM0L,OAAO8vB,GAAgBpb,iBAAiB9X,IAGpF0yB,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK7mB,EAAUP,KACfsnB,EAAK/mB,EAAUT,MAGjB,MAAM2nB,GAAQltB,EAAAA,EAAAA,GAAe9G,EAAQ+mB,MAAMW,cAAe2B,GACpD4K,EAAO96B,KAAKqC,IAAI,EAAGrC,KAAKkvB,KAAKgB,EAAc2K,IACjD,IAAK75B,EAAI,EAAGA,EAAIkvB,EAAalvB,GAAK85B,EAAM,CACtC,MAAM7mB,EAAUrV,KAAKuR,WAAWnP,GAC1B+5B,EAAcrE,EAAK5D,WAAW7e,GAC9B+mB,EAAoBrb,EAAOmT,WAAW7e,GAEtCkF,EAAY4hB,EAAY5hB,UACxB8hB,EAAYF,EAAY73B,MACxBg4B,EAAaF,EAAkBG,MAAQ,GACvCC,EAAmBJ,EAAkBK,WAErCrF,EAAY+E,EAAY/E,UACxBsF,EAAYP,EAAYO,UACxBC,EAAiBR,EAAYQ,gBAAkB,GAC/CC,EAAuBT,EAAYS,qBAEzC5K,EAAYN,GAAoB1xB,KAAMoC,EAAG2c,QAGvBze,IAAd0xB,IAIJuJ,GAAmBd,EAAAA,EAAAA,GAAYj6B,EAAOwxB,EAAWzX,GAE7C6N,EACFoT,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAGxBr5B,EAAMiB,KAAK,CACTq4B,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAjgB,MAAOvB,EACPjW,MAAO+3B,EACPC,aACAE,mBACApF,YACAsF,YACAC,iBACAC,yBAEJ,CAKA,OAHA58B,KAAK6zB,aAAevC,EACpBtxB,KAAK8zB,aAAewH,EAEbp5B,CACT,CAKAyyB,kBAAAA,CAAmB5f,GACjB,MAAMvJ,EAAOxL,KAAKwL,KACZvD,EAAUjI,KAAKiI,SACf,SAAC8Z,EAAUiN,MAAO6L,GAAe5yB,EACjCmgB,EAAepoB,KAAKooB,eACpB4G,EAAQhvB,KAAKgvB,OACb,MAAC0D,EAAA,WAAOmK,EAAA,QAAYlV,EAAO,OAAE8Q,GAAUoC,EACvCI,EAAK/I,GAAkBjqB,EAAQ6vB,MAC/BgF,EAAiB7B,EAAKtT,EACtBoV,EAAkBtE,GAAU9Q,EAAUmV,EACtC5jB,IAAYmC,EAAAA,EAAAA,GAAUrb,KAAKmzB,eAC3BjxB,EAAQ,GACd,IAAIE,EAAGsH,EAAMlH,EAAMuR,EAAOrF,EAAGC,EAAGquB,EAAW3C,EAAO/H,EAAME,EAAYyK,EAAWC,EAC3EC,EAAe,SAEnB,GAAiB,QAAbpb,EACFpT,EAAI3O,KAAKuU,OAASwoB,EAClBC,EAAYh9B,KAAKo9B,+BACZ,GAAiB,WAAbrb,EACTpT,EAAI3O,KAAKqU,IAAM0oB,EACfC,EAAYh9B,KAAKo9B,+BACZ,GAAiB,SAAbrb,EAAqB,CAC9B,MAAM+M,EAAM9uB,KAAKq9B,wBAAwBpC,GACzC+B,EAAYlO,EAAIkO,UAChBtuB,EAAIogB,EAAIpgB,OACH,GAAiB,UAAbqT,EAAsB,CAC/B,MAAM+M,EAAM9uB,KAAKq9B,wBAAwBpC,GACzC+B,EAAYlO,EAAIkO,UAChBtuB,EAAIogB,EAAIpgB,OACH,GAAa,MAATlD,EAAc,CACvB,GAAiB,WAAbuW,EACFpT,GAAMoG,EAAUV,IAAMU,EAAUR,QAAU,EAAKuoB,OAC1C,IAAI51B,EAAAA,EAAAA,GAAS6a,GAAW,CAC7B,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvBrtB,EAAI3O,KAAKQ,MAAM0L,OAAO8vB,GAAgBpb,iBAAiB9X,GAASg0B,EAElEE,EAAYh9B,KAAKo9B,+BACZ,GAAa,MAAT5xB,EAAc,CACvB,GAAiB,WAAbuW,EACFrT,GAAMqG,EAAUP,KAAOO,EAAUT,OAAS,EAAKwoB,OAC1C,IAAI51B,EAAAA,EAAAA,GAAS6a,GAAW,CAC7B,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvBttB,EAAI1O,KAAKQ,MAAM0L,OAAO8vB,GAAgBpb,iBAAiB9X,GAEzDk0B,EAAYh9B,KAAKq9B,wBAAwBpC,GAAI+B,UAGlC,MAATxxB,IACY,UAAVknB,EACFyK,EAAe,MACI,QAAVzK,IACTyK,EAAe,WAInB,MAAM5F,EAAav3B,KAAKw3B,iBACxB,IAAKp1B,EAAI,EAAGsH,EAAOslB,EAAMntB,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9CI,EAAOwsB,EAAM5sB,GACb2R,EAAQvR,EAAKuR,MAEb,MAAMooB,EAActB,EAAY3G,WAAWl0B,KAAKuR,WAAWnP,IAC3Di4B,EAAQr6B,KAAKiyB,gBAAgB7vB,GAAKy4B,EAAYyC,YAC9ChL,EAAOtyB,KAAK45B,wBAAwBx3B,GACpCowB,EAAaF,EAAKE,WAClByK,GAAYr1B,EAAAA,EAAAA,GAAQmM,GAASA,EAAMlS,OAAS,EAC5C,MAAM07B,EAAYN,EAAY,EACxB34B,EAAQ63B,EAAY73B,MACpBk5B,EAAcrB,EAAYsB,gBAC1BC,EAAcvB,EAAYwB,gBAChC,IA4CIC,EA5CAC,EAAgBb,EA8CpB,GA5CI5U,GACF1Z,EAAI2rB,EAEc,UAAd2C,IAEAa,EADEz7B,IAAMsH,EAAO,EACE1J,KAAKiI,QAAQmB,QAAoB,OAAV,QACzB,IAANhH,EACQpC,KAAKiI,QAAQmB,QAAmB,QAAT,OAExB,UAMhB8zB,EAFa,QAAbnb,EACiB,SAAf8a,GAAsC,IAAb3jB,GACb+jB,EAAYzK,EAAaA,EAAa,EAC5B,WAAfqK,GACKtF,EAAWK,QAAQ7b,OAAS,EAAIwhB,EAAY/K,EAAaA,GAEzD+E,EAAWK,QAAQ7b,OAASyW,EAAa,EAItC,SAAfqK,GAAsC,IAAb3jB,EACdsZ,EAAa,EACF,WAAfqK,EACItF,EAAWK,QAAQ7b,OAAS,EAAIwhB,EAAY/K,EAE5C+E,EAAWK,QAAQ7b,OAASkhB,EAAYzK,EAGrDiG,IACFyE,IAAe,GAEA,IAAbhkB,GAAmBijB,EAAY2B,oBACjCpvB,GAAK8jB,EAAc,EAAKpxB,KAAKsb,IAAIxD,MAGnCvK,EAAI0rB,EACJ6C,GAAc,EAAID,GAAazK,EAAa,GAK1C2J,EAAY2B,kBAAmB,CACjC,MAAMC,GAAe7V,EAAAA,EAAAA,GAAUiU,EAAY6B,iBACrCjiB,EAASwb,EAAW8B,QAAQj3B,GAC5B0Z,EAAQyb,EAAW6B,OAAOh3B,GAEhC,IAAIiS,EAAM6oB,EAAaa,EAAa1pB,IAChCG,EAAO,EAAIupB,EAAavpB,KAE5B,OAAQ2oB,GACR,IAAK,SACH9oB,GAAO0H,EAAS,EAChB,MACF,IAAK,SACH1H,GAAO0H,EAMT,OAAQihB,GACR,IAAK,SACHxoB,GAAQsH,EAAQ,EAChB,MACF,IAAK,QACHtH,GAAQsH,EACR,MACF,IAAK,QACC1Z,IAAMsH,EAAO,EACf8K,GAAQsH,EACC1Z,EAAI,IACboS,GAAQsH,EAAQ,GAOpB8hB,EAAW,CACTppB,OACAH,MACAyH,MAAOA,EAAQiiB,EAAajiB,MAC5BC,OAAQA,EAASgiB,EAAahiB,OAE9BzX,MAAO63B,EAAY8B,eAIvB/7B,EAAMiB,KAAK,CACT4Q,QACAue,OACA4K,aACAj1B,QAAS,CACPiR,WACA5U,QACAk5B,cACAE,cACAV,UAAWa,EACXV,eACAe,YAAa,CAACxvB,EAAGC,GACjBivB,aAGN,CAEA,OAAO17B,CACT,CAEAk7B,uBAAAA,GACE,MAAM,SAACrb,EAAA,MAAUiN,GAAShvB,KAAKiI,QAG/B,KAFkBoT,EAAAA,EAAAA,GAAUrb,KAAKmzB,eAG/B,MAAoB,QAAbpR,EAAqB,OAAS,QAGvC,IAAI2Q,EAAQ,SAUZ,MARoB,UAAhB1D,EAAM0D,MACRA,EAAQ,OACiB,QAAhB1D,EAAM0D,MACfA,EAAQ,QACiB,UAAhB1D,EAAM0D,QACfA,EAAQ,SAGHA,CACT,CAEA2K,uBAAAA,CAAwBpC,GACtB,MAAM,SAAClZ,EAAUiN,OAAO,WAAC6N,EAAA,OAAYpE,EAAA,QAAQ9Q,IAAY3nB,KAAKiI,QAExD60B,EAAiB7B,EAAKtT,EACtB+P,EAFa13B,KAAKw3B,iBAEEE,OAAO5b,MAEjC,IAAIkhB,EACAtuB,EA0DJ,MAxDiB,SAAbqT,EACE0W,GACF/pB,EAAI1O,KAAKsU,MAAQqT,EAEE,SAAfkV,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZtuB,GAAMgpB,EAAS,IAEfsF,EAAY,QACZtuB,GAAKgpB,KAGPhpB,EAAI1O,KAAKsU,MAAQwoB,EAEE,SAAfD,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZtuB,GAAMgpB,EAAS,IAEfsF,EAAY,OACZtuB,EAAI1O,KAAKwU,OAGS,UAAbuN,EACL0W,GACF/pB,EAAI1O,KAAKwU,KAAOmT,EAEG,SAAfkV,EACFG,EAAY,QACY,WAAfH,GACTG,EAAY,SACZtuB,GAAMgpB,EAAS,IAEfsF,EAAY,OACZtuB,GAAKgpB,KAGPhpB,EAAI1O,KAAKwU,KAAOsoB,EAEG,SAAfD,EACFG,EAAY,OACY,WAAfH,GACTG,EAAY,SACZtuB,GAAKgpB,EAAS,IAEdsF,EAAY,QACZtuB,EAAI1O,KAAKsU,QAIb0oB,EAAY,QAGP,CAACA,YAAWtuB,IACrB,CAKAyvB,iBAAAA,GACE,GAAIn+B,KAAKiI,QAAQ+mB,MAAMyJ,OACrB,OAGF,MAAMj4B,EAAQR,KAAKQ,MACbuhB,EAAW/hB,KAAKiI,QAAQ8Z,SAE9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC1N,IAAK,EAAGG,KAAMxU,KAAKwU,KAAMD,OAAQ/T,EAAMub,OAAQzH,MAAOtU,KAAKsU,OAClD,QAAbyN,GAAmC,WAAbA,EACnB,CAAC1N,IAAKrU,KAAKqU,IAAKG,KAAM,EAAGD,OAAQvU,KAAKuU,OAAQD,MAAO9T,EAAMsb,YADlE,CAGJ,CAKAsiB,cAAAA,GACE,MAAM,IAACtxB,EAAK7E,SAAS,gBAACkS,GAAgB,KAAE3F,EAAI,IAAEH,EAAA,MAAKyH,EAAA,OAAOC,GAAU/b,KAChEma,IACFrN,EAAIuxB,OACJvxB,EAAIoN,UAAYC,EAChBrN,EAAIwxB,SAAS9pB,EAAMH,EAAKyH,EAAOC,GAC/BjP,EAAIyxB,UAER,CAEAC,oBAAAA,CAAqB11B,GACnB,MAAMgvB,EAAO93B,KAAKiI,QAAQ6vB,KAC1B,IAAK93B,KAAKs3B,eAAiBQ,EAAK5O,QAC9B,OAAO,EAET,MACMvf,EADQ3J,KAAKgvB,MACCyP,WAAUvqB,GAAKA,EAAEpL,QAAUA,IAC/C,GAAIa,GAAS,EAAG,CAEd,OADamuB,EAAK5D,WAAWl0B,KAAKuR,WAAW5H,IACjC4Q,UAEd,OAAO,CACT,CAKAmkB,QAAAA,CAAS3pB,GACP,MAAM+iB,EAAO93B,KAAKiI,QAAQ6vB,KACpBhrB,EAAM9M,KAAK8M,IACX5K,EAAQlC,KAAKqzB,iBAAmBrzB,KAAKqzB,eAAiBrzB,KAAKg7B,sBAAsBjmB,IACvF,IAAI3S,EAAGsH,EAEP,MAAMi1B,EAAWA,CAACC,EAAIC,EAAI7kB,KACnBA,EAAM8B,OAAU9B,EAAM1V,QAG3BwI,EAAIuxB,OACJvxB,EAAIyN,UAAYP,EAAM8B,MACtBhP,EAAIsN,YAAcJ,EAAM1V,MACxBwI,EAAIgyB,YAAY9kB,EAAMsiB,YAAc,IACpCxvB,EAAIiyB,eAAiB/kB,EAAMwiB,iBAE3B1vB,EAAIkyB,YACJlyB,EAAImyB,OAAOL,EAAGlwB,EAAGkwB,EAAGjwB,GACpB7B,EAAIoyB,OAAOL,EAAGnwB,EAAGmwB,EAAGlwB,GACpB7B,EAAIqyB,SACJryB,EAAIyxB,UAAS,EAGf,GAAIzG,EAAK5O,QACP,IAAK9mB,EAAI,EAAGsH,EAAOxH,EAAML,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMD,EAAOD,EAAME,GAEf01B,EAAKsH,iBACPT,EACE,CAACjwB,EAAGvM,EAAKy5B,GAAIjtB,EAAGxM,EAAK05B,IACrB,CAACntB,EAAGvM,EAAK25B,GAAIntB,EAAGxM,EAAK45B,IACrB55B,GAIA21B,EAAK3F,WACPwM,EACE,CAACjwB,EAAGvM,EAAKq5B,IAAK7sB,EAAGxM,EAAKs5B,KACtB,CAAC/sB,EAAGvM,EAAKu5B,IAAK/sB,EAAGxM,EAAKw5B,KACtB,CACEr3B,MAAOnC,EAAKu6B,UACZ5gB,MAAO3Z,EAAKi1B,UACZkF,WAAYn6B,EAAKw6B,eACjBH,iBAAkBr6B,EAAKy6B,sBAI/B,CAEJ,CAKAyC,UAAAA,GACE,MAAM,MAAC7+B,EAAA,IAAOsM,EAAK7E,SAAS,OAAC8Y,EAAM,KAAE+W,IAAS93B,KACxCk7B,EAAana,EAAOmT,WAAWl0B,KAAKuR,cACpC4pB,EAAYpa,EAAOmI,QAAUgS,EAAWpf,MAAQ,EACtD,IAAKqf,EACH,OAEF,MAAMmE,EAAgBxH,EAAK5D,WAAWl0B,KAAKuR,WAAW,IAAIgJ,UACpD+gB,EAAct7B,KAAK8zB,aACzB,IAAI8H,EAAIE,EAAID,EAAIE,EAEZ/7B,KAAKooB,gBACPwT,GAAKnB,EAAAA,EAAAA,GAAYj6B,EAAOR,KAAKwU,KAAM2mB,GAAaA,EAAY,EAC5DW,GAAKrB,EAAAA,EAAAA,GAAYj6B,EAAOR,KAAKsU,MAAOgrB,GAAiBA,EAAgB,EACrEzD,EAAKE,EAAKT,IAEVO,GAAKpB,EAAAA,EAAAA,GAAYj6B,EAAOR,KAAKqU,IAAK8mB,GAAaA,EAAY,EAC3DY,GAAKtB,EAAAA,EAAAA,GAAYj6B,EAAOR,KAAKuU,OAAQ+qB,GAAiBA,EAAgB,EACtE1D,EAAKE,EAAKR,GAEZxuB,EAAIuxB,OACJvxB,EAAIyN,UAAY2gB,EAAWpf,MAC3BhP,EAAIsN,YAAc8gB,EAAW52B,MAE7BwI,EAAIkyB,YACJlyB,EAAImyB,OAAOrD,EAAIC,GACf/uB,EAAIoyB,OAAOpD,EAAIC,GACfjvB,EAAIqyB,SAEJryB,EAAIyxB,SACN,CAKAgB,UAAAA,CAAWxqB,GAGT,IAFoB/U,KAAKiI,QAAQ+mB,MAEhB9F,QACf,OAGF,MAAMpc,EAAM9M,KAAK8M,IAEXgI,EAAO9U,KAAKm+B,oBACdrpB,IACF0qB,EAAAA,EAAAA,GAAS1yB,EAAKgI,GAGhB,MAAM5S,EAAQlC,KAAK00B,cAAc3f,GACjC,IAAK,MAAM5S,KAAQD,EAAO,CACxB,MAAMu9B,EAAoBt9B,EAAK8F,QACzBsxB,EAAWp3B,EAAKmwB,KAChBve,EAAQ5R,EAAK4R,MACbpF,EAAIxM,EAAK+6B,YACfwC,EAAAA,EAAAA,GAAW5yB,EAAKiH,EAAO,EAAGpF,EAAG4qB,EAAUkG,EACzC,CAEI3qB,IACF6qB,EAAAA,EAAAA,GAAW7yB,EAEf,CAKA8yB,SAAAA,GACE,MAAM,IAAC9yB,EAAK7E,SAAS,SAAC8Z,EAAQ,MAAEgW,EAAK,QAAE3uB,IAAYpJ,KAEnD,IAAK+3B,EAAM7O,QACT,OAGF,MAAMoJ,GAAOC,EAAAA,EAAAA,IAAOwF,EAAMzF,MACpB3K,GAAUO,EAAAA,EAAAA,GAAU6P,EAAMpQ,SAC1B+K,EAAQqF,EAAMrF,MACpB,IAAI3T,EAASuT,EAAKE,WAAa,EAEd,WAAbzQ,GAAsC,WAAbA,IAAyB7a,EAAAA,EAAAA,GAAS6a,IAC7DhD,GAAU4I,EAAQpT,QACd3M,EAAAA,EAAAA,GAAQmwB,EAAM9d,QAChB8E,GAAUuT,EAAKE,YAAcuF,EAAM9d,KAAKpY,OAAS,KAGnDkd,GAAU4I,EAAQtT,IAGpB,MAAM,OAACwrB,EAAA,OAAQC,EAAA,SAAQriB,EAAQ,SAAEvE,GAv8CrC,SAAmBjQ,EAAO8V,EAAQgD,EAAU2Q,GAC1C,MAAM,IAACre,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,EAAK,MAAE9T,GAASyI,GACpC,UAAC8L,EAAA,OAAW7I,GAAU1L,EAC5B,IACIid,EAAUoiB,EAAQC,EADlB5mB,EAAW,EAEf,MAAM6C,EAASxH,EAASF,EAClByH,EAAQxH,EAAQE,EAEtB,GAAIvL,EAAMmf,eAAgB,CAGxB,GAFAyX,GAASE,EAAAA,EAAAA,IAAerN,EAAOle,EAAMF,IAEjCpN,EAAAA,EAAAA,GAAS6a,GAAW,CACtB,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvB8D,EAAS5zB,EAAO8vB,GAAgBpb,iBAAiB9X,GAASiT,EAASgD,OAEnE+gB,EADsB,WAAb/d,GACChN,EAAUR,OAASQ,EAAUV,KAAO,EAAI0H,EAASgD,EAElDoS,GAAeloB,EAAO8Y,EAAUhD,GAE3CtB,EAAWnJ,EAAQE,MACd,CACL,IAAItN,EAAAA,EAAAA,GAAS6a,GAAW,CACtB,MAAMia,EAAiB50B,OAAOC,KAAK0a,GAAU,GACvCjZ,EAAQiZ,EAASia,GACvB6D,EAAS3zB,EAAO8vB,GAAgBpb,iBAAiB9X,GAASgT,EAAQiD,OAElE8gB,EADsB,WAAb9d,GACChN,EAAUP,KAAOO,EAAUT,OAAS,EAAIwH,EAAQiD,EAEjDoS,GAAeloB,EAAO8Y,EAAUhD,GAE3C+gB,GAASC,EAAAA,EAAAA,IAAerN,EAAOne,EAAQF,GACvC6E,EAAwB,SAAb6I,GAAuB3E,EAAAA,EAAUA,EAAAA,EAE9C,MAAO,CAACyiB,SAAQC,SAAQriB,WAAUvE,WACpC,CAo6CiD8mB,CAAUhgC,KAAM+e,EAAQgD,EAAU2Q,IAE/EgN,EAAAA,EAAAA,GAAW5yB,EAAKirB,EAAM9d,KAAM,EAAG,EAAGqY,EAAM,CACtChuB,MAAOyzB,EAAMzzB,MACbmZ,WACAvE,WACA8jB,UAAWvK,GAAWC,EAAO3Q,EAAU3Y,GACvC+zB,aAAc,SACde,YAAa,CAAC2B,EAAQC,IAE1B,CAEAz9B,IAAAA,CAAK0S,GACE/U,KAAKs3B,eAIVt3B,KAAKo+B,iBACLp+B,KAAK0+B,SAAS3pB,GACd/U,KAAKq/B,aACLr/B,KAAK4/B,YACL5/B,KAAKu/B,WAAWxqB,GAClB,CAMA8S,OAAAA,GACE,MAAM1e,EAAOnJ,KAAKiI,QACZg4B,EAAK92B,EAAK6lB,OAAS7lB,EAAK6lB,MAAMlH,GAAK,EACnCoY,GAAKnxB,EAAAA,EAAAA,GAAe5F,EAAK2uB,MAAQ3uB,EAAK2uB,KAAKhQ,GAAI,GAC/CqY,GAAKpxB,EAAAA,EAAAA,GAAe5F,EAAK4X,QAAU5X,EAAK4X,OAAO+G,EAAG,GAExD,OAAK9nB,KAAKs3B,cAAgBt3B,KAAKqC,OAASwwB,GAAMuN,UAAU/9B,KAUjD,CAAC,CACNylB,EAAGoY,EACH79B,KAAO0S,IACL/U,KAAKo+B,iBACLp+B,KAAK0+B,SAAS3pB,GACd/U,KAAK4/B,WAAW,GAEjB,CACD9X,EAAGqY,EACH99B,KAAMA,KACJrC,KAAKq/B,YAAY,GAElB,CACDvX,EAAGmY,EACH59B,KAAO0S,IACL/U,KAAKu/B,WAAWxqB,EAAA,IAvBX,CAAC,CACN+S,EAAGmY,EACH59B,KAAO0S,IACL/U,KAAKqC,KAAK0S,EAAA,GAuBlB,CAOA/J,uBAAAA,CAAwBrK,GACtB,MAAM2zB,EAAQt0B,KAAKQ,MAAMyhB,+BACnBoe,EAASrgC,KAAKwL,KAAO,SACrBukB,EAAS,GACf,IAAI3tB,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAO4qB,EAAMzyB,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9C,MAAMkI,EAAOgqB,EAAMlyB,GACfkI,EAAK+1B,KAAYrgC,KAAK4L,IAAQjL,GAAQ2J,EAAK3J,OAASA,GACtDovB,EAAO5sB,KAAKmH,EAEhB,CACA,OAAOylB,CACT,CAOA6J,uBAAAA,CAAwBjwB,GACtB,MAAMR,EAAOnJ,KAAKiI,QAAQ+mB,MAAMkF,WAAWl0B,KAAKuR,WAAW5H,IAC3D,OAAO4oB,EAAAA,EAAAA,IAAOppB,EAAKmpB,KACrB,CAKAgO,UAAAA,GACE,MAAMC,EAAWvgC,KAAK45B,wBAAwB,GAAGpH,WACjD,OAAQxyB,KAAKooB,eAAiBpoB,KAAK8b,MAAQ9b,KAAK+b,QAAUwkB,CAC5D,ECtqDa,MAAMC,GACnBzgC,WAAAA,CAAYY,EAAM8/B,EAAOC,GACvB1gC,KAAKW,KAAOA,EACZX,KAAKygC,MAAQA,EACbzgC,KAAK0gC,SAAWA,EAChB1gC,KAAKkC,MAAQkF,OAAOu5B,OAAO,KAC7B,CAEAC,SAAAA,CAAUjgC,GACR,OAAOyG,OAAOg5B,UAAUS,cAAcp/B,KAAKzB,KAAKW,KAAKy/B,UAAWz/B,EAAKy/B,UACvE,CAMAU,QAAAA,CAAS3+B,GACP,MAAM4+B,EAAQ35B,OAAO45B,eAAe7+B,GACpC,IAAI8+B,GAyFR,SAA2BF,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAzFQG,CAAkBH,KAEpBE,EAAcjhC,KAAK8gC,SAASC,IAG9B,MAAM7+B,EAAQlC,KAAKkC,MACb0J,EAAKzJ,EAAKyJ,GACV60B,EAAQzgC,KAAKygC,MAAQ,IAAM70B,EAEjC,IAAKA,EACH,MAAM,IAAIu1B,MAAM,2BAA6Bh/B,GAG/C,OAAIyJ,KAAM1J,IAKVA,EAAM0J,GAAMzJ,EAsChB,SAA0BA,EAAMs+B,EAAOQ,GAErC,MAAMG,GAAeC,EAAAA,EAAAA,IAAMj6B,OAAOu5B,OAAO,MAAO,CAC9CM,EAAc35B,EAAAA,EAAS1E,IAAIq+B,GAAe,CAAC,EAC3C35B,EAAAA,EAAS1E,IAAI69B,GACbt+B,EAAKmF,WAGPA,EAAAA,EAASvE,IAAI09B,EAAOW,GAEhBj/B,EAAKm/B,eASX,SAAuBb,EAAOc,GAC5Bn6B,OAAOC,KAAKk6B,GAAQvgC,SAAQwgC,IAC1B,MAAMC,EAAgBD,EAASE,MAAM,KAC/BC,EAAaF,EAAch/B,MAC3Bm/B,EAAc,CAACnB,GAAOhY,OAAOgZ,GAAeI,KAAK,KACjDC,EAAQP,EAAOC,GAAUE,MAAM,KAC/BK,EAAaD,EAAMr/B,MACnBu/B,EAAcF,EAAMD,KAAK,KAC/Bv6B,EAAAA,EAAS26B,MAAML,EAAaD,EAAYK,EAAaD,EAAA,GAEzD,CAlBIG,CAAczB,EAAOt+B,EAAKm/B,eAGxBn/B,EAAKggC,aACP76B,EAAAA,EAAS86B,SAAS3B,EAAOt+B,EAAKggC,YAElC,CAtDIE,CAAiBlgC,EAAMs+B,EAAOQ,GAC1BjhC,KAAK0gC,UACPp5B,EAAAA,EAASo5B,SAASv+B,EAAKyJ,GAAIzJ,EAAKmgC,YANzB7B,CAUX,CAMA79B,GAAAA,CAAIgJ,GACF,OAAO5L,KAAKkC,MAAM0J,EACpB,CAKA22B,UAAAA,CAAWpgC,GACT,MAAMD,EAAQlC,KAAKkC,MACb0J,EAAKzJ,EAAKyJ,GACV60B,EAAQzgC,KAAKygC,MAEf70B,KAAM1J,UACDA,EAAM0J,GAGX60B,GAAS70B,KAAMtE,EAAAA,EAASm5B,YACnBn5B,EAAAA,EAASm5B,GAAO70B,GACnB5L,KAAK0gC,iBACA4B,EAAAA,GAAU12B,GAGvB,ECtEK,MAAM42B,GACXziC,WAAAA,GACEC,KAAKyiC,YAAc,IAAIjC,GAAc7zB,EAAmB,YAAY,GACpE3M,KAAK6U,SAAW,IAAI2rB,GAAc9R,GAAS,YAC3C1uB,KAAK2Z,QAAU,IAAI6mB,GAAcp5B,OAAQ,WACzCpH,KAAKkM,OAAS,IAAIs0B,GAAc3N,GAAO,UAGvC7yB,KAAK0iC,iBAAmB,CAAC1iC,KAAKyiC,YAAaziC,KAAKkM,OAAQlM,KAAK6U,SAC/D,CAKAzR,GAAAA,GAAa,QAAAu/B,EAAA/gC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAkyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvqB,EAAIuqB,GAAAhhC,UAAAghC,GACT5iC,KAAK6iC,MAAM,WAAYxqB,EACzB,CAEAxU,MAAAA,GAAgB,QAAAi/B,EAAAlhC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAqyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ1qB,EAAI0qB,GAAAnhC,UAAAmhC,GACZ/iC,KAAK6iC,MAAM,aAAcxqB,EAC3B,CAKA2qB,cAAAA,GAAwB,QAAAC,EAAArhC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAwyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7qB,EAAI6qB,GAAAthC,UAAAshC,GACpBljC,KAAK6iC,MAAM,WAAYxqB,EAAMrY,KAAKyiC,YACpC,CAKAx0B,WAAAA,GAAqB,QAAAk1B,EAAAvhC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA0yB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/qB,EAAI+qB,GAAAxhC,UAAAwhC,GACjBpjC,KAAK6iC,MAAM,WAAYxqB,EAAMrY,KAAK6U,SACpC,CAKAwuB,UAAAA,GAAoB,QAAAC,EAAA1hC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA6yB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJlrB,EAAIkrB,GAAA3hC,UAAA2hC,GAChBvjC,KAAK6iC,MAAM,WAAYxqB,EAAMrY,KAAK2Z,QACpC,CAKA6pB,SAAAA,GAAmB,QAAAC,EAAA7hC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAgzB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrrB,EAAIqrB,GAAA9hC,UAAA8hC,GACf1jC,KAAK6iC,MAAM,WAAYxqB,EAAMrY,KAAKkM,OACpC,CAMAy3B,aAAAA,CAAc/3B,GACZ,OAAO5L,KAAK4jC,KAAKh4B,EAAI5L,KAAKyiC,YAAa,aACzC,CAMAoB,UAAAA,CAAWj4B,GACT,OAAO5L,KAAK4jC,KAAKh4B,EAAI5L,KAAK6U,SAAU,UACtC,CAMAivB,SAAAA,CAAUl4B,GACR,OAAO5L,KAAK4jC,KAAKh4B,EAAI5L,KAAK2Z,QAAS,SACrC,CAMAoqB,QAAAA,CAASn4B,GACP,OAAO5L,KAAK4jC,KAAKh4B,EAAI5L,KAAKkM,OAAQ,QACpC,CAKA83B,iBAAAA,GAA2B,QAAAC,EAAAriC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAwzB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7rB,EAAI6rB,GAAAtiC,UAAAsiC,GACvBlkC,KAAK6iC,MAAM,aAAcxqB,EAAMrY,KAAKyiC,YACtC,CAKA0B,cAAAA,GAAwB,QAAAC,EAAAxiC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA2zB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJhsB,EAAIgsB,GAAAziC,UAAAyiC,GACpBrkC,KAAK6iC,MAAM,aAAcxqB,EAAMrY,KAAK6U,SACtC,CAKAyvB,aAAAA,GAAuB,QAAAC,EAAA3iC,UAAAC,OAANwW,EAAI,IAAA5H,MAAA8zB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnsB,EAAImsB,GAAA5iC,UAAA4iC,GACnBxkC,KAAK6iC,MAAM,aAAcxqB,EAAMrY,KAAK2Z,QACtC,CAKA8qB,YAAAA,GAAsB,QAAAC,EAAA9iC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAi0B,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJtsB,EAAIssB,GAAA/iC,UAAA+iC,GAClB3kC,KAAK6iC,MAAM,aAAcxqB,EAAMrY,KAAKkM,OACtC,CAKA22B,KAAAA,CAAMj8B,EAAQyR,EAAMusB,GAClB,IAAIvsB,GAAMrX,SAAQ6jC,IAChB,MAAMC,EAAMF,GAAiB5kC,KAAK+kC,oBAAoBF,GAClDD,GAAiBE,EAAIlE,UAAUiE,IAASC,IAAQ9kC,KAAK2Z,SAAWkrB,EAAIj5B,GACtE5L,KAAKglC,MAAMp+B,EAAQk+B,EAAKD,IAMxB9b,EAAAA,EAAAA,GAAK8b,GAAK1iC,IAOR,MAAM8iC,EAAUL,GAAiB5kC,KAAK+kC,oBAAoB5iC,GAC1DnC,KAAKglC,MAAMp+B,EAAQq+B,EAAS9iC,EAAA,MAIpC,CAKA6iC,KAAAA,CAAMp+B,EAAQs+B,EAAUC,GACtB,MAAMC,GAAcC,EAAAA,EAAAA,IAAYz+B,IAChCiuB,EAAAA,EAAAA,GAAKsQ,EAAU,SAAWC,GAAc,GAAID,GAC5CD,EAASt+B,GAAQu+B,IACjBtQ,EAAAA,EAAAA,GAAKsQ,EAAU,QAAUC,GAAc,GAAID,EAC7C,CAKAJ,mBAAAA,CAAoBpkC,GAClB,IAAK,IAAIyB,EAAI,EAAGA,EAAIpC,KAAK0iC,iBAAiB7gC,OAAQO,IAAK,CACrD,MAAM0iC,EAAM9kC,KAAK0iC,iBAAiBtgC,GAClC,GAAI0iC,EAAIlE,UAAUjgC,GAChB,OAAOmkC,CAEX,CAEA,OAAO9kC,KAAK2Z,OACd,CAKAiqB,IAAAA,CAAKh4B,EAAIg5B,EAAejkC,GACtB,MAAMwB,EAAOyiC,EAAchiC,IAAIgJ,GAC/B,QAAatL,IAAT6B,EACF,MAAM,IAAIg/B,MAAM,IAAMv1B,EAAK,yBAA2BjL,EAAO,KAE/D,OAAOwB,CACT,EAKF,IAAA+iC,GAA+B,IAAI1C,GCtKpB,MAAM8C,GACnBvlC,WAAAA,GACEC,KAAKulC,MAAQ,EACf,CAYAC,MAAAA,CAAOhlC,EAAOilC,EAAMptB,EAAMlM,GACX,eAATs5B,IACFzlC,KAAKulC,MAAQvlC,KAAK0lC,mBAAmBllC,GAAO,GAC5CR,KAAKO,QAAQP,KAAKulC,MAAO/kC,EAAO,YAGlC,MAAM2hC,EAAch2B,EAASnM,KAAK2lC,aAAanlC,GAAO2L,OAAOA,GAAUnM,KAAK2lC,aAAanlC,GACnFuvB,EAAS/vB,KAAKO,QAAQ4hC,EAAa3hC,EAAOilC,EAAMptB,GAMtD,MAJa,iBAATotB,IACFzlC,KAAKO,QAAQ4hC,EAAa3hC,EAAO,QACjCR,KAAKO,QAAQP,KAAKulC,MAAO/kC,EAAO,cAE3BuvB,CACT,CAKAxvB,OAAAA,CAAQ4hC,EAAa3hC,EAAOilC,EAAMptB,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMutB,KAAczD,EAAa,CACpC,MAAM0D,EAASD,EAAWC,OACpBj/B,EAASi/B,EAAOJ,GAChBxgB,EAAS,CAACzkB,EAAO6X,EAAMutB,EAAW39B,SACxC,IAA6C,KAAzC4sB,EAAAA,EAAAA,GAAajuB,EAAQqe,EAAQ4gB,IAAqBxtB,EAAKytB,WACzD,OAAO,CAEX,CAEA,OAAO,CACT,CAEAC,UAAAA,IAMOrlB,EAAAA,EAAAA,GAAc1gB,KAAK+zB,UACtB/zB,KAAKgmC,UAAYhmC,KAAK+zB,OACtB/zB,KAAK+zB,YAASzzB,EAElB,CAMAqlC,YAAAA,CAAanlC,GACX,GAAIR,KAAK+zB,OACP,OAAO/zB,KAAK+zB,OAGd,MAAMoO,EAAcniC,KAAK+zB,OAAS/zB,KAAK0lC,mBAAmBllC,GAI1D,OAFAR,KAAKimC,oBAAoBzlC,GAElB2hC,CACT,CAEAuD,kBAAAA,CAAmBllC,EAAOiI,GACxB,MAAM3B,EAAStG,GAASA,EAAMsG,OACxBmB,GAAU8G,EAAAA,EAAAA,GAAejI,EAAOmB,SAAWnB,EAAOmB,QAAQ0R,QAAS,CAAC,GACpEA,EAqBV,SAAoB7S,GAClB,MAAMo/B,EAAW,CAAC,EACZvsB,EAAU,GACVtS,EAAOD,OAAOC,KAAK69B,GAASvrB,QAAQzX,OAC1C,IAAK,IAAIE,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAC/BuX,EAAQxW,KAAK+hC,GAASpB,UAAUz8B,EAAKjF,KAGvC,MAAM+jC,EAAQr/B,EAAO6S,SAAW,GAChC,IAAK,IAAIvX,EAAI,EAAGA,EAAI+jC,EAAMtkC,OAAQO,IAAK,CACrC,MAAMyjC,EAASM,EAAM/jC,IAEY,IAA7BuX,EAAQiJ,QAAQijB,KAClBlsB,EAAQxW,KAAK0iC,GACbK,EAASL,EAAOj6B,KAAM,EAE1B,CAEA,MAAO,CAAC+N,UAASusB,WACnB,CAxCoBE,CAAWt/B,GAE3B,OAAmB,IAAZmB,GAAsBQ,EAkDjC,SAA2BjI,EAAK6lC,EAAuBp+B,EAASQ,GAAK,IAAnC,QAACkR,EAAO,SAAEusB,GAASG,EACnD,MAAMtW,EAAS,GACT1a,EAAU7U,EAAM+Q,aAEtB,IAAK,MAAMs0B,KAAUlsB,EAAS,CAC5B,MAAM/N,EAAKi6B,EAAOj6B,GACZzC,EAAOm9B,GAAQr+B,EAAQ2D,GAAKnD,GACrB,OAATU,GAGJ4mB,EAAO5sB,KAAK,CACV0iC,SACA59B,QAASs+B,GAAW/lC,EAAMsG,OAAQ,CAAC++B,SAAQM,MAAOD,EAASt6B,IAAMzC,EAAMkM,IAE3E,CAEA,OAAO0a,CACT,CAnE4CyW,CAAkBhmC,EAAOmZ,EAAS1R,EAASQ,GAAhD,EACrC,CAMAw9B,mBAAAA,CAAoBzlC,GAClB,MAAMimC,EAAsBzmC,KAAKgmC,WAAa,GACxC7D,EAAcniC,KAAK+zB,OACnBrD,EAAOA,CAAC3T,EAAG5I,IAAM4I,EAAE5Q,QAAOuC,IAAMyF,EAAEuyB,MAAK/3B,GAAKD,EAAEm3B,OAAOj6B,KAAO+C,EAAEk3B,OAAOj6B,OAC3E5L,KAAKO,QAAQmwB,EAAK+V,EAAqBtE,GAAc3hC,EAAO,QAC5DR,KAAKO,QAAQmwB,EAAKyR,EAAasE,GAAsBjmC,EAAO,QAC9D,EA2BF,SAAS8lC,GAAQr+B,EAASQ,GACxB,OAAKA,IAAmB,IAAZR,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CAqBA,SAASs+B,GAAWz/B,EAAM6/B,EAAmBx9B,EAAMkM,GAAS,IAAhC,OAACwwB,EAAM,MAAEM,GAAMQ,EACzC,MAAMt/B,EAAOP,EAAO8/B,gBAAgBf,GAC9Bz0B,EAAStK,EAAOuK,gBAAgBlI,EAAM9B,GAK5C,OAJI8+B,GAASN,EAAOv+B,UAElB8J,EAAOjO,KAAK0iC,EAAOv+B,UAEdR,EAAOwK,eAAeF,EAAQiE,EAAS,CAAC,IAAK,CAElDwxB,YAAY,EACZC,WAAW,EACXC,SAAS,GAEb,CClLO,SAASC,GAAarmC,EAAMsH,GACjC,MAAMg/B,EAAkB3/B,EAAAA,EAASwI,SAASnP,IAAS,CAAC,EAEpD,QADwBsH,EAAQ6H,UAAY,CAAC,GAAGnP,IAAS,CAAC,GACpCyO,WAAanH,EAAQmH,WAAa63B,EAAgB73B,WAAa,GACvF,CAgBA,SAAS83B,GAAct7B,GACrB,GAAW,MAAPA,GAAqB,MAAPA,GAAqB,MAAPA,EAC9B,OAAOA,CAEX,CAWO,SAASu7B,GAAcv7B,GAC5B,GAAIs7B,GAAct7B,GAChB,OAAOA,EACR,QAAAw7B,EAAAxlC,UAAAC,OAHkCwlC,EAAY,IAAA52B,MAAA22B,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,EAAA,GAAA1lC,UAAA0lC,GAI/C,IAAK,MAAMn+B,KAAQk+B,EAAc,CAC/B,MAAM77B,EAAOrC,EAAKqC,OAbH,SADOuW,EAeA5Y,EAAK4Y,WAdU,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAYOnW,EAAG/J,OAAS,GAAKqlC,GAAct7B,EAAG,GAAG27B,eAC1C,GAAI/7B,EACF,OAAOA,CAEX,CApBF,IAA0BuW,EAqBxB,MAAM,IAAIof,MAAM,6BAA6Bv1B,uDAC/C,CAEA,SAAS47B,GAAmB57B,EAAIJ,EAAM+C,GACpC,GAAIA,EAAQ/C,EAAO,YAAcI,EAC/B,MAAO,CAACJ,OAEZ,CAYA,SAASi8B,GAAiB3gC,EAAQmB,GAChC,MAAMy/B,EAAgBpF,EAAAA,GAAUx7B,EAAOnG,OAAS,CAACuL,OAAQ,CAAC,GACpDy7B,EAAe1/B,EAAQiE,QAAU,CAAC,EAClC07B,EAAiBZ,GAAalgC,EAAOnG,KAAMsH,GAC3CiE,EAAS9E,OAAOu5B,OAAO,MAqC7B,OAlCAv5B,OAAOC,KAAKsgC,GAAc3mC,SAAQ4K,IAChC,MAAMi8B,EAAYF,EAAa/7B,GAC/B,KAAK1E,EAAAA,EAAAA,GAAS2gC,GACZ,OAAOz5B,QAAQ05B,MAAM,0CAA0Cl8B,KAEjE,GAAIi8B,EAAUE,OACZ,OAAO35B,QAAQC,KAAK,kDAAkDzC,KAExE,MAAMJ,EAAO27B,GAAcv7B,EAAIi8B,EAzBnC,SAAkCj8B,EAAI9E,GACpC,GAAIA,EAAO+I,MAAQ/I,EAAO+I,KAAKC,SAAU,CACvC,MAAMk4B,EAAUlhC,EAAO+I,KAAKC,SAAS3D,QAAQ87B,GAAMA,EAAEn5B,UAAYlD,GAAMq8B,EAAEh5B,UAAYrD,IACrF,GAAIo8B,EAAQnmC,OACV,OAAO2lC,GAAmB57B,EAAI,IAAKo8B,EAAQ,KAAOR,GAAmB57B,EAAI,IAAKo8B,EAAQ,IAG1F,MAAO,CAAC,CACV,CAiB8CE,CAAyBt8B,EAAI9E,GAASQ,EAAAA,EAAS4E,OAAO27B,EAAUlnC,OACpGwnC,EAlEV,SAAmC38B,EAAM4D,GACvC,OAAO5D,IAAS4D,EAAY,UAAY,SAC1C,CAgEsBg5B,CAA0B58B,EAAMo8B,GAC5CS,EAAsBX,EAAcx7B,QAAU,CAAC,EACrDA,EAAON,IAAM08B,EAAAA,EAAAA,IAAQlhC,OAAOu5B,OAAO,MAAO,CAAC,CAACn1B,QAAOq8B,EAAWQ,EAAoB78B,GAAO68B,EAAoBF,IAAY,IAI3HrhC,EAAO+I,KAAKC,SAAS9O,SAAQuN,IAC3B,MAAM5N,EAAO4N,EAAQ5N,MAAQmG,EAAOnG,KAC9ByO,EAAYb,EAAQa,WAAa43B,GAAarmC,EAAMsH,GAEpDogC,GADkB/F,EAAAA,GAAU3hC,IAAS,CAAC,GACAuL,QAAU,CAAC,EACvD9E,OAAOC,KAAKghC,GAAqBrnC,SAAQunC,IACvC,MAAM/8B,EAxFZ,SAAmCI,EAAIwD,GACrC,IAAI5D,EAAOI,EAMX,MALW,YAAPA,EACFJ,EAAO4D,EACS,YAAPxD,IACTJ,EAAqB,MAAd4D,EAAoB,IAAM,KAE5B5D,CACT,CAgFmBg9B,CAA0BD,EAAWn5B,GAC5CxD,EAAK2C,EAAQ/C,EAAO,WAAaA,EACvCU,EAAON,GAAMM,EAAON,IAAOxE,OAAOu5B,OAAO,OACzC2H,EAAAA,EAAAA,IAAQp8B,EAAON,GAAK,CAAC,CAACJ,QAAOm8B,EAAa/7B,GAAKy8B,EAAoBE,IAAY,GAC/E,IAIJnhC,OAAOC,KAAK6E,GAAQlL,SAAQ0G,IAC1B,MAAMuB,EAAQiD,EAAOxE,IACrB4gC,EAAAA,EAAAA,IAAQr/B,EAAO,CAAC3B,EAAAA,EAAS4E,OAAOjD,EAAMtI,MAAO2G,EAAAA,EAAS2B,OAAO,IAGxDiD,CACT,CAEA,SAASu8B,GAAY3hC,GACnB,MAAMmB,EAAUnB,EAAOmB,UAAYnB,EAAOmB,QAAU,CAAC,GAErDA,EAAQ0R,SAAU5K,EAAAA,EAAAA,GAAe9G,EAAQ0R,QAAS,CAAC,GACnD1R,EAAQiE,OAASu7B,GAAiB3gC,EAAQmB,EAC5C,CAEA,SAASygC,GAAS74B,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXC,SAAWD,EAAKC,UAAY,GACjCD,EAAKqC,OAASrC,EAAKqC,QAAU,GACtBrC,CACT,CAWA,MAAM84B,GAAW,IAAIxoC,IACfyoC,GAAa,IAAIC,IAEvB,SAASC,GAAW/yB,EAAUgzB,GAC5B,IAAI1hC,EAAOshC,GAAS/lC,IAAImT,GAMxB,OALK1O,IACHA,EAAO0hC,IACPJ,GAAS5lC,IAAIgT,EAAU1O,GACvBuhC,GAAWxlC,IAAIiE,IAEVA,CACT,CAEA,MAAM2hC,GAAaA,CAACjmC,EAAKkmC,EAAKvhC,KAC5B,MAAMyB,GAAOoJ,EAAAA,EAAAA,GAAiB02B,EAAKvhC,QACtBpH,IAAT6I,GACFpG,EAAIK,IAAI+F,IAIG,MAAM+/B,GACnBnpC,WAAAA,CAAY+G,GACV9G,KAAKmpC,QA/BT,SAAoBriC,GAMlB,OALAA,EAASA,GAAU,CAAC,GACb+I,KAAO64B,GAAS5hC,EAAO+I,MAE9B44B,GAAY3hC,GAELA,CACT,CAwBmBsiC,CAAWtiC,GAC1B9G,KAAKqpC,YAAc,IAAIlpC,IACvBH,KAAKspC,eAAiB,IAAInpC,GAC5B,CAEA,YAAIopC,GACF,OAAOvpC,KAAKmpC,QAAQI,QACtB,CAEA,QAAI5oC,GACF,OAAOX,KAAKmpC,QAAQxoC,IACtB,CAEA,QAAIA,CAAKA,GACPX,KAAKmpC,QAAQxoC,KAAOA,CACtB,CAEA,QAAIkP,GACF,OAAO7P,KAAKmpC,QAAQt5B,IACtB,CAEA,QAAIA,CAAKA,GACP7P,KAAKmpC,QAAQt5B,KAAO64B,GAAS74B,EAC/B,CAEA,WAAI5H,GACF,OAAOjI,KAAKmpC,QAAQlhC,OACtB,CAEA,WAAIA,CAAQA,GACVjI,KAAKmpC,QAAQlhC,QAAUA,CACzB,CAEA,WAAI0R,GACF,OAAO3Z,KAAKmpC,QAAQxvB,OACtB,CAEAxT,MAAAA,GACE,MAAMW,EAAS9G,KAAKmpC,QACpBnpC,KAAKwpC,aACLf,GAAY3hC,EACd,CAEA0iC,UAAAA,GACExpC,KAAKqpC,YAAYI,QACjBzpC,KAAKspC,eAAeG,OACtB,CAQAt4B,gBAAAA,CAAiBu4B,GACf,OAAOZ,GAAWY,GAChB,IAAM,CAAC,CACL,YAAYA,IACZ,MAEN,CASAjzB,yBAAAA,CAA0BizB,EAAalzB,GACrC,OAAOsyB,GAAW,GAAGY,gBAA0BlzB,KAC7C,IAAM,CACJ,CACE,YAAYkzB,iBAA2BlzB,IACvC,eAAeA,KAGjB,CACE,YAAYkzB,IACZ,MAGR,CAUAxzB,uBAAAA,CAAwBwzB,EAAa7zB,GACnC,OAAOizB,GAAW,GAAGY,KAAe7zB,KAClC,IAAM,CAAC,CACL,YAAY6zB,cAAwB7zB,IACpC,YAAY6zB,IACZ,YAAY7zB,IACZ,MAEN,CAOA+wB,eAAAA,CAAgBf,GACd,MAAMj6B,EAAKi6B,EAAOj6B,GAElB,OAAOk9B,GAAW,GADL9oC,KAAKW,eACkBiL,KAClC,IAAM,CAAC,CACL,WAAWA,OACRi6B,EAAO8D,wBAA0B,MAE1C,CAKAC,aAAAA,CAAcC,EAAWC,GACvB,MAAMT,EAAcrpC,KAAKqpC,YACzB,IAAIvzB,EAAQuzB,EAAYzmC,IAAIinC,GAK5B,OAJK/zB,IAASg0B,IACZh0B,EAAQ,IAAI3V,IACZkpC,EAAYtmC,IAAI8mC,EAAW/zB,IAEtBA,CACT,CAQAzE,eAAAA,CAAgBw4B,EAAWE,EAAUD,GACnC,MAAM,QAAC7hC,EAAO,KAAEtH,GAAQX,KAClB8V,EAAQ9V,KAAK4pC,cAAcC,EAAWC,GACtCr9B,EAASqJ,EAAMlT,IAAImnC,GACzB,GAAIt9B,EACF,OAAOA,EAGT,MAAM2E,EAAS,IAAIy3B,IAEnBkB,EAAS/oC,SAAQqG,IACXwiC,IACFz4B,EAAOhO,IAAIymC,GACXxiC,EAAKrG,SAAQ0G,GAAOshC,GAAW53B,EAAQy4B,EAAWniC,MAEpDL,EAAKrG,SAAQ0G,GAAOshC,GAAW53B,EAAQnJ,EAASP,KAChDL,EAAKrG,SAAQ0G,GAAOshC,GAAW53B,EAAQkxB,EAAAA,GAAU3hC,IAAS,CAAC,EAAG+G,KAC9DL,EAAKrG,SAAQ0G,GAAOshC,GAAW53B,EAAQ9J,EAAAA,EAAUI,KACjDL,EAAKrG,SAAQ0G,GAAOshC,GAAW53B,EAAQ+wB,EAAAA,GAAaz6B,IAAA,IAGtD,MAAM4c,EAAQ7T,MAAMtM,KAAKiN,GAOzB,OANqB,IAAjBkT,EAAMziB,QACRyiB,EAAMnhB,KAAKiE,OAAOu5B,OAAO,OAEvBiI,GAAWvlC,IAAI0mC,IACjBj0B,EAAM/S,IAAIgnC,EAAUzlB,GAEfA,CACT,CAMA0lB,iBAAAA,GACE,MAAM,QAAC/hC,EAAO,KAAEtH,GAAQX,KAExB,MAAO,CACLiI,EACAq6B,EAAAA,GAAU3hC,IAAS,CAAC,EACpB2G,EAAAA,EAASwI,SAASnP,IAAS,CAAC,EAC5B,CAACA,QACD2G,EAAAA,EACA66B,EAAAA,GAEJ,CASA9rB,mBAAAA,CAAoBjF,EAAQgF,EAAOf,GAA0B,IAAjBc,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IACtD,MAAMmuB,EAAS,CAAC7nB,SAAS,IACnB,SAAC+hC,EAAQ,YAAEC,GAAeC,GAAYnqC,KAAKspC,eAAgBl4B,EAAQ+E,GACzE,IAAIlO,EAAUgiC,EACd,GAkDJ,SAAqB3c,EAAOlX,GAC1B,MAAM,aAACg0B,EAAY,YAAEC,IAAe1E,EAAAA,EAAAA,IAAarY,GAEjD,IAAK,MAAMtoB,KAAQoR,EAAO,CACxB,MAAMywB,EAAauD,EAAaplC,GAC1B8hC,EAAYuD,EAAYrlC,GACxB8D,GAASg+B,GAAaD,IAAevZ,EAAMtoB,GACjD,GAAK6hC,KAAeyD,EAAAA,EAAAA,IAAWxhC,IAAUyhC,GAAYzhC,KAC/Cg+B,IAAal/B,EAAAA,EAAAA,GAAQkB,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CA/DQ0hC,CAAYP,EAAU7zB,GAAQ,CAChC2Z,EAAO7nB,SAAU,EACjBmN,GAAUi1B,EAAAA,EAAAA,IAAWj1B,GAAWA,IAAYA,EAE5C,MAAMo1B,EAAczqC,KAAKsR,eAAeF,EAAQiE,EAAS60B,GACzDjiC,GAAUyiC,EAAAA,EAAAA,IAAeT,EAAU50B,EAASo1B,GAG9C,IAAK,MAAMzlC,KAAQoR,EACjB2Z,EAAO/qB,GAAQiD,EAAQjD,GAEzB,OAAO+qB,CACT,CAQAze,cAAAA,CAAeF,EAAQiE,GAA8C,IAArCc,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IAAK+oC,EAAkB/oC,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EACjE,MAAM,SAAC2pC,GAAYE,GAAYnqC,KAAKspC,eAAgBl4B,EAAQ+E,GAC5D,OAAOjP,EAAAA,EAAAA,GAASmO,IACZq1B,EAAAA,EAAAA,IAAeT,EAAU50B,OAAS/U,EAAWqqC,GAC7CV,CACN,EAGF,SAASE,GAAYS,EAAex5B,EAAQ+E,GAC1C,IAAIL,EAAQ80B,EAAchoC,IAAIwO,GACzB0E,IACHA,EAAQ,IAAI3V,IACZyqC,EAAc7nC,IAAIqO,EAAQ0E,IAE5B,MAAMC,EAAWI,EAAS0rB,OAC1B,IAAIp1B,EAASqJ,EAAMlT,IAAImT,GACvB,IAAKtJ,EAAQ,CAEXA,EAAS,CACPw9B,UAFeY,EAAAA,EAAAA,IAAgBz5B,EAAQ+E,GAGvC+zB,YAAa/zB,EAAShK,QAAO2+B,IAAMA,EAAEvD,cAAcniB,SAAS,YAE9DtP,EAAM/S,IAAIgT,EAAUtJ,GAEtB,OAAOA,CACT,CAEA,MAAM89B,GAAczhC,IAAS5B,EAAAA,EAAAA,GAAS4B,IACjC1B,OAAOK,oBAAoBqB,GAAO49B,MAAMh/B,IAAQ4iC,EAAAA,EAAAA,IAAWxhC,EAAMpB,MC9XtE,MAAMqjC,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqBjpB,EAAUvW,GACtC,MAAoB,QAAbuW,GAAmC,WAAbA,IAAiE,IAAvCgpB,GAAgBnoB,QAAQb,IAA6B,MAATvW,CACrG,CAEA,SAASy/B,GAAcC,EAAIC,GACzB,OAAO,SAASpuB,EAAG5I,GACjB,OAAO4I,EAAEmuB,KAAQ/2B,EAAE+2B,GACfnuB,EAAEouB,GAAMh3B,EAAEg3B,GACVpuB,EAAEmuB,GAAM/2B,EAAE+2B,EAChB,CACF,CAEA,SAASE,GAAqB/1B,GAC5B,MAAM7U,EAAQ6U,EAAQ7U,MAChB2G,EAAmB3G,EAAMyH,QAAQV,UAEvC/G,EAAMq2B,cAAc,gBACpBhC,EAAAA,EAAAA,GAAa1tB,GAAoBA,EAAiBkkC,WAAY,CAACh2B,GAAU7U,EAC3E,CAEA,SAAS8qC,GAAoBj2B,GAC3B,MAAM7U,EAAQ6U,EAAQ7U,MAChB2G,EAAmB3G,EAAMyH,QAAQV,WACvCstB,EAAAA,EAAAA,GAAa1tB,GAAoBA,EAAiBokC,WAAY,CAACl2B,GAAU7U,EAC3E,CAMA,SAASgrC,GAAUrpC,GAYjB,OAXIspC,EAAAA,EAAAA,MAAqC,kBAATtpC,EAC9BA,EAAO4pB,SAAS2f,eAAevpC,GACtBA,GAAQA,EAAKN,SAEtBM,EAAOA,EAAK,IAGVA,GAAQA,EAAKqnB,SAEfrnB,EAAOA,EAAKqnB,QAEPrnB,CACT,CAEA,MAAMwpC,GAAY,CAAC,EACbC,GAAYlkC,IAChB,MAAM8hB,EAASgiB,GAAU9jC,GACzB,OAAON,OAAOW,OAAO4jC,IAAWx/B,QAAQ0/B,GAAMA,EAAEriB,SAAWA,IAAQ/mB,KAAK,EAG1E,SAASqpC,GAAgB7C,EAAK3nC,EAAOyW,GACnC,MAAM1Q,EAAOD,OAAOC,KAAK4hC,GACzB,IAAK,MAAMvhC,KAAOL,EAAM,CACtB,MAAM0kC,GAAUrkC,EAChB,GAAIqkC,GAAUzqC,EAAO,CACnB,MAAMwH,EAAQmgC,EAAIvhC,UACXuhC,EAAIvhC,IACPqQ,EAAO,GAAKg0B,EAASzqC,KACvB2nC,EAAI8C,EAASh0B,GAAQjP,GAG3B,CACF,CAmBA,SAASkjC,GAAe/iC,EAAO8L,EAAWk3B,GACxC,OAAOhjC,EAAMhB,QAAQ0M,KAAO1L,EAAMgjC,GAASl3B,EAAUk3B,EACvD,CAeA,MAAMC,GAEJt/B,gBAAkBtF,EAAAA,EAClBsF,iBAAmB++B,GACnB/+B,iBAAmB01B,EAAAA,GACnB11B,gBAAkBs4B,GAClBt4B,uBACAA,gBAAkBg/B,GAElB,eAAO9K,GACLoE,GAAS9hC,OAAOxB,WAChBuqC,IACF,CAEA,iBAAO5J,GACL2C,GAASrhC,UAAUjC,WACnBuqC,IACF,CAGApsC,WAAAA,CAAYoC,EAAMiqC,GAChB,MAAMtlC,EAAS9G,KAAK8G,OAAS,IAAIoiC,GAAOkD,GAClCC,EAAgBb,GAAUrpC,GAC1BmqC,EAAgBV,GAASS,GAC/B,GAAIC,EACF,MAAM,IAAInL,MACR,4CAA+CmL,EAAc1gC,GAA7D,kDACgD0gC,EAAc9iB,OAAO5d,GAAK,oBAI9E,MAAM3D,EAAUnB,EAAOwK,eAAexK,EAAOkjC,oBAAqBhqC,KAAKuR,cAEvEvR,KAAKupC,SAAW,IAAKziC,EAAOyiC,UCpJzB,SAAyB/f,GAC9B,QAAKiiB,EAAAA,EAAAA,MAAiD,qBAApBc,iBAAmC/iB,aAAkB+iB,gBAC9EtiB,EAEFyD,EACT,CD+I4C8e,CAAgBH,IACxDrsC,KAAKupC,SAASvf,aAAaljB,GAE3B,MAAMuO,EAAUrV,KAAKupC,SAAShgB,eAAe8iB,EAAepkC,EAAQyR,aAC9D8P,EAASnU,GAAWA,EAAQmU,OAC5BzN,EAASyN,GAAUA,EAAOzN,OAC1BD,EAAQ0N,GAAUA,EAAO1N,MAE/B9b,KAAK4L,IAAK6gC,EAAAA,EAAAA,MACVzsC,KAAK8M,IAAMuI,EACXrV,KAAKwpB,OAASA,EACdxpB,KAAK8b,MAAQA,EACb9b,KAAK+b,OAASA,EACd/b,KAAK0sC,SAAWzkC,EAIhBjI,KAAK2sC,aAAe3sC,KAAK0Z,YACzB1Z,KAAK6nB,QAAU,GACf7nB,KAAK4sC,UAAY,GACjB5sC,KAAKqL,aAAU/K,EACfN,KAAKonB,MAAQ,GACbpnB,KAAKysB,6BAA0BnsB,EAC/BN,KAAK+U,eAAYzU,EACjBN,KAAKsC,QAAU,GACftC,KAAK6sC,gBAAavsC,EAClBN,KAAK8sC,WAAa,CAAC,EAEnB9sC,KAAK+sC,0BAAuBzsC,EAC5BN,KAAKgtC,gBAAkB,GACvBhtC,KAAKkM,OAAS,CAAC,EACflM,KAAKitC,SAAW,IAAI3H,GACpBtlC,KAAKsuB,SAAW,CAAC,EACjBtuB,KAAKktC,eAAiB,CAAC,EACvBltC,KAAKmtC,UAAW,EAChBntC,KAAK8W,yBAAsBxW,EAC3BN,KAAK0N,cAAWpN,EAChBN,KAAKotC,WAAYC,EAAAA,EAAAA,KAASrjC,GAAQhK,KAAKmG,OAAO6D,IAAO/B,EAAQqlC,aAAe,GAC5EttC,KAAKsY,aAAe,GAGpBqzB,GAAU3rC,KAAK4L,IAAM5L,KAEhBqV,GAAYmU,GASjBzlB,EAASf,OAAOhD,KAAM,WAAYorC,IAClCrnC,EAASf,OAAOhD,KAAM,WAAYsrC,IAElCtrC,KAAKutC,cACDvtC,KAAKmtC,UACPntC,KAAKmG,UATLiI,QAAQ05B,MAAM,oEAWlB,CAEA,eAAIpuB,GACF,MAAOzR,SAAS,YAACyR,EAAW,oBAAE8zB,GAAoB,MAAE1xB,EAAA,OAAOC,EAAM,aAAE4wB,GAAgB3sC,KACnF,OAAK0gB,EAAAA,EAAAA,GAAchH,GAKf8zB,GAAuBb,EAElBA,EAIF5wB,EAASD,EAAQC,EAAS,KATxBrC,CAUX,CAEA,QAAI7J,GACF,OAAO7P,KAAK8G,OAAO+I,IACrB,CAEA,QAAIA,CAAKA,GACP7P,KAAK8G,OAAO+I,KAAOA,CACrB,CAEA,WAAI5H,GACF,OAAOjI,KAAK0sC,QACd,CAEA,WAAIzkC,CAAQA,GACVjI,KAAK8G,OAAOmB,QAAUA,CACxB,CAEA,YAAIi9B,GACF,OAAOA,EACT,CAKAqI,WAAAA,GAeE,OAbAvtC,KAAK62B,cAAc,cAEf72B,KAAKiI,QAAQwlC,WACfztC,KAAKwsB,UAELkhB,EAAAA,EAAAA,IAAY1tC,KAAMA,KAAKiI,QAAQskB,kBAGjCvsB,KAAK2tC,aAGL3tC,KAAK62B,cAAc,aAEZ72B,IACT,CAEAypC,KAAAA,GAEE,OADAmE,EAAAA,EAAAA,IAAY5tC,KAAKwpB,OAAQxpB,KAAK8M,KACvB9M,IACT,CAEA2D,IAAAA,GAEE,OADAI,EAASJ,KAAK3D,MACPA,IACT,CAOAwsB,MAAAA,CAAO1Q,EAAOC,GACPhY,EAAS9B,QAAQjC,MAGpBA,KAAK6tC,kBAAoB,CAAC/xB,QAAOC,UAFjC/b,KAAK8tC,QAAQhyB,EAAOC,EAIxB,CAEA+xB,OAAAA,CAAQhyB,EAAOC,GACb,MAAM9T,EAAUjI,KAAKiI,QACfuhB,EAASxpB,KAAKwpB,OACd9P,EAAczR,EAAQulC,qBAAuBxtC,KAAK0Z,YAClDq0B,EAAU/tC,KAAKupC,SAASzf,eAAeN,EAAQ1N,EAAOC,EAAQrC,GAC9Ds0B,EAAW/lC,EAAQskB,kBAAoBvsB,KAAKupC,SAAS1f,sBACrD7f,EAAOhK,KAAK8b,MAAQ,SAAW,SAErC9b,KAAK8b,MAAQiyB,EAAQjyB,MACrB9b,KAAK+b,OAASgyB,EAAQhyB,OACtB/b,KAAK2sC,aAAe3sC,KAAK0Z,aACpBg0B,EAAAA,EAAAA,IAAY1tC,KAAMguC,GAAU,KAIjChuC,KAAK62B,cAAc,SAAU,CAAC9tB,KAAMglC,KAEpClZ,EAAAA,EAAAA,GAAa5sB,EAAQgmC,SAAU,CAACjuC,KAAM+tC,GAAU/tC,MAE5CA,KAAKmtC,UACHntC,KAAKotC,UAAUpjC,IAEjBhK,KAAKkuC,SAGX,CAEAC,mBAAAA,GACE,MACMC,EADUpuC,KAAKiI,QACSiE,QAAU,CAAC,GAEzC6c,EAAAA,EAAAA,GAAKqlB,GAAe,CAACC,EAAahO,KAChCgO,EAAYziC,GAAKy0B,CAAA,GAErB,CAKAiO,mBAAAA,GACE,MAAMrmC,EAAUjI,KAAKiI,QACfsmC,EAAYtmC,EAAQiE,OACpBA,EAASlM,KAAKkM,OACdsiC,EAAUpnC,OAAOC,KAAK6E,GAAQ5I,QAAO,CAAC2lC,EAAKr9B,KAC/Cq9B,EAAIr9B,IAAM,EACHq9B,IACN,CAAC,GACJ,IAAI/mC,EAAQ,GAERqsC,IACFrsC,EAAQA,EAAMumB,OACZrhB,OAAOC,KAAKknC,GAAWx0B,KAAKnO,IAC1B,MAAMy7B,EAAekH,EAAU3iC,GACzBJ,EAAO27B,GAAcv7B,EAAIy7B,GACzBoH,EAAoB,MAATjjC,EACX4c,EAAwB,MAAT5c,EACrB,MAAO,CACLvD,QAASo/B,EACTqH,UAAWD,EAAW,YAAcrmB,EAAe,SAAW,OAC9DumB,MAAOF,EAAW,eAAiBrmB,EAAe,WAAa,SAChE,OAKPW,EAAAA,EAAAA,GAAK7mB,GAAQC,IACX,MAAMklC,EAAellC,EAAK8F,QACpB2D,EAAKy7B,EAAaz7B,GAClBJ,EAAO27B,GAAcv7B,EAAIy7B,GACzBuH,GAAY7/B,EAAAA,EAAAA,GAAes4B,EAAa1mC,KAAMwB,EAAKwsC,YAE3BruC,IAA1B+mC,EAAatlB,UAA0BipB,GAAqB3D,EAAatlB,SAAUvW,KAAUw/B,GAAqB7oC,EAAKusC,aACzHrH,EAAatlB,SAAW5f,EAAKusC,WAG/BF,EAAQ5iC,IAAM,EACd,IAAI3C,EAAQ,KACZ,GAAI2C,KAAMM,GAAUA,EAAON,GAAIjL,OAASiuC,EACtC3lC,EAAQiD,EAAON,OACV,CAEL3C,EAAQ,IADWi8B,GAASnB,SAAS6K,GAC7B,CAAe,CACrBhjC,KACAjL,KAAMiuC,EACN9hC,IAAK9M,KAAK8M,IACVtM,MAAOR,OAETkM,EAAOjD,EAAM2C,IAAM3C,EAGrBA,EAAMgrB,KAAKoT,EAAcp/B,EAAA,KAG3B8gB,EAAAA,EAAAA,GAAKylB,GAAS,CAACK,EAAYjjC,KACpBijC,UACI3iC,EAAON,OAIlBmd,EAAAA,EAAAA,GAAK7c,GAASjD,IACZ+b,EAAQ/d,UAAUjH,KAAMiJ,EAAOA,EAAMhB,SACrC+c,EAAQ4C,OAAO5nB,KAAMiJ,EAAA,GAEzB,CAKA6lC,eAAAA,GACE,MAAMtlC,EAAWxJ,KAAK4sC,UAChBh1B,EAAU5X,KAAK6P,KAAKC,SAASjO,OAC7B8V,EAAUnO,EAAS3H,OAGzB,GADA2H,EAASob,MAAK,CAAC7H,EAAG5I,IAAM4I,EAAEpT,MAAQwK,EAAExK,QAChCgO,EAAUC,EAAS,CACrB,IAAK,IAAIxV,EAAIwV,EAASxV,EAAIuV,IAAWvV,EACnCpC,KAAK+uC,oBAAoB3sC,GAE3BoH,EAAS2O,OAAOP,EAASD,EAAUC,GAErC5X,KAAKgtC,gBAAkBxjC,EAASwlC,MAAM,GAAGpqB,KAAKqmB,GAAc,QAAS,SACvE,CAKAgE,2BAAAA,GACE,MAAOrC,UAAWpjC,EAAUqG,MAAM,SAACC,IAAa9P,KAC5CwJ,EAAS3H,OAASiO,EAASjO,eACtB7B,KAAKqL,QAEd7B,EAASxI,SAAQ,CAACsJ,EAAMX,KACmC,IAArDmG,EAAS3D,QAAOuC,GAAKA,IAAMpE,EAAKoV,WAAU7d,QAC5C7B,KAAK+uC,oBAAoBplC,KAG/B,CAEAulC,wBAAAA,GACE,MAAMC,EAAiB,GACjBr/B,EAAW9P,KAAK6P,KAAKC,SAC3B,IAAI1N,EAAGsH,EAIP,IAFA1J,KAAKivC,8BAEA7sC,EAAI,EAAGsH,EAAOoG,EAASjO,OAAQO,EAAIsH,EAAMtH,IAAK,CACjD,MAAMmM,EAAUuB,EAAS1N,GACzB,IAAIkI,EAAOtK,KAAK+P,eAAe3N,GAC/B,MAAMzB,EAAO4N,EAAQ5N,MAAQX,KAAK8G,OAAOnG,KAazC,GAXI2J,EAAK3J,MAAQ2J,EAAK3J,OAASA,IAC7BX,KAAK+uC,oBAAoB3sC,GACzBkI,EAAOtK,KAAK+P,eAAe3N,IAE7BkI,EAAK3J,KAAOA,EACZ2J,EAAK8E,UAAYb,EAAQa,WAAa43B,GAAarmC,EAAMX,KAAKiI,SAC9DqC,EAAK8kC,MAAQ7gC,EAAQ6gC,OAAS,EAC9B9kC,EAAKX,MAAQvH,EACbkI,EAAKyJ,MAAQ,GAAKxF,EAAQwF,MAC1BzJ,EAAK+kC,QAAUrvC,KAAKyb,iBAAiBrZ,GAEjCkI,EAAKY,WACPZ,EAAKY,WAAWoD,YAAYlM,GAC5BkI,EAAKY,WAAW6C,iBACX,CACL,MAAMuhC,EAAkBpK,GAASvB,cAAchjC,IACzC,mBAACiN,EAAA,gBAAoBC,GAAmBvG,EAAAA,EAASwI,SAASnP,GAChEyG,OAAOe,OAAOmnC,EAAiB,CAC7BzhC,gBAAiBq3B,GAASrB,WAAWh2B,GACrCD,mBAAoBA,GAAsBs3B,GAASrB,WAAWj2B,KAEhEtD,EAAKY,WAAa,IAAIokC,EAAgBtvC,KAAMoC,GAC5C+sC,EAAehsC,KAAKmH,EAAKY,YAE7B,CAGA,OADAlL,KAAK8uC,kBACEK,CACT,CAMAI,cAAAA,IACExmB,EAAAA,EAAAA,GAAK/oB,KAAK6P,KAAKC,UAAU,CAACvB,EAAStE,KACjCjK,KAAK+P,eAAe9F,GAAciB,WAAWgF,OAAO,GACnDlQ,KACL,CAKAkQ,KAAAA,GACElQ,KAAKuvC,iBACLvvC,KAAK62B,cAAc,QACrB,CAEA1wB,MAAAA,CAAO6D,GACL,MAAMlD,EAAS9G,KAAK8G,OAEpBA,EAAOX,SACP,MAAM8B,EAAUjI,KAAK0sC,SAAW5lC,EAAOwK,eAAexK,EAAOkjC,oBAAqBhqC,KAAKuR,cACjFi+B,EAAgBxvC,KAAK8W,qBAAuB7O,EAAQV,UAU1D,GARAvH,KAAKyvC,gBACLzvC,KAAK0vC,sBACL1vC,KAAK2vC,uBAIL3vC,KAAKitC,SAASlH,cAEuD,IAAjE/lC,KAAK62B,cAAc,eAAgB,CAAC7sB,OAAM87B,YAAY,IACxD,OAIF,MAAMqJ,EAAiBnvC,KAAKkvC,2BAE5BlvC,KAAK62B,cAAc,wBAGnB,IAAI5O,EAAa,EACjB,IAAK,IAAI7lB,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,EAAMtH,IAAK,CAC/D,MAAM,WAAC8I,GAAclL,KAAK+P,eAAe3N,GACnC8N,GAASs/B,IAAyD,IAAxCL,EAAevsB,QAAQ1X,GAGvDA,EAAW2F,sBAAsBX,GACjC+X,EAAa7mB,KAAKqC,KAAKyH,EAAW2I,iBAAkBoU,EACtD,CACAA,EAAajoB,KAAK4vC,YAAc3nC,EAAQyd,OAAOmqB,YAAc5nB,EAAa,EAC1EjoB,KAAK8vC,cAAc7nB,GAGdunB,IAGHzmB,EAAAA,EAAAA,GAAKomB,GAAiBjkC,IACpBA,EAAWgF,OAAO,IAItBlQ,KAAK+vC,gBAAgB/lC,GAGrBhK,KAAK62B,cAAc,cAAe,CAAC7sB,SAEnChK,KAAK6nB,QAAQjD,KAAKqmB,GAAc,IAAK,SAGrC,MAAM,QAAC3oC,EAAO,WAAEuqC,GAAc7sC,KAC1B6sC,EACF7sC,KAAKgwC,cAAcnD,GAAY,GACtBvqC,EAAQT,QACjB7B,KAAKiwC,mBAAmB3tC,EAASA,GAAS,GAG5CtC,KAAKkuC,QACP,CAKAuB,aAAAA,IACE1mB,EAAAA,EAAAA,GAAK/oB,KAAKkM,QAASjD,IACjB+b,EAAQ+C,UAAU/nB,KAAMiJ,EAAA,IAG1BjJ,KAAKmuC,sBACLnuC,KAAKsuC,qBACP,CAKAoB,mBAAAA,GACE,MAAMznC,EAAUjI,KAAKiI,QACfioC,EAAiB,IAAIrH,IAAIzhC,OAAOC,KAAKrH,KAAK8sC,aAC1CqD,EAAY,IAAItH,IAAI5gC,EAAQmoC,SAE7BC,EAAAA,EAAAA,IAAUH,EAAgBC,MAAgBnwC,KAAK+sC,uBAAyB9kC,EAAQwlC,aAEnFztC,KAAKswC,eACLtwC,KAAK2tC,aAET,CAKAgC,oBAAAA,GACE,MAAM,eAACzC,GAAkBltC,KACnBuwC,EAAUvwC,KAAKwwC,0BAA4B,GACjD,IAAK,MAAM,OAAC5pC,EAAM,MAAEtF,EAAA,MAAOoQ,KAAU6+B,EAAS,CAE5CzE,GAAgBoB,EAAgB5rC,EADR,oBAAXsF,GAAgC8K,EAAQA,EAEvD,CACF,CAKA8+B,sBAAAA,GACE,MAAMl4B,EAAetY,KAAKsY,aAC1B,IAAKA,IAAiBA,EAAazW,OACjC,OAGF7B,KAAKsY,aAAe,GACpB,MAAMm4B,EAAezwC,KAAK6P,KAAKC,SAASjO,OAClC6uC,EAAWvW,GAAQ,IAAI0O,IAC3BvwB,EACGnM,QAAO0/B,GAAKA,EAAE,KAAO1R,IACrBpgB,KAAI,CAAC8xB,EAAGzpC,IAAMA,EAAI,IAAMypC,EAAE1zB,OAAO,GAAG0pB,KAAK,QAGxC8O,EAAYD,EAAQ,GAC1B,IAAK,IAAItuC,EAAI,EAAGA,EAAIquC,EAAcruC,IAChC,KAAKiuC,EAAAA,EAAAA,IAAUM,EAAWD,EAAQtuC,IAChC,OAGJ,OAAOqO,MAAMtM,KAAKwsC,GACf52B,KAAI8xB,GAAKA,EAAEnK,MAAM,OACjB3nB,KAAIgD,IAAA,CAAOnW,OAAQmW,EAAE,GAAIzb,OAAQyb,EAAE,GAAIrL,OAAQqL,EAAE,MACtD,CAOA+yB,aAAAA,CAAc7nB,GACZ,IAA+D,IAA3DjoB,KAAK62B,cAAc,eAAgB,CAACiP,YAAY,IAClD,OAGF9gB,EAAQ7e,OAAOnG,KAAMA,KAAK8b,MAAO9b,KAAK+b,OAAQkM,GAE9C,MAAMnT,EAAO9U,KAAK+U,UACZ67B,EAAS97B,EAAKgH,OAAS,GAAKhH,EAAKiH,QAAU,EAEjD/b,KAAK6nB,QAAU,IACfkB,EAAAA,EAAAA,GAAK/oB,KAAKonB,OAAQ1C,IACZksB,GAA2B,cAAjBlsB,EAAI3C,WAOd2C,EAAIzd,WACNyd,EAAIzd,YAENjH,KAAK6nB,QAAQ1kB,QAAQuhB,EAAImD,WAAU,GAClC7nB,MAEHA,KAAK6nB,QAAQ7mB,SAAQ,CAACmB,EAAMwH,KAC1BxH,EAAK0uC,KAAOlnC,CAAA,IAGd3J,KAAK62B,cAAc,cACrB,CAOAkZ,eAAAA,CAAgB/lC,GACd,IAA6E,IAAzEhK,KAAK62B,cAAc,uBAAwB,CAAC7sB,OAAM87B,YAAY,IAAlE,CAIA,IAAK,IAAI1jC,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EAC5DpC,KAAK+P,eAAe3N,GAAG8I,WAAWjE,YAGpC,IAAK,IAAI7E,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EAC5DpC,KAAK8wC,eAAe1uC,GAAGkoC,EAAAA,EAAAA,IAAWtgC,GAAQA,EAAK,CAACC,aAAc7H,IAAM4H,GAGtEhK,KAAK62B,cAAc,sBAAuB,CAAC7sB,SAC7C,CAOA8mC,cAAAA,CAAennC,EAAOK,GACpB,MAAMM,EAAOtK,KAAK+P,eAAepG,GAC3B0O,EAAO,CAAC/N,OAAMX,QAAOK,OAAM87B,YAAY,IAEW,IAApD9lC,KAAK62B,cAAc,sBAAuBxe,KAI9C/N,EAAKY,WAAWvJ,QAAQqI,GAExBqO,EAAKytB,YAAa,EAClB9lC,KAAK62B,cAAc,qBAAsBxe,GAC3C,CAEA61B,MAAAA,IACiE,IAA3DluC,KAAK62B,cAAc,eAAgB,CAACiP,YAAY,MAIhD/hC,EAASV,IAAIrD,MACXA,KAAKmtC,WAAappC,EAAS9B,QAAQjC,OACrC+D,EAASzC,MAAMtB,OAGjBA,KAAKqC,OACL+oC,GAAqB,CAAC5qC,MAAOR,QAEjC,CAEAqC,IAAAA,GACE,IAAID,EACJ,GAAIpC,KAAK6tC,kBAAmB,CAC1B,MAAM,MAAC/xB,EAAA,OAAOC,GAAU/b,KAAK6tC,kBAC7B7tC,KAAK8tC,QAAQhyB,EAAOC,GACpB/b,KAAK6tC,kBAAoB,KAI3B,GAFA7tC,KAAKypC,QAEDzpC,KAAK8b,OAAS,GAAK9b,KAAK+b,QAAU,EACpC,OAGF,IAA6D,IAAzD/b,KAAK62B,cAAc,aAAc,CAACiP,YAAY,IAChD,OAMF,MAAMiL,EAAS/wC,KAAK6nB,QACpB,IAAKzlB,EAAI,EAAGA,EAAI2uC,EAAOlvC,QAAUkvC,EAAO3uC,GAAG0lB,GAAK,IAAK1lB,EACnD2uC,EAAO3uC,GAAGC,KAAKrC,KAAK+U,WAMtB,IAHA/U,KAAKgxC,gBAGE5uC,EAAI2uC,EAAOlvC,SAAUO,EAC1B2uC,EAAO3uC,GAAGC,KAAKrC,KAAK+U,WAGtB/U,KAAK62B,cAAc,YACrB,CAKAptB,sBAAAA,CAAuBF,GACrB,MAAMC,EAAWxJ,KAAKgtC,gBAChBjd,EAAS,GACf,IAAI3tB,EAAGsH,EAEP,IAAKtH,EAAI,EAAGsH,EAAOF,EAAS3H,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAMkI,EAAOd,EAASpH,GACjBmH,IAAiBe,EAAK+kC,SACzBtf,EAAO5sB,KAAKmH,EAEhB,CAEA,OAAOylB,CACT,CAMA9N,4BAAAA,GACE,OAAOjiB,KAAKyJ,wBAAuB,EACrC,CAOAunC,aAAAA,GACE,IAAqE,IAAjEhxC,KAAK62B,cAAc,qBAAsB,CAACiP,YAAY,IACxD,OAGF,MAAMt8B,EAAWxJ,KAAKiiB,+BACtB,IAAK,IAAI7f,EAAIoH,EAAS3H,OAAS,EAAGO,GAAK,IAAKA,EAC1CpC,KAAKixC,aAAaznC,EAASpH,IAG7BpC,KAAK62B,cAAc,oBACrB,CAOAoa,YAAAA,CAAa3mC,GACX,MAAMwC,EAAM9M,KAAK8M,IACX6H,EAAOrK,EAAK2J,MACZi9B,GAAWv8B,EAAKF,SAChBK,EAxrBV,SAAwBxK,EAAMyK,GAC5B,MAAM,OAACtF,EAAA,OAAQE,GAAUrF,EACzB,OAAImF,GAAUE,EACL,CACL6E,KAAMw3B,GAAev8B,EAAQsF,EAAW,QACxCT,MAAO03B,GAAev8B,EAAQsF,EAAW,SACzCV,IAAK23B,GAAer8B,EAAQoF,EAAW,OACvCR,OAAQy3B,GAAer8B,EAAQoF,EAAW,WAGvCA,CACT,CA6qBiBo8B,CAAe7mC,EAAMtK,KAAK+U,WACjCsD,EAAO,CACX/N,OACAX,MAAOW,EAAKX,MACZm8B,YAAY,IAGwC,IAAlD9lC,KAAK62B,cAAc,oBAAqBxe,KAIxC64B,IACF1R,EAAAA,EAAAA,GAAS1yB,EAAK,CACZ0H,MAAoB,IAAdG,EAAKH,KAAiB,EAAIM,EAAKN,KAAOG,EAAKH,KACjDF,OAAsB,IAAfK,EAAKL,MAAkBtU,KAAK8b,MAAQhH,EAAKR,MAAQK,EAAKL,MAC7DD,KAAkB,IAAbM,EAAKN,IAAgB,EAAIS,EAAKT,IAAMM,EAAKN,IAC9CE,QAAwB,IAAhBI,EAAKJ,OAAmBvU,KAAK+b,OAASjH,EAAKP,OAASI,EAAKJ,SAIrEjK,EAAKY,WAAW7I,OAEZ6uC,IACFvR,EAAAA,EAAAA,GAAW7yB,GAGbuL,EAAKytB,YAAa,EAClB9lC,KAAK62B,cAAc,mBAAoBxe,GACzC,CAOAiK,aAAAA,CAAc/B,GACZ,OAAOgC,EAAAA,EAAAA,GAAehC,EAAOvgB,KAAK+U,UAAW/U,KAAK4vC,YACpD,CAEAwB,yBAAAA,CAA0Bz2B,EAAG3Q,EAAM/B,EAASma,GAC1C,MAAMxb,EAASod,EAAYC,MAAMja,GACjC,MAAsB,oBAAXpD,EACFA,EAAO5G,KAAM2a,EAAG1S,EAASma,GAG3B,EACT,CAEArS,cAAAA,CAAe9F,GACb,MAAMsE,EAAUvO,KAAK6P,KAAKC,SAAS7F,GAC7BT,EAAWxJ,KAAK4sC,UACtB,IAAItiC,EAAOd,EAAS2C,QAAOuC,GAAKA,GAAKA,EAAEgR,WAAanR,IAAS9L,MAoB7D,OAlBK6H,IACHA,EAAO,CACL3J,KAAM,KACNkP,KAAM,GACNtB,QAAS,KACTrD,WAAY,KACZgI,OAAQ,KACRpE,QAAS,KACTG,QAAS,KACTmgC,MAAO7gC,GAAWA,EAAQ6gC,OAAS,EACnCzlC,MAAOM,EACPyV,SAAUnR,EACVjC,QAAS,GACTsF,SAAS,GAEXpI,EAASrG,KAAKmH,IAGTA,CACT,CAEAiH,UAAAA,GACE,OAAOvR,KAAK0N,WAAa1N,KAAK0N,UAAW6H,EAAAA,EAAAA,GAAc,KAAM,CAAC/U,MAAOR,KAAMW,KAAM,UACnF,CAEA0wC,sBAAAA,GACE,OAAOrxC,KAAKiiB,+BAA+BpgB,MAC7C,CAEA4Z,gBAAAA,CAAiBxR,GACf,MAAMsE,EAAUvO,KAAK6P,KAAKC,SAAS7F,GACnC,IAAKsE,EACH,OAAO,EAGT,MAAMjE,EAAOtK,KAAK+P,eAAe9F,GAIjC,MAA8B,mBAAhBK,EAAK4I,QAAwB5I,EAAK4I,QAAU3E,EAAQ2E,MACpE,CAEAo+B,oBAAAA,CAAqBrnC,EAAcolC,GACpBrvC,KAAK+P,eAAe9F,GAC5BiJ,QAAUm8B,CACjB,CAEAx0B,oBAAAA,CAAqBlR,GACnB3J,KAAKktC,eAAevjC,IAAU3J,KAAKktC,eAAevjC,EACpD,CAEA8Q,iBAAAA,CAAkB9Q,GAChB,OAAQ3J,KAAKktC,eAAevjC,EAC9B,CAKA4nC,iBAAAA,CAAkBtnC,EAAcuL,EAAW65B,GACzC,MAAMrlC,EAAOqlC,EAAU,OAAS,OAC1B/kC,EAAOtK,KAAK+P,eAAe9F,GAC3BxJ,EAAQ6J,EAAKY,WAAWqL,wBAAmBjW,EAAW0J,IAExDiM,EAAAA,EAAAA,GAAQT,IACVlL,EAAKuF,KAAK2F,GAAWtC,QAAUm8B,EAC/BrvC,KAAKmG,WAELnG,KAAKsxC,qBAAqBrnC,EAAcolC,GAExC5uC,EAAM0F,OAAOmE,EAAM,CAAC+kC,YACpBrvC,KAAKmG,QAAQ2G,GAAQA,EAAI7C,eAAiBA,EAAeD,OAAO1J,IAEpE,CAEAkxC,IAAAA,CAAKvnC,EAAcuL,GACjBxV,KAAKuxC,kBAAkBtnC,EAAcuL,GAAW,EAClD,CAEAi8B,IAAAA,CAAKxnC,EAAcuL,GACjBxV,KAAKuxC,kBAAkBtnC,EAAcuL,GAAW,EAClD,CAKAu5B,mBAAAA,CAAoB9kC,GAClB,MAAMK,EAAOtK,KAAK4sC,UAAU3iC,GACxBK,GAAQA,EAAKY,YACfZ,EAAKY,WAAWiF,kBAEXnQ,KAAK4sC,UAAU3iC,EACxB,CAEAynC,KAAAA,GACE,IAAItvC,EAAGsH,EAIP,IAHA1J,KAAK2D,OACLI,EAASF,OAAO7D,MAEXoC,EAAI,EAAGsH,EAAO1J,KAAK6P,KAAKC,SAASjO,OAAQO,EAAIsH,IAAQtH,EACxDpC,KAAK+uC,oBAAoB3sC,EAE7B,CAEAuvC,OAAAA,GACE3xC,KAAK62B,cAAc,iBACnB,MAAM,OAACrN,EAAM,IAAE1c,GAAO9M,KAEtBA,KAAK0xC,QACL1xC,KAAK8G,OAAO0iC,aAERhgB,IACFxpB,KAAKswC,gBACL1C,EAAAA,EAAAA,IAAYpkB,EAAQ1c,GACpB9M,KAAKupC,SAAS9f,eAAe3c,GAC7B9M,KAAKwpB,OAAS,KACdxpB,KAAK8M,IAAM,aAGN6+B,GAAU3rC,KAAK4L,IAEtB5L,KAAK62B,cAAc,eACrB,CAEA+a,aAAAA,GACE,OAAO5xC,KAAKwpB,OAAOqoB,aAAajwC,UAClC,CAKA+rC,UAAAA,GACE3tC,KAAK8xC,iBACD9xC,KAAKiI,QAAQwlC,WACfztC,KAAK+xC,uBAEL/xC,KAAKmtC,UAAW,CAEpB,CAKA2E,cAAAA,GACE,MAAMjxC,EAAYb,KAAK8sC,WACjBvD,EAAWvpC,KAAKupC,SAEhByI,EAAOA,CAACrxC,EAAMgpB,KAClB4f,EAAS7f,iBAAiB1pB,KAAMW,EAAMgpB,GACtC9oB,EAAUF,GAAQgpB,CAAA,EAGdA,EAAWA,CAAChP,EAAGjM,EAAGC,KACtBgM,EAAEM,QAAUvM,EACZiM,EAAEO,QAAUvM,EACZ3O,KAAKgwC,cAAcr1B,EAAA,GAGrBoO,EAAAA,EAAAA,GAAK/oB,KAAKiI,QAAQmoC,QAASzvC,GAASqxC,EAAKrxC,EAAMgpB,IACjD,CAKAooB,oBAAAA,GACO/xC,KAAK+sC,uBACR/sC,KAAK+sC,qBAAuB,CAAC,GAE/B,MAAMlsC,EAAYb,KAAK+sC,qBACjBxD,EAAWvpC,KAAKupC,SAEhByI,EAAOA,CAACrxC,EAAMgpB,KAClB4f,EAAS7f,iBAAiB1pB,KAAMW,EAAMgpB,GACtC9oB,EAAUF,GAAQgpB,CAAA,EAEdsoB,EAAUA,CAACtxC,EAAMgpB,KACjB9oB,EAAUF,KACZ4oC,EAAS3f,oBAAoB5pB,KAAMW,EAAMgpB,UAClC9oB,EAAUF,KAIfgpB,EAAWA,CAAC7N,EAAOC,KACnB/b,KAAKwpB,QACPxpB,KAAKwsB,OAAO1Q,EAAOC,IAIvB,IAAIm2B,EACJ,MAAM/E,EAAWA,KACf8E,EAAQ,SAAU9E,GAElBntC,KAAKmtC,UAAW,EAChBntC,KAAKwsB,SAELwlB,EAAK,SAAUroB,GACfqoB,EAAK,SAAUE,EAAA,EAGjBA,EAAWA,KACTlyC,KAAKmtC,UAAW,EAEhB8E,EAAQ,SAAUtoB,GAGlB3pB,KAAK0xC,QACL1xC,KAAK8tC,QAAQ,EAAG,GAEhBkE,EAAK,SAAU7E,EAAA,EAGb5D,EAASxf,WAAW/pB,KAAKwpB,QAC3B2jB,IAEA+E,GAEJ,CAKA5B,YAAAA,IACEvnB,EAAAA,EAAAA,GAAK/oB,KAAK8sC,YAAY,CAACnjB,EAAUhpB,KAC/BX,KAAKupC,SAAS3f,oBAAoB5pB,KAAMW,EAAMgpB,EAAA,IAEhD3pB,KAAK8sC,WAAa,CAAC,GAEnB/jB,EAAAA,EAAAA,GAAK/oB,KAAK+sC,sBAAsB,CAACpjB,EAAUhpB,KACzCX,KAAKupC,SAAS3f,oBAAoB5pB,KAAMW,EAAMgpB,EAAA,IAEhD3pB,KAAK+sC,0BAAuBzsC,CAC9B,CAEA6xC,gBAAAA,CAAiBjwC,EAAO8H,EAAM8lB,GAC5B,MAAMsiB,EAAStiB,EAAU,MAAQ,SACjC,IAAIxlB,EAAMnI,EAAMC,EAAGsH,EAOnB,IALa,YAATM,IACFM,EAAOtK,KAAK+P,eAAe7N,EAAM,GAAG+H,cACpCK,EAAKY,WAAW,IAAMknC,EAAS,wBAG5BhwC,EAAI,EAAGsH,EAAOxH,EAAML,OAAQO,EAAIsH,IAAQtH,EAAG,CAC9CD,EAAOD,EAAME,GACb,MAAM8I,EAAa/I,GAAQnC,KAAK+P,eAAe5N,EAAK8H,cAAciB,WAC9DA,GACFA,EAAWknC,EAAS,cAAcjwC,EAAK8S,QAAS9S,EAAK8H,aAAc9H,EAAKwH,MAE5E,CACF,CAMA0oC,iBAAAA,GACE,OAAOryC,KAAKsC,SAAW,EACzB,CAMAgwC,iBAAAA,CAAkBC,GAChB,MAAMC,EAAaxyC,KAAKsC,SAAW,GAC7B4D,EAASqsC,EAAex4B,KAAI04B,IAA2B,IAA1B,aAACxoC,EAAY,MAAEN,GAAM8oC,EACtD,MAAMnoC,EAAOtK,KAAK+P,eAAe9F,GACjC,IAAKK,EACH,MAAM,IAAI62B,MAAM,6BAA+Bl3B,GAGjD,MAAO,CACLA,eACAgL,QAAS3K,EAAKuF,KAAKlG,GACnBA,QACD,MAEc+oC,EAAAA,EAAAA,IAAexsC,EAAQssC,KAGtCxyC,KAAKsC,QAAU4D,EAEflG,KAAK6sC,WAAa,KAClB7sC,KAAKiwC,mBAAmB/pC,EAAQssC,GAEpC,CAWA3b,aAAAA,CAAc4O,EAAMptB,EAAMlM,GACxB,OAAOnM,KAAKitC,SAASzH,OAAOxlC,KAAMylC,EAAMptB,EAAMlM,EAChD,CAOAgC,eAAAA,CAAgBwkC,GACd,OAA6E,IAAtE3yC,KAAKitC,SAASlZ,OAAO5nB,QAAO2+B,GAAKA,EAAEjF,OAAOj6B,KAAO+mC,IAAU9wC,MACpE,CAKAouC,kBAAAA,CAAmB/pC,EAAQssC,EAAYI,GACrC,MAAMC,EAAe7yC,KAAKiI,QAAQ6qC,MAC5BpiB,EAAOA,CAAC3T,EAAG5I,IAAM4I,EAAE5Q,QAAOuC,IAAMyF,EAAEuyB,MAAK/3B,GAAKD,EAAEzE,eAAiB0E,EAAE1E,cAAgByE,EAAE/E,QAAUgF,EAAEhF,UAC/FopC,EAAcriB,EAAK8hB,EAAYtsC,GAC/B8sC,EAAYJ,EAAS1sC,EAASwqB,EAAKxqB,EAAQssC,GAE7CO,EAAYlxC,QACd7B,KAAKmyC,iBAAiBY,EAAaF,EAAa7oC,MAAM,GAGpDgpC,EAAUnxC,QAAUgxC,EAAa7oC,MACnChK,KAAKmyC,iBAAiBa,EAAWH,EAAa7oC,MAAM,EAExD,CAKAgmC,aAAAA,CAAcr1B,EAAGi4B,GACf,MAAMv6B,EAAO,CACXpV,MAAO0X,EACPi4B,SACA9M,YAAY,EACZmN,YAAajzC,KAAKsiB,cAAc3H,IAE5Bu4B,EAAerN,IAAYA,EAAO59B,QAAQmoC,QAAUpwC,KAAKiI,QAAQmoC,QAAQhrB,SAASzK,EAAE4S,OAAO5sB,MAEjG,IAA6D,IAAzDX,KAAK62B,cAAc,cAAexe,EAAM66B,GAC1C,OAGF,MAAM3rB,EAAUvnB,KAAKmzC,aAAax4B,EAAGi4B,EAAQv6B,EAAK46B,aASlD,OAPA56B,EAAKytB,YAAa,EAClB9lC,KAAK62B,cAAc,aAAcxe,EAAM66B,IAEnC3rB,GAAWlP,EAAKkP,UAClBvnB,KAAKkuC,SAGAluC,IACT,CAUAmzC,YAAAA,CAAax4B,EAAGi4B,EAAQK,GACtB,MAAO3wC,QAASkwC,EAAa,GAAE,QAAEvqC,GAAWjI,KAetCoiB,EAAmBwwB,EACnB1sC,EAASlG,KAAKozC,mBAAmBz4B,EAAG63B,EAAYS,EAAa7wB,GAC7DixB,GAAUC,EAAAA,EAAAA,IAAc34B,GACxB44B,EAxnCV,SAA4B54B,EAAG44B,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAXt4B,EAAEha,KAGlB0yC,EACKE,EAEF54B,EALE,IAMX,CAgnCsB64B,CAAmB74B,EAAG3a,KAAK6sC,WAAYoG,EAAaI,GAElEJ,IAGFjzC,KAAK6sC,WAAa,MAGlBhY,EAAAA,EAAAA,GAAa5sB,EAAQwrC,QAAS,CAAC94B,EAAGzU,EAAQlG,MAAOA,MAE7CqzC,IACFxe,EAAAA,EAAAA,GAAa5sB,EAAQyS,QAAS,CAACC,EAAGzU,EAAQlG,MAAOA,OAIrD,MAAMunB,IAAWmrB,EAAAA,EAAAA,IAAexsC,EAAQssC,GAQxC,OAPIjrB,GAAWqrB,KACb5yC,KAAKsC,QAAU4D,EACflG,KAAKiwC,mBAAmB/pC,EAAQssC,EAAYI,IAG9C5yC,KAAK6sC,WAAa0G,EAEXhsB,CACT,CAUA6rB,kBAAAA,CAAmBz4B,EAAG63B,EAAYS,EAAa7wB,GAC7C,GAAe,aAAXzH,EAAEha,KACJ,MAAO,GAGT,IAAKsyC,EAEH,OAAOT,EAGT,MAAMK,EAAe7yC,KAAKiI,QAAQ6qC,MAClC,OAAO9yC,KAAKoxC,0BAA0Bz2B,EAAGk4B,EAAa7oC,KAAM6oC,EAAczwB,EAC5E,EAIF,SAAS+pB,KACP,OAAOpjB,EAAAA,EAAAA,GAAKmjB,GAAMP,WAAYnrC,GAAUA,EAAMysC,SAASlH,cACzD,CEzuCA,SAAS2N,GAAkBn1B,EAAiBxD,EAAqBC,EAAqB24B,GACpF,MAAMC,GARiB9qC,EAQGyV,EAAItW,QAAQ4rC,cAP/BC,EAAAA,EAAAA,IAAkBhrC,EAAO,CAAC,aAAc,WAAY,aAAc,cAD3E,IAAyBA,EASvB,MAAMirC,GAAiB/4B,EAAcD,GAAe,EAC9Ci5B,EAAa5yC,KAAKC,IAAI0yC,EAAeJ,EAAa54B,EAAc,GAShEk5B,EAAqBC,IACzB,MAAMC,GAAiBn5B,EAAc5Z,KAAKC,IAAI0yC,EAAeG,IAAQP,EAAa,EAClF,OAAO9b,EAAAA,EAAAA,GAAYqc,EAAK,EAAG9yC,KAAKC,IAAI0yC,EAAeI,GAAA,EAGrD,MAAO,CACLC,WAAYH,EAAkBL,EAAEQ,YAChCC,SAAUJ,EAAkBL,EAAES,UAC9BC,YAAYzc,EAAAA,EAAAA,GAAY+b,EAAEU,WAAY,EAAGN,GACzCO,UAAU1c,EAAAA,EAAAA,GAAY+b,EAAEW,SAAU,EAAGP,GAEzC,CAKA,SAASQ,GAAW5lC,EAAW6lC,EAAe/lC,EAAWC,GACvD,MAAO,CACLD,EAAGA,EAAIE,EAAIxN,KAAKob,IAAIi4B,GACpB9lC,EAAGA,EAAIC,EAAIxN,KAAKsb,IAAI+3B,GAExB,CAiBA,SAASC,GACP5nC,EACAmI,EACA8J,EACA1F,EACAhQ,EACAsrC,GAEA,MAAM,EAACjmC,EAAA,EAAGC,EAAG0N,WAAY/a,EAAK,YAAEszC,EAAa75B,YAAa85B,GAAU5/B,EAE9D+F,EAAc5Z,KAAKqC,IAAIwR,EAAQ+F,YAAc3B,EAAU0F,EAAS61B,EAAa,GAC7E75B,EAAc85B,EAAS,EAAIA,EAASx7B,EAAU0F,EAAS61B,EAAc,EAE3E,IAAIE,EAAgB,EACpB,MAAMC,EAAQ1rC,EAAM/H,EAEpB,GAAI+X,EAAS,CAIX,MAEM27B,IAFuBH,EAAS,EAAIA,EAASx7B,EAAU,IAChC2B,EAAc,EAAIA,EAAc3B,EAAU,IACI,EAE3Ey7B,GAAiBC,GAD4B,IAAvBC,EAA2BD,EAASC,GAAuBA,EAAqB37B,GAAW07B,IACvE,EAG5C,MACME,GAAeF,EADR3zC,KAAKqC,IAAI,KAAOsxC,EAAQ/5B,EAAc+D,EAASzB,EAAAA,GAAMtC,GAC7B,EAC/BqB,EAAa/a,EAAQ2zC,EAAcH,EACnCx4B,EAAWjT,EAAM4rC,EAAcH,GAC/B,WAACV,EAAA,SAAYC,EAAA,WAAUC,EAAU,SAAEC,GAAYb,GAAkBz+B,EAAS8F,EAAaC,EAAasB,EAAWD,GAE/G64B,EAA2Bl6B,EAAco5B,EACzCe,EAAyBn6B,EAAcq5B,EACvCe,EAA0B/4B,EAAa+3B,EAAac,EACpDG,EAAwB/4B,EAAW+3B,EAAWc,EAE9CG,EAA2Bv6B,EAAcu5B,EACzCiB,EAAyBx6B,EAAcw5B,EACvCiB,EAA0Bn5B,EAAai4B,EAAagB,EACpDG,EAAwBn5B,EAAWi4B,EAAWgB,EAIpD,GAFAzoC,EAAIkyB,YAEA2V,EAAU,CAEZ,MAAMe,GAAyBN,EAA0BC,GAAyB,EAKlF,GAJAvoC,EAAIyR,IAAI7P,EAAGC,EAAGqM,EAAao6B,EAAyBM,GACpD5oC,EAAIyR,IAAI7P,EAAGC,EAAGqM,EAAa06B,EAAuBL,GAG9ChB,EAAW,EAAG,CAChB,MAAMsB,EAAUnB,GAAWW,EAAwBE,EAAuB3mC,EAAGC,GAC7E7B,EAAIyR,IAAIo3B,EAAQjnC,EAAGinC,EAAQhnC,EAAG0lC,EAAUgB,EAAuB/4B,EAAWc,EAAAA,GAI5E,MAAMw4B,EAAKpB,GAAWe,EAAwBj5B,EAAU5N,EAAGC,GAI3D,GAHA7B,EAAIoyB,OAAO0W,EAAGlnC,EAAGknC,EAAGjnC,GAGhB4lC,EAAW,EAAG,CAChB,MAAMoB,EAAUnB,GAAWe,EAAwBE,EAAuB/mC,EAAGC,GAC7E7B,EAAIyR,IAAIo3B,EAAQjnC,EAAGinC,EAAQhnC,EAAG4lC,EAAUj4B,EAAWc,EAAAA,EAASq4B,EAAwBr0C,KAAKkc,IAI3F,MAAMu4B,GAA0Bv5B,EAAYi4B,EAAWx5B,GAAiBsB,EAAci4B,EAAav5B,IAAiB,EAKpH,GAJAjO,EAAIyR,IAAI7P,EAAGC,EAAGoM,EAAauB,EAAYi4B,EAAWx5B,EAAc86B,GAAuB,GACvF/oC,EAAIyR,IAAI7P,EAAGC,EAAGoM,EAAa86B,EAAuBx5B,EAAci4B,EAAav5B,GAAc,GAGvFu5B,EAAa,EAAG,CAClB,MAAMqB,EAAUnB,GAAWc,EAA0BE,EAAyB9mC,EAAGC,GACjF7B,EAAIyR,IAAIo3B,EAAQjnC,EAAGinC,EAAQhnC,EAAG2lC,EAAYkB,EAA0Bp0C,KAAKkc,GAAIjB,EAAae,EAAAA,GAI5F,MAAM04B,EAAKtB,GAAWU,EAA0B74B,EAAY3N,EAAGC,GAI/D,GAHA7B,EAAIoyB,OAAO4W,EAAGpnC,EAAGonC,EAAGnnC,GAGhBylC,EAAa,EAAG,CAClB,MAAMuB,EAAUnB,GAAWU,EAA0BE,EAAyB1mC,EAAGC,GACjF7B,EAAIyR,IAAIo3B,EAAQjnC,EAAGinC,EAAQhnC,EAAGylC,EAAY/3B,EAAae,EAAAA,EAASg4B,QAE7D,CACLtoC,EAAImyB,OAAOvwB,EAAGC,GAEd,MAAMonC,EAAc30C,KAAKob,IAAI44B,GAA2Bp6B,EAActM,EAChEsnC,EAAc50C,KAAKsb,IAAI04B,GAA2Bp6B,EAAcrM,EACtE7B,EAAIoyB,OAAO6W,EAAaC,GAExB,MAAMC,EAAY70C,KAAKob,IAAI64B,GAAyBr6B,EAActM,EAC5DwnC,EAAY90C,KAAKsb,IAAI24B,GAAyBr6B,EAAcrM,EAClE7B,EAAIoyB,OAAO+W,EAAWC,GAGxBppC,EAAIqpC,WACN,CAyBA,SAAS9W,GACPvyB,EACAmI,EACA8J,EACA1F,EACAs7B,GAEA,MAAM,YAACyB,EAAA,WAAa/5B,EAAA,cAAYlD,EAAa,QAAElR,GAAWgN,GACpD,YAACuF,EAAA,gBAAa67B,EAAA,WAAiB/Z,EAAU,iBAAEE,GAAoBv0B,EAC/DquC,EAAgC,UAAxBruC,EAAQ4W,YAEtB,IAAKrE,EACH,OAGF1N,EAAIgyB,YAAYxC,GAAc,IAC9BxvB,EAAIiyB,eAAiBvC,EAEjB8Z,GACFxpC,EAAIyN,UAA0B,EAAdC,EAChB1N,EAAIypC,SAAWF,GAAmB,UAElCvpC,EAAIyN,UAAYC,EAChB1N,EAAIypC,SAAWF,GAAmB,SAGpC,IAAI/5B,EAAWrH,EAAQqH,SACvB,GAAI85B,EAAa,CACf1B,GAAQ5nC,EAAKmI,EAAS8J,EAAQ1F,EAASiD,EAAUq4B,GACjD,IAAK,IAAIvyC,EAAI,EAAGA,EAAIg0C,IAAeh0C,EACjC0K,EAAIqyB,SAED1gB,MAAMtF,KACTmD,EAAWD,GAAclD,EAAgBqC,EAAAA,GAAOA,EAAAA,IAIhD86B,GA7ON,SAAiBxpC,EAA+BmI,EAAqBqH,GACnE,MAAM,WAACD,EAAA,YAAYu4B,EAAA,EAAalmC,EAAA,EAAGC,EAAA,YAAGqM,EAAA,YAAaD,GAAe9F,EAClE,IAAIuhC,EAAc5B,EAAc55B,EAIhClO,EAAIkyB,YACJlyB,EAAIyR,IAAI7P,EAAGC,EAAGqM,EAAaqB,EAAam6B,EAAal6B,EAAWk6B,GAC5Dz7B,EAAc65B,GAChB4B,EAAc5B,EAAc75B,EAC5BjO,EAAIyR,IAAI7P,EAAGC,EAAGoM,EAAauB,EAAWk6B,EAAan6B,EAAam6B,GAAa,IAE7E1pC,EAAIyR,IAAI7P,EAAGC,EAAGimC,EAAat4B,EAAWc,EAAAA,EAASf,EAAae,EAAAA,GAE9DtQ,EAAIqpC,YACJrpC,EAAI6H,MACN,CA8NI8hC,CAAQ3pC,EAAKmI,EAASqH,GAGnB85B,IACH1B,GAAQ5nC,EAAKmI,EAAS8J,EAAQ1F,EAASiD,EAAUq4B,GACjD7nC,EAAIqyB,SAER,CAUe,MAAMuX,WAAmBhoB,GAEtC9hB,UAAY,MAEZA,gBAAkB,CAChBiS,YAAa,SACbxE,YAAa,OACbiiB,WAAY,GACZE,iBAAkB,EAClB6Z,qBAAiB/1C,EACjBuzC,aAAc,EACdr5B,YAAa,EACbuE,OAAQ,EACR1F,QAAS,EACTyD,WAAOxc,EACPq0C,UAAU,GAGZ/nC,qBAAuB,CACrBuN,gBAAiB,mBAGnBvN,mBAAqB,CACnB0M,aAAa,EACbE,WAAaD,GAAkB,eAATA,GAGxBJ,cACAmD,SACA85B,YACAr7B,YACAC,YACA45B,YACAv4B,WAEAtc,WAAAA,CAAY+E,GACVgW,QAEA9a,KAAKiI,aAAU3H,EACfN,KAAKmZ,mBAAgB7Y,EACrBN,KAAKqc,gBAAa/b,EAClBN,KAAKsc,cAAWhc,EAChBN,KAAK+a,iBAAcza,EACnBN,KAAKgb,iBAAc1a,EACnBN,KAAK40C,YAAc,EACnB50C,KAAKo2C,YAAc,EAEftxC,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEA0d,OAAAA,CAAQm0B,EAAgBC,EAAgBx0B,GACtC,MAAM7B,EAAQvgB,KAAK0jB,SAAS,CAAC,IAAK,KAAMtB,IAClC,MAACtF,EAAK,SAAE0G,IAAYG,EAAAA,EAAAA,GAAkBpD,EAAO,CAAC7R,EAAGioC,EAAQhoC,EAAGioC,KAC5D,WAACv6B,EAAA,SAAYC,EAAA,YAAUvB,EAAW,YAAEC,EAAW,cAAE7B,GAAiBnZ,KAAK0jB,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCtB,GACGy0B,GAAW72C,KAAKiI,QAAQoR,QAAUrZ,KAAKiI,QAAQuS,aAAe,EAE9Ds8B,GADiB/nC,EAAAA,EAAAA,GAAeoK,EAAemD,EAAWD,IACxBb,EAAAA,IAAOwB,EAAAA,EAAAA,GAAcF,EAAOT,EAAYC,GAC1Ey6B,GAAeC,EAAAA,EAAAA,IAAWxzB,EAAUzI,EAAc87B,EAAS77B,EAAc67B,GAE/E,OAAQC,GAAiBC,CAC3B,CAEAxzB,cAAAA,CAAenB,GACb,MAAM,EAAC1T,EAAC,EAAEC,EAAC,WAAE0N,EAAA,SAAYC,EAAA,YAAUvB,EAAA,YAAaC,GAAehb,KAAK0jB,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,eACCtB,IACG,OAACrD,EAAA,QAAQ1F,GAAWrZ,KAAKiI,QACzBgvC,GAAa56B,EAAaC,GAAY,EACtC46B,GAAcn8B,EAAcC,EAAc3B,EAAU0F,GAAU,EACpE,MAAO,CACLrQ,EAAGA,EAAItN,KAAKob,IAAIy6B,GAAaC,EAC7BvoC,EAAGA,EAAIvN,KAAKsb,IAAIu6B,GAAaC,EAEjC,CAEAvoB,eAAAA,CAAgBvM,GACd,OAAOpiB,KAAKujB,eAAenB,EAC7B,CAEA/f,IAAAA,CAAKyK,GACH,MAAM,QAAC7E,EAAO,cAAEkR,GAAiBnZ,KAC3B+e,GAAU9W,EAAQ8W,QAAU,GAAK,EACjC1F,GAAWpR,EAAQoR,SAAW,GAAK,EACnCs7B,EAAW1sC,EAAQ0sC,SAIzB,GAHA30C,KAAK40C,YAAuC,UAAxB3sC,EAAQ4W,YAA2B,IAAO,EAC9D7e,KAAKo2C,YAAcj9B,EAAgBqC,EAAAA,EAAMpa,KAAKqE,MAAM0T,EAAgBqC,EAAAA,GAAO,EAErD,IAAlBrC,GAAuBnZ,KAAK+a,YAAc,GAAK/a,KAAKgb,YAAc,EACpE,OAGFlO,EAAIuxB,OAEJ,MAAM4Y,GAAaj3C,KAAKqc,WAAarc,KAAKsc,UAAY,EACtDxP,EAAIqqC,UAAU/1C,KAAKob,IAAIy6B,GAAal4B,EAAQ3d,KAAKsb,IAAIu6B,GAAal4B,GAClE,MACMq4B,EAAer4B,GADT,EAAI3d,KAAKsb,IAAItb,KAAKC,IAAIic,EAAAA,EAAInE,GAAiB,KAGvDrM,EAAIoN,UAAYjS,EAAQkS,gBACxBrN,EAAIsN,YAAcnS,EAAQoS,YA9L9B,SACEvN,EACAmI,EACA8J,EACA1F,EACAs7B,GAEA,MAAM,YAACyB,EAAW,WAAE/5B,EAAA,cAAYlD,GAAiBlE,EACjD,IAAIqH,EAAWrH,EAAQqH,SACvB,GAAI85B,EAAa,CACf1B,GAAQ5nC,EAAKmI,EAAS8J,EAAQ1F,EAASiD,EAAUq4B,GACjD,IAAK,IAAIvyC,EAAI,EAAGA,EAAIg0C,IAAeh0C,EACjC0K,EAAIoB,OAEDuQ,MAAMtF,KACTmD,EAAWD,GAAclD,EAAgBqC,EAAAA,GAAOA,EAAAA,IAGpDk5B,GAAQ5nC,EAAKmI,EAAS8J,EAAQ1F,EAASiD,EAAUq4B,GACjD7nC,EAAIoB,MAEN,CA2KImpC,CAAQvqC,EAAK9M,KAAMo3C,EAAc/9B,EAASs7B,GAC1CtV,GAAWvyB,EAAK9M,KAAMo3C,EAAc/9B,EAASs7B,GAE7C7nC,EAAIyxB,SACN,ECjXF,SAAS+Y,GAASxqC,EAAK7E,GAA0B,IAAjB+R,EAAApY,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAQqG,EACtC6E,EAAIyqC,SAAUxoC,EAAAA,EAAAA,GAAeiL,EAAMw9B,eAAgBvvC,EAAQuvC,gBAC3D1qC,EAAIgyB,aAAY/vB,EAAAA,EAAAA,GAAeiL,EAAMsiB,WAAYr0B,EAAQq0B,aACzDxvB,EAAIiyB,gBAAiBhwB,EAAAA,EAAAA,GAAeiL,EAAMwiB,iBAAkBv0B,EAAQu0B,kBACpE1vB,EAAIypC,UAAWxnC,EAAAA,EAAAA,GAAeiL,EAAMq8B,gBAAiBpuC,EAAQouC,iBAC7DvpC,EAAIyN,WAAYxL,EAAAA,EAAAA,GAAeiL,EAAMQ,YAAavS,EAAQuS,aAC1D1N,EAAIsN,aAAcrL,EAAAA,EAAAA,GAAeiL,EAAMK,YAAapS,EAAQoS,YAC9D,CAEA,SAAS6kB,GAAOpyB,EAAK2qC,EAAU1yC,GAC7B+H,EAAIoyB,OAAOn6B,EAAO2J,EAAG3J,EAAO4J,EAC9B,CAiBA,SAAS+oC,GAASj4B,EAAQO,GAAsB,IAAbiF,EAASrjB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAC1C,MAAM8P,EAAQ+N,EAAO5d,QACdP,MAAOq2C,EAAc,EAAGtuC,IAAKuuC,EAAYlmC,EAAQ,GAAKuT,GACtD3jB,MAAOu2C,EAAcxuC,IAAKyuC,GAAc93B,EACzC1e,EAAQF,KAAKqC,IAAIk0C,EAAaE,GAC9BxuC,EAAMjI,KAAKC,IAAIu2C,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAElH,MAAO,CACLpmC,QACApQ,QACAsE,KAAMoa,EAAQpa,KACd8D,KAAML,EAAM/H,IAAUy2C,EAAUrmC,EAAQrI,EAAM/H,EAAQ+H,EAAM/H,EAEhE,CAiBA,SAAS02C,GAAYlrC,EAAK0S,EAAMQ,EAASiF,GACvC,MAAM,OAACxF,EAAA,QAAQxX,GAAWuX,GACpB,MAAC9N,EAAA,MAAOpQ,EAAA,KAAOsE,EAAA,KAAM8D,GAAQguC,GAASj4B,EAAQO,EAASiF,GACvDgzB,EA9CR,SAAuBhwC,GACrB,OAAIA,EAAQiwC,QACHC,EAAAA,GAGLlwC,EAAQmwC,SAA8C,aAAnCnwC,EAAQowC,uBACtBC,EAAAA,GAGFpZ,EACT,CAoCqBqZ,CAActwC,GAEjC,IACI7F,EAAGme,EAAO1O,GADV,KAACkG,GAAO,EAAI,QAAE3O,GAAW6b,GAAU,CAAC,EAGxC,IAAK7iB,EAAI,EAAGA,GAAKsH,IAAQtH,EACvBme,EAAQd,GAAQne,GAAS8H,EAAUM,EAAOtH,EAAIA,IAAMsP,GAEhD6O,EAAMC,OAGCzI,GACTjL,EAAImyB,OAAO1e,EAAM7R,EAAG6R,EAAM5R,GAC1BoJ,GAAO,GAEPkgC,EAAWnrC,EAAK+E,EAAM0O,EAAOnX,EAASnB,EAAQiwC,SAGhDrmC,EAAO0O,GAQT,OALI3a,IACF2a,EAAQd,GAAQne,GAAS8H,EAAUM,EAAO,IAAMgI,GAChDumC,EAAWnrC,EAAK+E,EAAM0O,EAAOnX,EAASnB,EAAQiwC,YAGvCtyC,CACX,CAiBA,SAAS4yC,GAAgB1rC,EAAK0S,EAAMQ,EAASiF,GAC3C,MAAMxF,EAASD,EAAKC,QACd,MAAC/N,EAAK,MAAEpQ,EAAK,KAAEoI,GAAQguC,GAASj4B,EAAQO,EAASiF,IACjD,KAAClN,GAAO,EAAI,QAAE3O,GAAW6b,GAAU,CAAC,EAC1C,IAEI7iB,EAAGme,EAAOk4B,EAAOl7B,EAAMJ,EAAMu7B,EAF7BC,EAAO,EACPC,EAAS,EAGb,MAAMC,EAAclvC,IAAWrI,GAAS8H,EAAUM,EAAOC,EAAQA,IAAU+H,EACrEonC,EAAQA,KACRv7B,IAASJ,IAEXrQ,EAAIoyB,OAAOyZ,EAAMx7B,GACjBrQ,EAAIoyB,OAAOyZ,EAAMp7B,GAGjBzQ,EAAIoyB,OAAOyZ,EAAMD,KASrB,IALI3gC,IACFwI,EAAQd,EAAOo5B,EAAW,IAC1B/rC,EAAImyB,OAAO1e,EAAM7R,EAAG6R,EAAM5R,IAGvBvM,EAAI,EAAGA,GAAKsH,IAAQtH,EAAG,CAG1B,GAFAme,EAAQd,EAAOo5B,EAAWz2C,IAEtBme,EAAMC,KAER,SAGF,MAAM9R,EAAI6R,EAAM7R,EACVC,EAAI4R,EAAM5R,EACVoqC,EAAa,EAAJrqC,EAEXqqC,IAAWN,GAET9pC,EAAI4O,EACNA,EAAO5O,EACEA,EAAIwO,IACbA,EAAOxO,GAGTgqC,GAAQC,EAASD,EAAOjqC,KAAOkqC,IAE/BE,IAGAhsC,EAAIoyB,OAAOxwB,EAAGC,GAEd8pC,EAAQM,EACRH,EAAS,EACTr7B,EAAOJ,EAAOxO,GAGhB+pC,EAAQ/pC,CACV,CACAmqC,GACF,CAOA,SAASE,GAAkBx5B,GACzB,MAAMrW,EAAOqW,EAAKvX,QACZq0B,EAAanzB,EAAKmzB,YAAcnzB,EAAKmzB,WAAWz6B,OAEtD,OADqB2d,EAAKO,aAAeP,EAAK7Z,QAAUwD,EAAKivC,SAA2C,aAAhCjvC,EAAKkvC,yBAA0ClvC,EAAK+uC,UAAY5b,EACnHkc,GAAkBR,EACzC,CA2CA,MAAMiB,GAA8B,oBAAXC,OAEzB,SAAS72C,GAAKyK,EAAK0S,EAAMle,EAAOoQ,GAC1BunC,KAAcz5B,EAAKvX,QAAQ+X,QA7BjC,SAA6BlT,EAAK0S,EAAMle,EAAOoQ,GAC7C,IAAIynC,EAAO35B,EAAK45B,MACXD,IACHA,EAAO35B,EAAK45B,MAAQ,IAAIF,OACpB15B,EAAK25B,KAAKA,EAAM73C,EAAOoQ,IACzBynC,EAAKhD,aAGTmB,GAASxqC,EAAK0S,EAAKvX,SACnB6E,EAAIqyB,OAAOga,EACb,CAoBIE,CAAoBvsC,EAAK0S,EAAMle,EAAOoQ,GAlB1C,SAA0B5E,EAAK0S,EAAMle,EAAOoQ,GAC1C,MAAM,SAAC4nC,EAAA,QAAUrxC,GAAWuX,EACtB+5B,EAAgBP,GAAkBx5B,GAExC,IAAK,MAAMQ,KAAWs5B,EACpBhC,GAASxqC,EAAK7E,EAAS+X,EAAQhG,OAC/BlN,EAAIkyB,YACAua,EAAczsC,EAAK0S,EAAMQ,EAAS,CAAC1e,QAAO+H,IAAK/H,EAAQoQ,EAAQ,KACjE5E,EAAIqpC,YAENrpC,EAAIqyB,QAER,CAQIqa,CAAiB1sC,EAAK0S,EAAMle,EAAOoQ,EAEvC,CAEe,MAAM+nC,WAAoB/qB,GAEvC9hB,UAAY,OAKZA,gBAAkB,CAChB4qC,eAAgB,OAChBlb,WAAY,GACZE,iBAAkB,EAClB6Z,gBAAiB,QACjB77B,YAAa,EACbk/B,iBAAiB,EACjBrB,uBAAwB,UACxBnqC,MAAM,EACNmR,UAAU,EACV64B,SAAS,EACTE,QAAS,GAMXxrC,qBAAuB,CACrBuN,gBAAiB,kBACjBE,YAAa,eAIfzN,mBAAqB,CACnB0M,aAAa,EACbE,WAAaD,GAAkB,eAATA,GAAkC,SAATA,GAIjDxZ,WAAAA,CAAY+E,GACVgW,QAEA9a,KAAKigB,UAAW,EAChBjgB,KAAKiI,aAAU3H,EACfN,KAAK+G,YAASzG,EACdN,KAAK2F,WAAQrF,EACbN,KAAK25C,eAAYr5C,EACjBN,KAAKo5C,WAAQ94C,EACbN,KAAK45C,aAAUt5C,EACfN,KAAK65C,eAAYv5C,EACjBN,KAAK+f,YAAa,EAClB/f,KAAK85C,gBAAiB,EACtB95C,KAAK8f,mBAAgBxf,EAEjBwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEAoc,mBAAAA,CAAoBnM,EAAW3F,GAC7B,MAAMnH,EAAUjI,KAAKiI,QACrB,IAAKA,EAAQmwC,SAA8C,aAAnCnwC,EAAQowC,0BAA2CpwC,EAAQiwC,UAAYl4C,KAAK85C,eAAgB,CAClH,MAAMl0C,EAAOqC,EAAQoX,SAAWrf,KAAK2F,MAAQ3F,KAAK25C,WAClDI,EAAAA,EAAAA,IAA2B/5C,KAAK45C,QAAS3xC,EAAS8M,EAAWnP,EAAMwJ,GACnEpP,KAAK85C,gBAAiB,EAE1B,CAEA,UAAIr6B,CAAOA,GACTzf,KAAK45C,QAAUn6B,SACRzf,KAAK65C,iBACL75C,KAAKo5C,MACZp5C,KAAK85C,gBAAiB,CACxB,CAEA,UAAIr6B,GACF,OAAOzf,KAAK45C,OACd,CAEA,YAAIN,GACF,OAAOt5C,KAAK65C,YAAc75C,KAAK65C,WAAYG,EAAAA,EAAAA,IAAiBh6C,KAAMA,KAAKiI,QAAQ+X,SACjF,CAMAkQ,KAAAA,GACE,MAAMopB,EAAWt5C,KAAKs5C,SAChB75B,EAASzf,KAAKyf,OACpB,OAAO65B,EAASz3C,QAAU4d,EAAO65B,EAAS,GAAGh4C,MAC/C,CAMA6uB,IAAAA,GACE,MAAMmpB,EAAWt5C,KAAKs5C,SAChB75B,EAASzf,KAAKyf,OACd/N,EAAQ4nC,EAASz3C,OACvB,OAAO6P,GAAS+N,EAAO65B,EAAS5nC,EAAQ,GAAGrI,IAC7C,CASA4wC,WAAAA,CAAY15B,EAAOihB,GACjB,MAAMv5B,EAAUjI,KAAKiI,QACfa,EAAQyX,EAAMihB,GACd/hB,EAASzf,KAAKyf,OACd65B,GAAWY,EAAAA,EAAAA,IAAel6C,KAAM,CAACwhC,WAAUlgC,MAAOwH,EAAOO,IAAKP,IAEpE,IAAKwwC,EAASz3C,OACZ,OAGF,MAAMkuB,EAAS,GACToqB,EAvKV,SAAiClyC,GAC/B,OAAIA,EAAQiwC,QACHkC,EAAAA,GAGLnyC,EAAQmwC,SAA8C,aAAnCnwC,EAAQowC,uBACtBgC,EAAAA,GAGFC,EAAAA,EACT,CA6JyBC,CAAwBtyC,GAC7C,IAAI7F,EAAGsH,EACP,IAAKtH,EAAI,EAAGsH,EAAO4vC,EAASz3C,OAAQO,EAAIsH,IAAQtH,EAAG,CACjD,MAAM,MAACd,EAAA,IAAO+H,GAAOiwC,EAASl3C,GACxBw8B,EAAKnf,EAAOne,GACZu9B,EAAKpf,EAAOpW,GAClB,GAAIu1B,IAAOC,EAAI,CACb9O,EAAO5sB,KAAKy7B,GACZ,SAEF,MACM4b,EAAeL,EAAavb,EAAIC,EAD5Bz9B,KAAKsd,KAAK5V,EAAQ81B,EAAG4C,KAAc3C,EAAG2C,GAAY5C,EAAG4C,KAClBv5B,EAAQiwC,SACrDsC,EAAahZ,GAAYjhB,EAAMihB,GAC/BzR,EAAO5sB,KAAKq3C,EACd,CACA,OAAyB,IAAlBzqB,EAAOluB,OAAekuB,EAAO,GAAKA,CAC3C,CAgBAioB,WAAAA,CAAYlrC,EAAKkT,EAASiF,GAExB,OADsB+zB,GAAkBh5C,KACjCu5C,CAAczsC,EAAK9M,KAAMggB,EAASiF,EAC3C,CASAk0B,IAAAA,CAAKrsC,EAAKxL,EAAOoQ,GACf,MAAM4nC,EAAWt5C,KAAKs5C,SAChBC,EAAgBP,GAAkBh5C,MACxC,IAAI4F,EAAO5F,KAAK2F,MAEhBrE,EAAQA,GAAS,EACjBoQ,EAAQA,GAAU1R,KAAKyf,OAAO5d,OAASP,EAEvC,IAAK,MAAM0e,KAAWs5B,EACpB1zC,GAAQ2zC,EAAczsC,EAAK9M,KAAMggB,EAAS,CAAC1e,QAAO+H,IAAK/H,EAAQoQ,EAAQ,IAEzE,QAAS9L,CACX,CASAvD,IAAAA,CAAKyK,EAAKiI,EAAWzT,EAAOoQ,GAC1B,MAAMzJ,EAAUjI,KAAKiI,SAAW,CAAC,GAClBjI,KAAKyf,QAAU,IAEnB5d,QAAUoG,EAAQuS,cAC3B1N,EAAIuxB,OAEJh8B,GAAKyK,EAAK9M,KAAMsB,EAAOoQ,GAEvB5E,EAAIyxB,WAGFv+B,KAAKigB,WAEPjgB,KAAK85C,gBAAiB,EACtB95C,KAAKo5C,WAAQ94C,EAEjB,ECjbF,SAASm6C,GAAQ/4B,EAAkB8C,EAAahZ,EAAiB4W,GAC/D,MAAMna,EAAUyZ,EAAGzZ,SACZ,CAACuD,GAAO1C,GAAS4Y,EAAGgC,SAAS,CAAClY,GAAO4W,GAE5C,OAAQhhB,KAAKsd,IAAI8F,EAAM1b,GAASb,EAAQmR,OAASnR,EAAQyyC,SAC3D,CAIe,MAAMC,WAAqBjsB,GAExC9hB,UAAY,QAEZzB,OACAqV,KACA7c,KAKAiJ,gBAAkB,CAChB4N,YAAa,EACbkgC,UAAW,EACX57B,iBAAkB,EAClB87B,YAAa,EACb9gC,WAAY,SACZV,OAAQ,EACRF,SAAU,GAMZtM,qBAAuB,CACrBuN,gBAAiB,kBACjBE,YAAa,eAGfta,WAAAA,CAAY+E,GACVgW,QAEA9a,KAAKiI,aAAU3H,EACfN,KAAKmL,YAAS7K,EACdN,KAAKwgB,UAAOlgB,EACZN,KAAK2D,UAAOrD,EAERwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEA0d,OAAAA,CAAQq4B,EAAgBC,EAAgB14B,GACtC,MAAMna,EAAUjI,KAAKiI,SACf,EAACyG,EAAA,EAAGC,GAAK3O,KAAK0jB,SAAS,CAAC,IAAK,KAAMtB,GACzC,OAAShhB,KAAK+hB,IAAI03B,EAASnsC,EAAG,GAAKtN,KAAK+hB,IAAI23B,EAASnsC,EAAG,GAAMvN,KAAK+hB,IAAIlb,EAAQyyC,UAAYzyC,EAAQmR,OAAQ,EAC7G,CAEA2hC,QAAAA,CAASF,EAAgBz4B,GACvB,OAAOq4B,GAAQz6C,KAAM66C,EAAQ,IAAKz4B,EACpC,CAEA44B,QAAAA,CAASF,EAAgB14B,GACvB,OAAOq4B,GAAQz6C,KAAM86C,EAAQ,IAAK14B,EACpC,CAEAmB,cAAAA,CAAenB,GACb,MAAM,EAAC1T,EAAA,EAAGC,GAAK3O,KAAK0jB,SAAS,CAAC,IAAK,KAAMtB,GACzC,MAAO,CAAC1T,IAAGC,IACb,CAEA5F,IAAAA,CAAKd,GAEH,IAAImR,GADJnR,EAAUA,GAAWjI,KAAKiI,SAAW,CAAC,GACjBmR,QAAU,EAC/BA,EAAShY,KAAKqC,IAAI2V,EAAQA,GAAUnR,EAAQ2yC,aAAe,GAE3D,OAAgC,GAAxBxhC,GADYA,GAAUnR,EAAQuS,aAAe,GAEvD,CAEAnY,IAAAA,CAAKyK,EAA+BgI,GAClC,MAAM7M,EAAUjI,KAAKiI,QAEjBjI,KAAKwgB,MAAQvY,EAAQmR,OAAS,MAAQmJ,EAAAA,EAAAA,GAAeviB,KAAM8U,EAAM9U,KAAK+I,KAAKd,GAAW,KAI1F6E,EAAIsN,YAAcnS,EAAQoS,YAC1BvN,EAAIyN,UAAYtS,EAAQuS,YACxB1N,EAAIoN,UAAYjS,EAAQkS,iBACxB8gC,EAAAA,EAAAA,IAAUnuC,EAAK7E,EAASjI,KAAK0O,EAAG1O,KAAK2O,GACvC,CAEAgT,QAAAA,GACE,MAAM1Z,EAAUjI,KAAKiI,SAAW,CAAC,EAEjC,OAAOA,EAAQmR,OAASnR,EAAQyyC,SAClC,EC3FF,SAASQ,GAAaC,EAAK/4B,GACzB,MAAM,EAAC1T,EAAC,EAAEC,EAAC,KAAEysC,EAAA,MAAMt/B,EAAA,OAAOC,GAAmCo/B,EAAIz3B,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWtB,GAEjH,IAAI5N,EAAMF,EAAOD,EAAKE,EAAQ8mC,EAgB9B,OAdIF,EAAIv1B,YACNy1B,EAAOt/B,EAAS,EAChBvH,EAAOpT,KAAKC,IAAIqN,EAAG0sC,GACnB9mC,EAAQlT,KAAKqC,IAAIiL,EAAG0sC,GACpB/mC,EAAM1F,EAAI0sC,EACV9mC,EAAS5F,EAAI0sC,IAEbA,EAAOv/B,EAAQ,EACftH,EAAO9F,EAAI2sC,EACX/mC,EAAQ5F,EAAI2sC,EACZhnC,EAAMjT,KAAKC,IAAIsN,EAAGysC,GAClB7mC,EAASnT,KAAKqC,IAAIkL,EAAGysC,IAGhB,CAAC5mC,OAAMH,MAAKC,QAAOC,SAC5B,CAEA,SAAS+mC,GAAY96B,EAAM1X,EAAOzH,EAAKoC,GACrC,OAAO+c,EAAO,GAAIqX,EAAAA,EAAAA,GAAY/uB,EAAOzH,EAAKoC,EAC5C,CAkCA,SAAS83C,GAAcJ,GACrB,MAAMK,EAASN,GAAaC,GACtBr/B,EAAQ0/B,EAAOlnC,MAAQknC,EAAOhnC,KAC9BuH,EAASy/B,EAAOjnC,OAASinC,EAAOnnC,IAChC0M,EApCR,SAA0Bo6B,EAAKM,EAAMC,GACnC,MAAM5yC,EAAQqyC,EAAIlzC,QAAQuS,YACpBgG,EAAO26B,EAAIQ,cACX/H,GAAIgI,EAAAA,EAAAA,IAAO9yC,GAEjB,MAAO,CACLoL,EAAGonC,GAAY96B,EAAKnM,IAAKu/B,EAAEv/B,IAAK,EAAGqnC,GACnC9sC,EAAG0sC,GAAY96B,EAAKlM,MAAOs/B,EAAEt/B,MAAO,EAAGmnC,GACvCtnC,EAAGmnC,GAAY96B,EAAKjM,OAAQq/B,EAAEr/B,OAAQ,EAAGmnC,GACzCtnC,EAAGknC,GAAY96B,EAAKhM,KAAMo/B,EAAEp/B,KAAM,EAAGinC,GAEzC,CAyBiBI,CAAiBV,EAAKr/B,EAAQ,EAAGC,EAAS,GACnD3C,EAxBR,SAA2B+hC,EAAKM,EAAMC,GACpC,MAAM,mBAACI,GAAsBX,EAAIz3B,SAAS,CAAC,uBACrC5a,EAAQqyC,EAAIlzC,QAAQ4rC,aACpBD,GAAImI,EAAAA,EAAAA,IAAcjzC,GAClBkzC,EAAO56C,KAAKC,IAAIo6C,EAAMC,GACtBl7B,EAAO26B,EAAIQ,cAIXM,EAAeH,IAAsB50C,EAAAA,EAAAA,GAAS4B,GAEpD,MAAO,CACLozC,QAASZ,IAAaW,GAAgBz7B,EAAKnM,KAAOmM,EAAKhM,KAAMo/B,EAAEsI,QAAS,EAAGF,GAC3EG,SAAUb,IAAaW,GAAgBz7B,EAAKnM,KAAOmM,EAAKlM,MAAOs/B,EAAEuI,SAAU,EAAGH,GAC9EI,WAAYd,IAAaW,GAAgBz7B,EAAKjM,QAAUiM,EAAKhM,KAAMo/B,EAAEwI,WAAY,EAAGJ,GACpFK,YAAaf,IAAaW,GAAgBz7B,EAAKjM,QAAUiM,EAAKlM,MAAOs/B,EAAEyI,YAAa,EAAGL,GAE3F,CAOiBM,CAAkBnB,EAAKr/B,EAAQ,EAAGC,EAAS,GAE1D,MAAO,CACLwgC,MAAO,CACL7tC,EAAG8sC,EAAOhnC,KACV7F,EAAG6sC,EAAOnnC,IACVqS,EAAG5K,EACH8K,EAAG7K,EACH3C,UAEFk9B,MAAO,CACL5nC,EAAG8sC,EAAOhnC,KAAOuM,EAAO3M,EACxBzF,EAAG6sC,EAAOnnC,IAAM0M,EAAO7M,EACvBwS,EAAG5K,EAAQiF,EAAO3M,EAAI2M,EAAOnS,EAC7BgY,EAAG7K,EAASgF,EAAO7M,EAAI6M,EAAO5M,EAC9BiF,OAAQ,CACN8iC,QAAS96C,KAAKqC,IAAI,EAAG2V,EAAO8iC,QAAU96C,KAAKqC,IAAIsd,EAAO7M,EAAG6M,EAAO3M,IAChE+nC,SAAU/6C,KAAKqC,IAAI,EAAG2V,EAAO+iC,SAAW/6C,KAAKqC,IAAIsd,EAAO7M,EAAG6M,EAAOnS,IAClEwtC,WAAYh7C,KAAKqC,IAAI,EAAG2V,EAAOgjC,WAAah7C,KAAKqC,IAAIsd,EAAO5M,EAAG4M,EAAO3M,IACtEioC,YAAaj7C,KAAKqC,IAAI,EAAG2V,EAAOijC,YAAcj7C,KAAKqC,IAAIsd,EAAO5M,EAAG4M,EAAOnS,MAIhF,CAEA,SAAS4T,GAAQ24B,EAAKzsC,EAAGC,EAAGyT,GAC1B,MAAMo6B,EAAc,OAAN9tC,EACR+tC,EAAc,OAAN9tC,EAER6sC,EAASL,KADEqB,GAASC,IACSvB,GAAaC,EAAK/4B,GAErD,OAAOo5B,IACHgB,IAASxF,EAAAA,EAAAA,IAAWtoC,EAAG8sC,EAAOhnC,KAAMgnC,EAAOlnC,UAC3CmoC,IAASzF,EAAAA,EAAAA,IAAWroC,EAAG6sC,EAAOnnC,IAAKmnC,EAAOjnC,QAChD,CAWA,SAASmoC,GAAkB5vC,EAAK6vC,GAC9B7vC,EAAI6vC,KAAKA,EAAKjuC,EAAGiuC,EAAKhuC,EAAGguC,EAAKj2B,EAAGi2B,EAAK/1B,EACxC,CAEA,SAASg2B,GAAYD,EAAME,GAAsB,IAAdC,EAAUl7C,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAC3C,MAAM8M,EAAIiuC,EAAKjuC,IAAMouC,EAAQpuC,GAAKmuC,EAAS,EACrCluC,EAAIguC,EAAKhuC,IAAMmuC,EAAQnuC,GAAKkuC,EAAS,EACrCn2B,GAAKi2B,EAAKjuC,EAAIiuC,EAAKj2B,IAAMo2B,EAAQpuC,EAAIouC,EAAQp2B,EAAIm2B,EAAS,GAAKnuC,EAC/DkY,GAAK+1B,EAAKhuC,EAAIguC,EAAK/1B,IAAMk2B,EAAQnuC,EAAImuC,EAAQl2B,EAAIi2B,EAAS,GAAKluC,EACrE,MAAO,CACLD,EAAGiuC,EAAKjuC,EAAIA,EACZC,EAAGguC,EAAKhuC,EAAIA,EACZ+X,EAAGi2B,EAAKj2B,EAAIA,EACZE,EAAG+1B,EAAK/1B,EAAIA,EACZxN,OAAQujC,EAAKvjC,OAEjB,CAEe,MAAM2jC,WAAmBruB,GAEtC9hB,UAAY,MAKZA,gBAAkB,CAChB+uC,cAAe,QACfnhC,YAAa,EACbq5B,aAAc,EACdmJ,cAAe,OACfljC,gBAAYxZ,GAMdsM,qBAAuB,CACrBuN,gBAAiB,kBACjBE,YAAa,eAGfta,WAAAA,CAAY+E,GACVgW,QAEA9a,KAAKiI,aAAU3H,EACfN,KAAK4lB,gBAAatlB,EAClBN,KAAKo7C,UAAO96C,EACZN,KAAK8b,WAAQxb,EACbN,KAAK+b,YAASzb,EACdN,KAAKg9C,mBAAgB18C,EAEjBwE,GACFsC,OAAOe,OAAOnI,KAAM8E,EAExB,CAEAzC,IAAAA,CAAKyK,GACH,MAAM,cAACkwC,EAAe/0C,SAAS,YAACoS,EAAA,gBAAaF,IAAoBna,MAC3D,MAACs2C,EAAK,MAAEiG,GAAShB,GAAcv7C,MAC/Bi9C,GApES7jC,EAoEemjC,EAAMnjC,QAnExB8iC,SAAW9iC,EAAO+iC,UAAY/iC,EAAOgjC,YAAchjC,EAAOijC,YAmExBa,EAAAA,GAAqBR,GApEvE,IAAmBtjC,EAsEftM,EAAIuxB,OAEAke,EAAM71B,IAAM4vB,EAAM5vB,GAAK61B,EAAM31B,IAAM0vB,EAAM1vB,IAC3C9Z,EAAIkyB,YACJie,EAAYnwC,EAAK8vC,GAAYL,EAAOS,EAAe1G,IACnDxpC,EAAI6H,OACJsoC,EAAYnwC,EAAK8vC,GAAYtG,GAAQ0G,EAAeT,IACpDzvC,EAAIoN,UAAYG,EAChBvN,EAAIoB,KAAK,YAGXpB,EAAIkyB,YACJie,EAAYnwC,EAAK8vC,GAAYtG,EAAO0G,IACpClwC,EAAIoN,UAAYC,EAChBrN,EAAIoB,OAEJpB,EAAIyxB,SACN,CAEA/b,OAAAA,CAAQq4B,EAAQC,EAAQ14B,GACtB,OAAOI,GAAQxiB,KAAM66C,EAAQC,EAAQ14B,EACvC,CAEA24B,QAAAA,CAASF,EAAQz4B,GACf,OAAOI,GAAQxiB,KAAM66C,EAAQ,KAAMz4B,EACrC,CAEA44B,QAAAA,CAASF,EAAQ14B,GACf,OAAOI,GAAQxiB,KAAM,KAAM86C,EAAQ14B,EACrC,CAEAmB,cAAAA,CAAenB,GACb,MAAM,EAAC1T,EAAA,EAAGC,EAAA,KAAGysC,EAAI,WAAEx1B,GAAuC5lB,KAAK0jB,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAetB,GAC1G,MAAO,CACL1T,EAAGkX,GAAclX,EAAI0sC,GAAQ,EAAI1sC,EACjCC,EAAGiX,EAAajX,GAAKA,EAAIysC,GAAQ,EAErC,CAEAz5B,QAAAA,CAASnW,GACP,MAAgB,MAATA,EAAexL,KAAK8b,MAAQ,EAAI9b,KAAK+b,OAAS,CACvD,ECzMF,MAAMohC,GAAaA,CAACC,EAAW7c,KAC7B,IAAI,UAAC8c,EAAY9c,EAAA,SAAU+c,EAAW/c,GAAY6c,EAOlD,OALIA,EAAUG,gBACZF,EAAYj8C,KAAKC,IAAIg8C,EAAW9c,GAChC+c,EAAWF,EAAUI,iBAAmBp8C,KAAKC,IAAIi8C,EAAU/c,IAGtD,CACL+c,WACAD,YACAI,WAAYr8C,KAAKqC,IAAI88B,EAAU8c,GAChC,EAKI,MAAMK,WAAehvB,GAK1B3uB,WAAAA,CAAY+G,GACVgU,QAEA9a,KAAK29C,QAAS,EAGd39C,KAAK49C,eAAiB,GAKtB59C,KAAK69C,aAAe,KAGpB79C,KAAK89C,cAAe,EAEpB99C,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAK8M,IAAMhG,EAAOgG,IAClB9M,KAAK+9C,iBAAcz9C,EACnBN,KAAKg+C,iBAAc19C,EACnBN,KAAKi+C,gBAAa39C,EAClBN,KAAK0d,eAAYpd,EACjBN,KAAKyd,cAAWnd,EAChBN,KAAKqU,SAAM/T,EACXN,KAAKuU,YAASjU,EACdN,KAAKwU,UAAOlU,EACZN,KAAKsU,WAAQhU,EACbN,KAAK+b,YAASzb,EACdN,KAAK8b,WAAQxb,EACbN,KAAK8yB,cAAWxyB,EAChBN,KAAK+hB,cAAWzhB,EAChBN,KAAKkf,YAAS5e,EACdN,KAAK2lB,cAAWrlB,CAClB,CAEA6F,MAAAA,CAAOsX,EAAUC,EAAWoX,GAC1B90B,KAAKyd,SAAWA,EAChBzd,KAAK0d,UAAYA,EACjB1d,KAAK8yB,SAAWgC,EAEhB90B,KAAKm1B,gBACLn1B,KAAKk+C,cACLl+C,KAAKo2B,KACP,CAEAjB,aAAAA,GACMn1B,KAAKooB,gBACPpoB,KAAK8b,MAAQ9b,KAAKyd,SAClBzd,KAAKwU,KAAOxU,KAAK8yB,SAASte,KAC1BxU,KAAKsU,MAAQtU,KAAK8b,QAElB9b,KAAK+b,OAAS/b,KAAK0d,UACnB1d,KAAKqU,IAAMrU,KAAK8yB,SAASze,IACzBrU,KAAKuU,OAASvU,KAAK+b,OAEvB,CAEAmiC,WAAAA,GACE,MAAMd,EAAYp9C,KAAKiI,QAAQiK,QAAU,CAAC,EAC1C,IAAI6rC,GAAclpB,EAAAA,EAAAA,GAAKuoB,EAAUvjC,eAAgB,CAAC7Z,KAAKQ,OAAQR,OAAS,GAEpEo9C,EAAUjxC,SACZ4xC,EAAcA,EAAY5xC,QAAQhK,GAASi7C,EAAUjxC,OAAOhK,EAAMnC,KAAKQ,MAAMqP,SAG3EutC,EAAUx4B,OACZm5B,EAAcA,EAAYn5B,MAAK,CAAC7H,EAAG5I,IAAMipC,EAAUx4B,KAAK7H,EAAG5I,EAAGnU,KAAKQ,MAAMqP,SAGvE7P,KAAKiI,QAAQmB,SACf20C,EAAY30C,UAGdpJ,KAAK+9C,YAAcA,CACrB,CAEA3nB,GAAAA,GACE,MAAM,QAACnuB,EAAO,IAAE6E,GAAO9M,KAMvB,IAAKiI,EAAQihB,QAEX,YADAlpB,KAAK8b,MAAQ9b,KAAK+b,OAAS,GAI7B,MAAMqhC,EAAYn1C,EAAQiK,OACpBisC,GAAY5rB,EAAAA,EAAAA,IAAO6qB,EAAU9qB,MAC7BiO,EAAW4d,EAAUp1C,KACrBsvB,EAAcr4B,KAAKo+C,uBACnB,SAACd,EAAQ,WAAEG,GAAcN,GAAWC,EAAW7c,GAErD,IAAIzkB,EAAOC,EAEXjP,EAAIwlB,KAAO6rB,EAAUtkB,OAEjB75B,KAAKooB,gBACPtM,EAAQ9b,KAAKyd,SACb1B,EAAS/b,KAAKq+C,SAAShmB,EAAakI,EAAU+c,EAAUG,GAAc,KAEtE1hC,EAAS/b,KAAK0d,UACd5B,EAAQ9b,KAAKs+C,SAASjmB,EAAa8lB,EAAWb,EAAUG,GAAc,IAGxEz9C,KAAK8b,MAAQ1a,KAAKC,IAAIya,EAAO7T,EAAQwV,UAAYzd,KAAKyd,UACtDzd,KAAK+b,OAAS3a,KAAKC,IAAI0a,EAAQ9T,EAAQyV,WAAa1d,KAAK0d,UAC3D,CAKA2gC,QAAAA,CAAShmB,EAAakI,EAAU+c,EAAUG,GACxC,MAAM,IAAC3wC,EAAG,SAAE2Q,EAAUxV,SAAUiK,QAAQ,QAACyV,KAAa3nB,KAChDu+C,EAAWv+C,KAAK49C,eAAiB,GAEjCK,EAAaj+C,KAAKi+C,WAAa,CAAC,GAChCzrB,EAAairB,EAAa91B,EAChC,IAAI62B,EAAcnmB,EAElBvrB,EAAIkwB,UAAY,OAChBlwB,EAAIqwB,aAAe,SAEnB,IAAIshB,GAAO,EACPpqC,GAAOme,EAgBX,OAfAxyB,KAAK+9C,YAAY/8C,SAAQ,CAAC4Z,EAAYxY,KACpC,MAAMs8C,EAAYpB,EAAY/c,EAAW,EAAKzzB,EAAI6xC,YAAY/jC,EAAWX,MAAM6B,OAErE,IAAN1Z,GAAW67C,EAAWA,EAAWp8C,OAAS,GAAK68C,EAAY,EAAI/2B,EAAUlK,KAC3E+gC,GAAehsB,EACfyrB,EAAWA,EAAWp8C,QAAUO,EAAI,EAAI,EAAI,IAAM,EAClDiS,GAAOme,EACPisB,KAGFF,EAASn8C,GAAK,CAACoS,KAAM,EAAGH,MAAKoqC,MAAK3iC,MAAO4iC,EAAW3iC,OAAQ0hC,GAE5DQ,EAAWA,EAAWp8C,OAAS,IAAM68C,EAAY/2B,CAAA,IAG5C62B,CACT,CAEAF,QAAAA,CAASjmB,EAAa8lB,EAAWb,EAAUsB,GACzC,MAAM,IAAC9xC,EAAG,UAAE4Q,EAAWzV,SAAUiK,QAAQ,QAACyV,KAAa3nB,KACjDu+C,EAAWv+C,KAAK49C,eAAiB,GACjCI,EAAch+C,KAAKg+C,YAAc,GACjCa,EAAcnhC,EAAY2a,EAEhC,IAAIymB,EAAan3B,EACbo3B,EAAkB,EAClBC,EAAmB,EAEnBxqC,EAAO,EACPyqC,EAAM,EAyBV,OAvBAj/C,KAAK+9C,YAAY/8C,SAAQ,CAAC4Z,EAAYxY,KACpC,MAAM,UAACs8C,EAAS,WAAEjB,GA8VxB,SAA2BH,EAAUa,EAAWrxC,EAAK8N,EAAYgkC,GAC/D,MAAMF,EAKR,SAA4B9jC,EAAY0iC,EAAUa,EAAWrxC,GAC3D,IAAIoyC,EAAiBtkC,EAAWX,KAC5BilC,GAA4C,kBAAnBA,IAC3BA,EAAiBA,EAAe57C,QAAO,CAACyZ,EAAG5I,IAAM4I,EAAElb,OAASsS,EAAEtS,OAASkb,EAAI5I,KAE7E,OAAOmpC,EAAYa,EAAUp1C,KAAO,EAAK+D,EAAI6xC,YAAYO,GAAgBpjC,KAC3E,CAXoBqjC,CAAmBvkC,EAAY0iC,EAAUa,EAAWrxC,GAChE2wC,EAYR,SAA6BmB,EAAahkC,EAAYwkC,GACpD,IAAI3B,EAAamB,EACc,kBAApBhkC,EAAWX,OACpBwjC,EAAa4B,GAA0BzkC,EAAYwkC,IAErD,OAAO3B,CACT,CAlBqB6B,CAAoBV,EAAahkC,EAAYujC,EAAU3rB,YAC1E,MAAO,CAACksB,YAAWjB,aACrB,CAlWsC8B,CAAkBjC,EAAUa,EAAWrxC,EAAK8N,EAAYgkC,GAGpFx8C,EAAI,GAAK48C,EAAmBvB,EAAa,EAAI91B,EAAUk3B,IACzDC,GAAcC,EAAkBp3B,EAChCq2B,EAAY76C,KAAK,CAAC2Y,MAAOijC,EAAiBhjC,OAAQijC,IAClDxqC,GAAQuqC,EAAkBp3B,EAC1Bs3B,IACAF,EAAkBC,EAAmB,GAIvCT,EAASn8C,GAAK,CAACoS,OAAMH,IAAK2qC,EAAkBC,MAAKnjC,MAAO4iC,EAAW3iC,OAAQ0hC,GAG3EsB,EAAkB39C,KAAKqC,IAAIs7C,EAAiBL,GAC5CM,GAAoBvB,EAAa91B,CAAA,IAGnCm3B,GAAcC,EACdf,EAAY76C,KAAK,CAAC2Y,MAAOijC,EAAiBhjC,OAAQijC,IAE3CF,CACT,CAEAU,cAAAA,GACE,IAAKx/C,KAAKiI,QAAQihB,QAChB,OAEF,MAAMmP,EAAcr4B,KAAKo+C,uBAClBR,eAAgBW,EAAUt2C,SAAS,MAACyqB,EAAOxgB,QAAQ,QAACyV,GAAQ,IAAE83B,IAAQz/C,KACvE0/C,GAAYC,EAAAA,EAAAA,IAAcF,EAAKz/C,KAAKwU,KAAMxU,KAAK8b,OACrD,GAAI9b,KAAKooB,eAAgB,CACvB,IAAIq2B,EAAM,EACNjqC,GAAOurB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKwU,KAAOmT,EAAS3nB,KAAKsU,MAAQtU,KAAKi+C,WAAWQ,IACnF,IAAK,MAAMmB,KAAUrB,EACfE,IAAQmB,EAAOnB,MACjBA,EAAMmB,EAAOnB,IACbjqC,GAAOurB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKwU,KAAOmT,EAAS3nB,KAAKsU,MAAQtU,KAAKi+C,WAAWQ,KAEjFmB,EAAOvrC,KAAOrU,KAAKqU,IAAMgkB,EAAc1Q,EACvCi4B,EAAOprC,KAAOkrC,EAAUG,WAAWH,EAAUhxC,EAAE8F,GAAOorC,EAAO9jC,OAC7DtH,GAAQorC,EAAO9jC,MAAQ6L,MAEpB,CACL,IAAIs3B,EAAM,EACN5qC,GAAM0rB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKqU,IAAMgkB,EAAc1Q,EAAS3nB,KAAKuU,OAASvU,KAAKg+C,YAAYiB,GAAKljC,QACtG,IAAK,MAAM6jC,KAAUrB,EACfqB,EAAOX,MAAQA,IACjBA,EAAMW,EAAOX,IACb5qC,GAAM0rB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKqU,IAAMgkB,EAAc1Q,EAAS3nB,KAAKuU,OAASvU,KAAKg+C,YAAYiB,GAAKljC,SAEpG6jC,EAAOvrC,IAAMA,EACburC,EAAOprC,MAAQxU,KAAKwU,KAAOmT,EAC3Bi4B,EAAOprC,KAAOkrC,EAAUG,WAAWH,EAAUhxC,EAAEkxC,EAAOprC,MAAOorC,EAAO9jC,OACpEzH,GAAOurC,EAAO7jC,OAAS4L,EAG7B,CAEAS,YAAAA,GACE,MAAiC,QAA1BpoB,KAAKiI,QAAQ8Z,UAAgD,WAA1B/hB,KAAKiI,QAAQ8Z,QACzD,CAEA1f,IAAAA,GACE,GAAIrC,KAAKiI,QAAQihB,QAAS,CACxB,MAAMpc,EAAM9M,KAAK8M,KACjB0yB,EAAAA,EAAAA,GAAS1yB,EAAK9M,MAEdA,KAAK8/C,SAELngB,EAAAA,EAAAA,GAAW7yB,GAEf,CAKAgzC,KAAAA,GACE,MAAO73C,QAASkB,EAAA,YAAM60C,EAAA,WAAaC,EAAA,IAAYnxC,GAAO9M,MAChD,MAAC0yB,EAAOxgB,OAAQkrC,GAAaj0C,EAC7B42C,EAAez4C,EAAAA,EAAShD,MACxBo7C,GAAYC,EAAAA,EAAAA,IAAcx2C,EAAKs2C,IAAKz/C,KAAKwU,KAAMxU,KAAK8b,OACpDqiC,GAAY5rB,EAAAA,EAAAA,IAAO6qB,EAAU9qB,OAC7B,QAAC3K,GAAWy1B,EACZ7c,EAAW4d,EAAUp1C,KACrBi3C,EAAezf,EAAW,EAChC,IAAI0f,EAEJjgD,KAAK4/B,YAGL9yB,EAAIkwB,UAAY0iB,EAAU1iB,UAAU,QACpClwB,EAAIqwB,aAAe,SACnBrwB,EAAIyN,UAAY,GAChBzN,EAAIwlB,KAAO6rB,EAAUtkB,OAErB,MAAM,SAACyjB,EAAA,UAAUD,EAAA,WAAWI,GAAcN,GAAWC,EAAW7c,GAyE1DnY,EAAepoB,KAAKooB,eACpBiQ,EAAcr4B,KAAKo+C,sBAEvB6B,EADE73B,EACO,CACP1Z,GAAGqxB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKwU,KAAOmT,EAAS3nB,KAAKsU,MAAQ2pC,EAAW,IACtEtvC,EAAG3O,KAAKqU,IAAMsT,EAAU0Q,EACxB7Y,KAAM,GAGC,CACP9Q,EAAG1O,KAAKwU,KAAOmT,EACfhZ,GAAGoxB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKqU,IAAMgkB,EAAc1Q,EAAS3nB,KAAKuU,OAASypC,EAAY,GAAGjiC,QACxFyD,KAAM,IAIV0gC,EAAAA,EAAAA,IAAsBlgD,KAAK8M,IAAK3D,EAAKg3C,eAErC,MAAM3tB,EAAairB,EAAa91B,EAChC3nB,KAAK+9C,YAAY/8C,SAAQ,CAAC4Z,EAAYxY,KACpC0K,EAAIsN,YAAcQ,EAAWN,UAC7BxN,EAAIoN,UAAYU,EAAWN,UAE3B,MAAM8lC,EAAYtzC,EAAI6xC,YAAY/jC,EAAWX,MAAM6B,MAC7CkhB,EAAY0iB,EAAU1iB,UAAUpiB,EAAWoiB,YAAcpiB,EAAWoiB,UAAYogB,EAAUpgB,YAC1FlhB,EAAQwhC,EAAW0C,EAAeI,EACxC,IAAI1xC,EAAIuxC,EAAOvxC,EACXC,EAAIsxC,EAAOtxC,EAEf+wC,EAAUW,SAASrgD,KAAK8b,OAEpBsM,EACEhmB,EAAI,GAAKsM,EAAIoN,EAAQ6L,EAAU3nB,KAAKsU,QACtC3F,EAAIsxC,EAAOtxC,GAAK6jB,EAChBytB,EAAOzgC,OACP9Q,EAAIuxC,EAAOvxC,GAAIqxB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKwU,KAAOmT,EAAS3nB,KAAKsU,MAAQ2pC,EAAWgC,EAAOzgC,QAElFpd,EAAI,GAAKuM,EAAI6jB,EAAaxyB,KAAKuU,SACxC7F,EAAIuxC,EAAOvxC,EAAIA,EAAIsvC,EAAYiC,EAAOzgC,MAAM1D,MAAQ6L,EACpDs4B,EAAOzgC,OACP7Q,EAAIsxC,EAAOtxC,GAAIoxB,EAAAA,EAAAA,IAAerN,EAAO1yB,KAAKqU,IAAMgkB,EAAc1Q,EAAS3nB,KAAKuU,OAASypC,EAAYiC,EAAOzgC,MAAMzD,SAYhH,GA1HoB,SAASrN,EAAGC,EAAGiM,GACnC,GAAI6D,MAAM6+B,IAAaA,GAAY,GAAK7+B,MAAM4+B,IAAcA,EAAY,EACtE,OAIFvwC,EAAIuxB,OAEJ,MAAM9jB,GAAYxL,EAAAA,EAAAA,GAAe6L,EAAWL,UAAW,GAUvD,GATAzN,EAAIoN,WAAYnL,EAAAA,EAAAA,GAAe6L,EAAWV,UAAW6lC,GACrDjzC,EAAIyqC,SAAUxoC,EAAAA,EAAAA,GAAe6L,EAAW28B,QAAS,QACjDzqC,EAAIiyB,gBAAiBhwB,EAAAA,EAAAA,GAAe6L,EAAWmkB,eAAgB,GAC/DjyB,EAAIypC,UAAWxnC,EAAAA,EAAAA,GAAe6L,EAAW27B,SAAU,SACnDzpC,EAAIyN,UAAYA,EAChBzN,EAAIsN,aAAcrL,EAAAA,EAAAA,GAAe6L,EAAWR,YAAa2lC,GAEzDjzC,EAAIgyB,aAAY/vB,EAAAA,EAAAA,GAAe6L,EAAW0lC,SAAU,KAEhDlD,EAAUG,cAAe,CAG3B,MAAMgD,EAAc,CAClBnnC,OAAQikC,EAAYj8C,KAAKo/C,MAAQ,EACjC1mC,WAAYc,EAAWd,WACvBZ,SAAU0B,EAAW1B,SACrBsB,YAAaD,GAET8D,EAAUqhC,EAAUe,MAAM/xC,EAAG4uC,EAAW,GACxCh/B,EAAU3P,EAAIqxC,GAGpBU,EAAAA,EAAAA,IAAgB5zC,EAAKyzC,EAAaliC,EAASC,EAAS8+B,EAAUI,iBAAmBF,OAC5E,CAGL,MAAMqD,EAAUhyC,EAAIvN,KAAKqC,KAAK88B,EAAW8c,GAAa,EAAG,GACnDuD,EAAWlB,EAAUG,WAAWnxC,EAAG4uC,GACnCzJ,GAAekI,EAAAA,EAAAA,IAAcnhC,EAAWi5B,cAE9C/mC,EAAIkyB,YAEA53B,OAAOW,OAAO8rC,GAAcnN,MAAKniB,GAAW,IAANA,KACxC24B,EAAAA,EAAAA,IAAmBpwC,EAAK,CACtB4B,EAAGkyC,EACHjyC,EAAGgyC,EACHj6B,EAAG42B,EACH12B,EAAGy2B,EACHjkC,OAAQy6B,IAGV/mC,EAAI6vC,KAAKiE,EAAUD,EAASrD,EAAUD,GAGxCvwC,EAAIoB,OACc,IAAdqM,GACFzN,EAAIqyB,SAIRryB,EAAIyxB,SACN,CAuDEsiB,CAFcnB,EAAUhxC,EAAEA,GAELC,EAAGiM,GAExBlM,GAAIoyC,EAAAA,EAAAA,IAAO9jB,EAAWtuB,EAAI4uC,EAAW0C,EAAc53B,EAAe1Z,EAAIoN,EAAQ9b,KAAKsU,MAAOnL,EAAKs2C,KAvDhF,SAAS/wC,EAAGC,EAAGiM,IAC9B8kB,EAAAA,EAAAA,GAAW5yB,EAAK8N,EAAWX,KAAMvL,EAAGC,EAAK8uC,EAAa,EAAIU,EAAW,CACnE4C,cAAenmC,EAAW1H,OAC1B8pB,UAAW0iB,EAAU1iB,UAAUpiB,EAAWoiB,YAE9C,CAqDEgkB,CAAStB,EAAUhxC,EAAEA,GAAIC,EAAGiM,GAExBwN,EACF63B,EAAOvxC,GAAKoN,EAAQ6L,OACf,GAA+B,kBAApB/M,EAAWX,KAAmB,CAC9C,MAAMmlC,EAAiBjB,EAAU3rB,WACjCytB,EAAOtxC,GAAK0wC,GAA0BzkC,EAAYwkC,GAAkBz3B,OAEpEs4B,EAAOtxC,GAAK6jB,MAIhByuB,EAAAA,EAAAA,IAAqBjhD,KAAK8M,IAAK3D,EAAKg3C,cACtC,CAKAvgB,SAAAA,GACE,MAAMz2B,EAAOnJ,KAAKiI,QACZkwB,EAAYhvB,EAAK4uB,MACjBmpB,GAAY3uB,EAAAA,EAAAA,IAAO4F,EAAU7F,MAC7B6uB,GAAej5B,EAAAA,EAAAA,GAAUiQ,EAAUxQ,SAEzC,IAAKwQ,EAAUjP,QACb,OAGF,MAAMw2B,GAAYC,EAAAA,EAAAA,IAAcx2C,EAAKs2C,IAAKz/C,KAAKwU,KAAMxU,KAAK8b,OACpDhP,EAAM9M,KAAK8M,IACXiV,EAAWoW,EAAUpW,SACrBi+B,EAAekB,EAAUn4C,KAAO,EAChCq4C,EAA6BD,EAAa9sC,IAAM2rC,EACtD,IAAIrxC,EAIA6F,EAAOxU,KAAKwU,KACZiJ,EAAWzd,KAAK8b,MAEpB,GAAI9b,KAAKooB,eAEP3K,EAAWrc,KAAKqC,OAAOzD,KAAKi+C,YAC5BtvC,EAAI3O,KAAKqU,IAAM+sC,EACf5sC,GAAOurB,EAAAA,EAAAA,IAAe52B,EAAKupB,MAAOle,EAAMxU,KAAKsU,MAAQmJ,OAChD,CAEL,MAAMC,EAAY1d,KAAKg+C,YAAY16C,QAAO,CAACC,EAAKwF,IAAS3H,KAAKqC,IAAIF,EAAKwF,EAAKgT,SAAS,GACrFpN,EAAIyyC,GAA6BrhB,EAAAA,EAAAA,IAAe52B,EAAKupB,MAAO1yB,KAAKqU,IAAKrU,KAAKuU,OAASmJ,EAAYvU,EAAK+I,OAAOyV,QAAU3nB,KAAKo+C,uBAK7H,MAAM1vC,GAAIqxB,EAAAA,EAAAA,IAAehe,EAAUvN,EAAMA,EAAOiJ,GAGhD3Q,EAAIkwB,UAAY0iB,EAAU1iB,WAAUrK,EAAAA,EAAAA,IAAmB5Q,IACvDjV,EAAIqwB,aAAe,SACnBrwB,EAAIsN,YAAc+d,EAAU7zB,MAC5BwI,EAAIoN,UAAYie,EAAU7zB,MAC1BwI,EAAIwlB,KAAO4uB,EAAUrnB,QAErB6F,EAAAA,EAAAA,GAAW5yB,EAAKqrB,EAAUle,KAAMvL,EAAGC,EAAGuyC,EACxC,CAKA9C,mBAAAA,GACE,MAAMjmB,EAAYn4B,KAAKiI,QAAQ8vB,MACzBmpB,GAAY3uB,EAAAA,EAAAA,IAAO4F,EAAU7F,MAC7B6uB,GAAej5B,EAAAA,EAAAA,GAAUiQ,EAAUxQ,SACzC,OAAOwQ,EAAUjP,QAAUg4B,EAAU1uB,WAAa2uB,EAAaplC,OAAS,CAC1E,CAKAslC,gBAAAA,CAAiB3yC,EAAGC,GAClB,IAAIvM,EAAGk/C,EAAQC,EAEf,IAAIvK,EAAAA,EAAAA,IAAWtoC,EAAG1O,KAAKwU,KAAMxU,KAAKsU,SAC7B0iC,EAAAA,EAAAA,IAAWroC,EAAG3O,KAAKqU,IAAKrU,KAAKuU,QAGhC,IADAgtC,EAAKvhD,KAAK49C,eACLx7C,EAAI,EAAGA,EAAIm/C,EAAG1/C,SAAUO,EAG3B,GAFAk/C,EAASC,EAAGn/C,IAER40C,EAAAA,EAAAA,IAAWtoC,EAAG4yC,EAAO9sC,KAAM8sC,EAAO9sC,KAAO8sC,EAAOxlC,SAC/Ck7B,EAAAA,EAAAA,IAAWroC,EAAG2yC,EAAOjtC,IAAKitC,EAAOjtC,IAAMitC,EAAOvlC,QAEjD,OAAO/b,KAAK+9C,YAAY37C,GAK9B,OAAO,IACT,CAMAo/C,WAAAA,CAAY7mC,GACV,MAAMxR,EAAOnJ,KAAKiI,QAClB,IAoDJ,SAAoBtH,EAAMwI,GACxB,IAAc,cAATxI,GAAiC,aAATA,KAAyBwI,EAAKsqC,SAAWtqC,EAAKs4C,SACzE,OAAO,EAET,GAAIt4C,EAAKuR,UAAqB,UAAT/Z,GAA6B,YAATA,GACvC,OAAO,EAET,OAAO,CACT,CA5DS+gD,CAAW/mC,EAAEha,KAAMwI,GACtB,OAIF,MAAMw4C,EAAc3hD,KAAKqhD,iBAAiB1mC,EAAEjM,EAAGiM,EAAEhM,GAEjD,GAAe,cAAXgM,EAAEha,MAAmC,aAAXga,EAAEha,KAAqB,CACnD,MAAM82C,EAAWz3C,KAAK69C,aAChB+D,GApfWztC,EAofqBwtC,EApfT,QAAf5kC,EAofc06B,IApfe,OAANtjC,GAAc4I,EAAE9S,eAAiBkK,EAAElK,cAAgB8S,EAAEpT,QAAUwK,EAAExK,OAqflG8tC,IAAamK,IACf/sB,EAAAA,EAAAA,GAAK1rB,EAAKs4C,QAAS,CAAC9mC,EAAG88B,EAAUz3C,MAAOA,MAG1CA,KAAK69C,aAAe8D,EAEhBA,IAAgBC,IAClB/sB,EAAAA,EAAAA,GAAK1rB,EAAKsqC,QAAS,CAAC94B,EAAGgnC,EAAa3hD,MAAOA,KAE/C,MAAW2hD,IACT9sB,EAAAA,EAAAA,GAAK1rB,EAAKuR,QAAS,CAACC,EAAGgnC,EAAa3hD,MAAOA,MA/f9B6hD,IAAC9kC,EAAG5I,CAigBrB,EAyBF,SAASkrC,GAA0BzkC,EAAYwkC,GAE7C,OAAOA,GADaxkC,EAAWX,KAAOW,EAAWX,KAAKpY,OAAS,EAEjE,CAYA,IAAAigD,GAAe,CACbl2C,GAAI,SAMJm2C,SAAUrE,GAEVp8C,KAAAA,CAAMd,EAAOwhD,EAAO/5C,GAClB,MAAM2R,EAASpZ,EAAMoZ,OAAS,IAAI8jC,GAAO,CAAC5wC,IAAKtM,EAAMsM,IAAK7E,UAASzH,UACnEwkB,EAAQ/d,UAAUzG,EAAOoZ,EAAQ3R,GACjC+c,EAAQ4C,OAAOpnB,EAAOoZ,EACxB,EAEAjW,IAAAA,CAAKnD,GACHwkB,EAAQ+C,UAAUvnB,EAAOA,EAAMoZ,eACxBpZ,EAAMoZ,MACf,EAKAgb,YAAAA,CAAap0B,EAAOwhD,EAAO/5C,GACzB,MAAM2R,EAASpZ,EAAMoZ,OACrBoL,EAAQ/d,UAAUzG,EAAOoZ,EAAQ3R,GACjC2R,EAAO3R,QAAUA,CACnB,EAIAquB,WAAAA,CAAY91B,GACV,MAAMoZ,EAASpZ,EAAMoZ,OACrBA,EAAOskC,cACPtkC,EAAO4lC,gBACT,EAGAyC,UAAAA,CAAWzhD,EAAO6X,GACXA,EAAKu6B,QACRpyC,EAAMoZ,OAAO4nC,YAAYnpC,EAAKpV,MAElC,EAEAqE,SAAU,CACR4hB,SAAS,EACTnH,SAAU,MACV2Q,MAAO,SACP/M,UAAU,EACVvc,SAAS,EACT8V,OAAQ,IAGRxE,OAAAA,CAAQC,EAAGC,EAAYhB,GACrB,MAAMjQ,EAAQiR,EAAW3Q,aACnBi4C,EAAKtoC,EAAOpZ,MACd0hD,EAAGzmC,iBAAiB9R,IACtBu4C,EAAG1Q,KAAK7nC,GACRiR,EAAW1H,QAAS,IAEpBgvC,EAAGzQ,KAAK9nC,GACRiR,EAAW1H,QAAS,EAExB,EAEAugC,QAAS,KACTgO,QAAS,KAETvvC,OAAQ,CACN5N,MAAQwI,GAAQA,EAAItM,MAAMyH,QAAQ3D,MAClCg5C,SAAU,GACV31B,QAAS,GAYT9N,cAAAA,CAAerZ,GACb,MAAMsP,EAAWtP,EAAMqP,KAAKC,UACrBoC,QAAQ,cAACqrC,EAAA,WAAezjC,EAAU,UAAEkjB,EAAA,MAAW14B,EAAA,gBAAO69C,EAAe,aAAEtO,IAAiBrzC,EAAMoZ,OAAO3R,QAE5G,OAAOzH,EAAMiJ,yBAAyBsQ,KAAKzP,IACzC,MAAM0P,EAAQ1P,EAAKY,WAAWgK,SAASqoC,EAAgB,OAAIj9C,GACrDka,GAAc0N,EAAAA,EAAAA,GAAUlO,EAAMQ,aAEpC,MAAO,CACLP,KAAMnK,EAASxF,EAAKX,OAAOoK,MAC3BmG,UAAWF,EAAMG,gBACjBG,UAAWhW,EACX4O,QAAS5I,EAAK+kC,QACdkI,QAASv9B,EAAMw9B,eACf8I,SAAUtmC,EAAMsiB,WAChByC,eAAgB/kB,EAAMwiB,iBACtB+Z,SAAUv8B,EAAMq8B,gBAChB97B,WAAYC,EAAYsB,MAAQtB,EAAYuB,QAAU,EACtD3B,YAAaJ,EAAMK,YACnBP,WAAYA,GAAcE,EAAMF,WAChCZ,SAAUc,EAAMd,SAChB8jB,UAAWA,GAAahjB,EAAMgjB,UAC9B6W,aAAcsO,IAAoBtO,GAAgB75B,EAAM65B,cAGxD5pC,aAAcK,EAAKX,MACpB,GACA3J,KACL,GAGF+3B,MAAO,CACLzzB,MAAQwI,GAAQA,EAAItM,MAAMyH,QAAQ3D,MAClC4kB,SAAS,EACTnH,SAAU,SACV9H,KAAM,KAIVkoB,YAAa,CACX7oB,YAAcC,IAAUA,EAAKE,WAAW,MACxCvH,OAAQ,CACNoH,YAAcC,IAAU,CAAC,iBAAkB,SAAU,QAAQ6L,SAAS7L,MCtsBrE,MAAM6oC,WAAc1zB,GAIzB3uB,WAAAA,CAAY+G,GACVgU,QAEA9a,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAK8M,IAAMhG,EAAOgG,IAClB9M,KAAKqiD,cAAW/hD,EAChBN,KAAKqU,SAAM/T,EACXN,KAAKuU,YAASjU,EACdN,KAAKwU,UAAOlU,EACZN,KAAKsU,WAAQhU,EACbN,KAAK8b,WAAQxb,EACbN,KAAK+b,YAASzb,EACdN,KAAK+hB,cAAWzhB,EAChBN,KAAKkf,YAAS5e,EACdN,KAAK2lB,cAAWrlB,CAClB,CAEA6F,MAAAA,CAAOsX,EAAUC,GACf,MAAMvU,EAAOnJ,KAAKiI,QAKlB,GAHAjI,KAAKwU,KAAO,EACZxU,KAAKqU,IAAM,GAENlL,EAAK+f,QAER,YADAlpB,KAAK8b,MAAQ9b,KAAK+b,OAAS/b,KAAKsU,MAAQtU,KAAKuU,OAAS,GAIxDvU,KAAK8b,MAAQ9b,KAAKsU,MAAQmJ,EAC1Bzd,KAAK+b,OAAS/b,KAAKuU,OAASmJ,EAE5B,MAAMuf,GAAYr1B,EAAAA,EAAAA,GAAQuB,EAAK8Q,MAAQ9Q,EAAK8Q,KAAKpY,OAAS,EAC1D7B,KAAKqiD,UAAWn6B,EAAAA,EAAAA,GAAU/e,EAAKwe,SAC/B,MAAM26B,EAAWrlB,GAAY1K,EAAAA,EAAAA,IAAOppB,EAAKmpB,MAAME,WAAaxyB,KAAKqiD,SAAStmC,OAEtE/b,KAAKooB,eACPpoB,KAAK+b,OAASumC,EAEdtiD,KAAK8b,MAAQwmC,CAEjB,CAEAl6B,YAAAA,GACE,MAAM5D,EAAMxkB,KAAKiI,QAAQ8Z,SACzB,MAAe,QAARyC,GAAyB,WAARA,CAC1B,CAEA+9B,SAAAA,CAAUxjC,GACR,MAAM,IAAC1K,EAAA,KAAKG,EAAA,OAAMD,EAAA,MAAQD,EAAA,QAAOrM,GAAWjI,KACtC0yB,EAAQzqB,EAAQyqB,MACtB,IACIjV,EAAUoiB,EAAQC,EADlB5mB,EAAW,EAmBf,OAhBIlZ,KAAKooB,gBACPyX,GAASE,EAAAA,EAAAA,IAAerN,EAAOle,EAAMF,GACrCwrB,EAASzrB,EAAM0K,EACftB,EAAWnJ,EAAQE,IAEM,SAArBvM,EAAQ8Z,UACV8d,EAASrrB,EAAOuK,EAChB+gB,GAASC,EAAAA,EAAAA,IAAerN,EAAOne,EAAQF,GACvC6E,GAAiB,GAANoE,EAAAA,IAEXuiB,EAASvrB,EAAQyK,EACjB+gB,GAASC,EAAAA,EAAAA,IAAerN,EAAOre,EAAKE,GACpC2E,EAAgB,GAALoE,EAAAA,GAEbG,EAAWlJ,EAASF,GAEf,CAACwrB,SAAQC,SAAQriB,WAAUvE,WACpC,CAEA7W,IAAAA,GACE,MAAMyK,EAAM9M,KAAK8M,IACX3D,EAAOnJ,KAAKiI,QAElB,IAAKkB,EAAK+f,QACR,OAGF,MAAMs5B,GAAWjwB,EAAAA,EAAAA,IAAOppB,EAAKmpB,MAEvBvT,EADayjC,EAAShwB,WACA,EAAIxyB,KAAKqiD,SAAShuC,KACxC,OAACwrB,EAAA,OAAQC,EAAA,SAAQriB,EAAA,SAAUvE,GAAYlZ,KAAKuiD,UAAUxjC,IAE5D2gB,EAAAA,EAAAA,GAAW5yB,EAAK3D,EAAK8Q,KAAM,EAAG,EAAGuoC,EAAU,CACzCl+C,MAAO6E,EAAK7E,MACZmZ,WACAvE,WACA8jB,WAAWrK,EAAAA,EAAAA,IAAmBxpB,EAAKupB,OACnCyK,aAAc,SACde,YAAa,CAAC2B,EAAQC,IAE1B,EAeF,IAAA2iB,GAAe,CACb72C,GAAI,QAMJm2C,SAAUK,GAEV9gD,KAAAA,CAAMd,EAAOwhD,EAAO/5C,IArBtB,SAAqBzH,EAAO23B,GAC1B,MAAMJ,EAAQ,IAAIqqB,GAAM,CACtBt1C,IAAKtM,EAAMsM,IACX7E,QAASkwB,EACT33B,UAGFwkB,EAAQ/d,UAAUzG,EAAOu3B,EAAOI,GAChCnT,EAAQ4C,OAAOpnB,EAAOu3B,GACtBv3B,EAAMkiD,WAAa3qB,CACrB,CAYI4qB,CAAYniD,EAAOyH,EACrB,EAEAtE,IAAAA,CAAKnD,GACH,MAAMkiD,EAAaliD,EAAMkiD,WACzB19B,EAAQ+C,UAAUvnB,EAAOkiD,UAClBliD,EAAMkiD,UACf,EAEA9tB,YAAAA,CAAap0B,EAAOwhD,EAAO/5C,GACzB,MAAM8vB,EAAQv3B,EAAMkiD,WACpB19B,EAAQ/d,UAAUzG,EAAOu3B,EAAO9vB,GAChC8vB,EAAM9vB,QAAUA,CAClB,EAEAX,SAAU,CACRorB,MAAO,SACPxJ,SAAS,EACToJ,KAAM,CACJpT,OAAQ,QAEVyG,UAAU,EACVgC,QAAS,GACT5F,SAAU,MACV9H,KAAM,GACNiF,OAAQ,KAGVoiB,cAAe,CACbh9B,MAAO,SAGT69B,YAAa,CACX7oB,aAAa,EACbE,YAAY,IChKJ,IAAIopC,QCahB,MAAMC,GAAc,CAIlBC,OAAAA,CAAQ5gD,GACN,IAAKA,EAAML,OACT,OAAO,EAGT,IAAIO,EAAGquB,EACHsyB,EAAO,IAAIla,IACXl6B,EAAI,EACJ+C,EAAQ,EAEZ,IAAKtP,EAAI,EAAGquB,EAAMvuB,EAAML,OAAQO,EAAIquB,IAAOruB,EAAG,CAC5C,MAAMsf,EAAKxf,EAAME,GAAG6S,QACpB,GAAIyM,GAAMA,EAAGkN,WAAY,CACvB,MAAMpK,EAAM9C,EAAGiN,kBACfo0B,EAAK3/C,IAAIohB,EAAI9V,GACbC,GAAK6V,EAAI7V,IACP+C,EAEN,CAIA,MAAO,CACLhD,EAHe,IAAIq0C,GAAMz/C,QAAO,CAACyZ,EAAG5I,IAAM4I,EAAI5I,IAAK4uC,EAAKh6C,KAIxD4F,EAAGA,EAAI+C,EAEX,EAKAyS,OAAAA,CAAQjiB,EAAO8gD,GACb,IAAK9gD,EAAML,OACT,OAAO,EAGT,IAGIO,EAAGquB,EAAKwyB,EAHRv0C,EAAIs0C,EAAct0C,EAClBC,EAAIq0C,EAAcr0C,EAClB0U,EAAclQ,OAAOC,kBAGzB,IAAKhR,EAAI,EAAGquB,EAAMvuB,EAAML,OAAQO,EAAIquB,IAAOruB,EAAG,CAC5C,MAAMsf,EAAKxf,EAAME,GAAG6S,QACpB,GAAIyM,GAAMA,EAAGkN,WAAY,CACvB,MAAMtL,EAAS5B,EAAG6B,iBACZ0kB,GAAIib,EAAAA,EAAAA,IAAsBF,EAAe1/B,GAE3C2kB,EAAI5kB,IACNA,EAAc4kB,EACdgb,EAAiBvhC,GAGvB,CAEA,GAAIuhC,EAAgB,CAClB,MAAME,EAAKF,EAAet0B,kBAC1BjgB,EAAIy0C,EAAGz0C,EACPC,EAAIw0C,EAAGx0C,EAGT,MAAO,CACLD,IACAC,IAEJ,GAIF,SAASy0C,GAAahI,EAAMiI,GAU1B,OATIA,KACEz7C,EAAAA,EAAAA,GAAQy7C,GAEV5yC,MAAM2vB,UAAUj9B,KAAKmgD,MAAMlI,EAAMiI,GAEjCjI,EAAKj4C,KAAKkgD,IAIPjI,CACT,CAQA,SAASmI,GAAcC,GACrB,OAAoB,kBAARA,GAAoBA,aAAeC,SAAWD,EAAI5gC,QAAQ,OAAS,EACtE4gC,EAAI9hB,MAAM,MAEZ8hB,CACT,CASA,SAASE,GAAkBljD,EAAO2B,GAChC,MAAM,QAAC8S,EAAO,aAAEhL,EAAA,MAAcN,GAASxH,EACjC+I,EAAa1K,EAAMuP,eAAe9F,GAAciB,YAChD,MAAC6I,EAAA,MAAOjL,GAASoC,EAAW4I,iBAAiBnK,GAEnD,MAAO,CACLnJ,QACAuT,QACA5I,OAAQD,EAAWsH,UAAU7I,GAC7B8L,IAAKjV,EAAMqP,KAAKC,SAAS7F,GAAc4F,KAAKlG,GAC5Cg6C,eAAgB76C,EAChByF,QAASrD,EAAWsD,aACpBgH,UAAW7L,EACXM,eACAgL,UAEJ,CAKA,SAAS2uC,GAAeC,EAAS57C,GAC/B,MAAM6E,EAAM+2C,EAAQrjD,MAAMsM,KACpB,KAACg3C,EAAI,OAAEC,EAAA,MAAQhsB,GAAS8rB,GACxB,SAACvG,EAAA,UAAUD,GAAap1C,EACxB+7C,GAAWzxB,EAAAA,EAAAA,IAAOtqB,EAAQ+7C,UAC1B9C,GAAY3uB,EAAAA,EAAAA,IAAOtqB,EAAQi5C,WAC3B+C,GAAa1xB,EAAAA,EAAAA,IAAOtqB,EAAQg8C,YAC5BC,EAAiBnsB,EAAMl2B,OACvBsiD,EAAkBJ,EAAOliD,OACzBuiD,EAAoBN,EAAKjiD,OAEzB8lB,GAAUO,EAAAA,EAAAA,GAAUjgB,EAAQ0f,SAClC,IAAI5L,EAAS4L,EAAQ5L,OACjBD,EAAQ,EAGRuoC,EAAqBP,EAAKxgD,QAAO,CAACoO,EAAO4yC,IAAa5yC,EAAQ4yC,EAASC,OAAO1iD,OAASyiD,EAASE,MAAM3iD,OAASyiD,EAASG,MAAM5iD,QAAQ,GAQ1I,GAPAwiD,GAAsBR,EAAQa,WAAW7iD,OAASgiD,EAAQc,UAAU9iD,OAEhEqiD,IACFnoC,GAAUmoC,EAAiBhD,EAAU1uB,YACnC0xB,EAAiB,GAAKj8C,EAAQ28C,aAC/B38C,EAAQ48C,mBAEPR,EAAoB,CAGtBtoC,GAAUqoC,GADan8C,EAAQ68C,cAAgB1jD,KAAKqC,IAAI45C,EAAW2G,EAASxxB,YAAcwxB,EAASxxB,aAEjG6xB,EAAqBD,GAAqBJ,EAASxxB,YACnD6xB,EAAqB,GAAKp8C,EAAQ88C,YAElCZ,IACFpoC,GAAU9T,EAAQ+8C,gBACjBb,EAAkBF,EAAWzxB,YAC5B2xB,EAAkB,GAAKl8C,EAAQg9C,eAInC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS3lC,GAC5B1D,EAAQ1a,KAAKqC,IAAIqY,EAAOhP,EAAI6xC,YAAYn/B,GAAM1D,MAAQopC,EACxD,EA+BA,OA7BAp4C,EAAIuxB,OAEJvxB,EAAIwlB,KAAO4uB,EAAUrnB,QACrB9Q,EAAAA,EAAAA,GAAK86B,EAAQ9rB,MAAOotB,GAGpBr4C,EAAIwlB,KAAO0xB,EAASnqB,QACpB9Q,EAAAA,EAAAA,GAAK86B,EAAQa,WAAWj8B,OAAOo7B,EAAQc,WAAYQ,GAGnDD,EAAej9C,EAAQ68C,cAAiBxH,EAAW,EAAIr1C,EAAQie,WAAc,GAC7E6C,EAAAA,EAAAA,GAAK+6B,GAAOQ,KACVv7B,EAAAA,EAAAA,GAAKu7B,EAASC,OAAQY,IACtBp8B,EAAAA,EAAAA,GAAKu7B,EAASE,MAAOW,IACrBp8B,EAAAA,EAAAA,GAAKu7B,EAASG,MAAOU,EAAA,IAIvBD,EAAe,EAGfp4C,EAAIwlB,KAAO2xB,EAAWpqB,QACtB9Q,EAAAA,EAAAA,GAAK86B,EAAQE,OAAQoB,GAErBr4C,EAAIyxB,UAGJziB,GAAS6L,EAAQ7L,MAEV,CAACA,QAAOC,SACjB,CAyBA,SAASqpC,GAAgB5kD,EAAOyH,EAASc,EAAMs8C,GAC7C,MAAM,EAAC32C,EAAA,MAAGoN,GAAS/S,GACZ+S,MAAOwpC,EAAYvwC,WAAW,KAACP,EAAI,MAAEF,IAAU9T,EACtD,IAAI+kD,EAAS,SAcb,MAZe,WAAXF,EACFE,EAAS72C,IAAM8F,EAAOF,GAAS,EAAI,OAAS,QACnC5F,GAAKoN,EAAQ,EACtBypC,EAAS,OACA72C,GAAK42C,EAAaxpC,EAAQ,IACnCypC,EAAS,SAtBb,SAA6BA,EAAQ/kD,EAAOyH,EAASc,GACnD,MAAM,EAAC2F,EAAA,MAAGoN,GAAS/S,EACby8C,EAAQv9C,EAAQw9C,UAAYx9C,EAAQy9C,aAC1C,MAAe,SAAXH,GAAqB72C,EAAIoN,EAAQ0pC,EAAQhlD,EAAMsb,OAIpC,UAAXypC,GAAsB72C,EAAIoN,EAAQ0pC,EAAQ,QAA9C,CAGF,CAeMG,CAAoBJ,EAAQ/kD,EAAOyH,EAASc,KAC9Cw8C,EAAS,UAGJA,CACT,CAKA,SAASK,GAAmBplD,EAAOyH,EAASc,GAC1C,MAAMs8C,EAASt8C,EAAKs8C,QAAUp9C,EAAQo9C,QA/CxC,SAAyB7kD,EAAOuI,GAC9B,MAAM,EAAC4F,EAAA,OAAGoN,GAAUhT,EAEpB,OAAI4F,EAAIoN,EAAS,EACR,MACEpN,EAAKnO,EAAMub,OAASA,EAAS,EAC/B,SAEF,QACT,CAsCkD8pC,CAAgBrlD,EAAOuI,GAEvE,MAAO,CACLw8C,OAAQx8C,EAAKw8C,QAAUt9C,EAAQs9C,QAAUH,GAAgB5kD,EAAOyH,EAASc,EAAMs8C,GAC/EA,SAEJ,CA4BA,SAASS,GAAmB79C,EAASc,EAAMg9C,EAAWvlD,GACpD,MAAM,UAACilD,EAAS,aAAEC,EAAA,aAAcM,GAAgB/9C,GAC1C,OAACs9C,EAAA,OAAQF,GAAUU,EACnBE,EAAiBR,EAAYC,GAC7B,QAACxJ,EAAO,SAAEC,EAAQ,WAAEC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAciK,GAEnE,IAAIt3C,EAhCN,SAAgB3F,EAAMw8C,GACpB,IAAI,EAAC72C,EAAA,MAAGoN,GAAS/S,EAMjB,MALe,UAAXw8C,EACF72C,GAAKoN,EACe,WAAXypC,IACT72C,GAAMoN,EAAQ,GAETpN,CACT,CAwBUw3C,CAAOn9C,EAAMw8C,GACrB,MAAM52C,EAvBR,SAAgB5F,EAAMs8C,EAAQY,GAE5B,IAAI,EAACt3C,EAAA,OAAGoN,GAAUhT,EAQlB,MAPe,QAAXs8C,EACF12C,GAAKs3C,EAELt3C,GADoB,WAAX02C,EACJtpC,EAASkqC,EAERlqC,EAAS,EAEVpN,CACT,CAYYw3C,CAAOp9C,EAAMs8C,EAAQY,GAc/B,MAZe,WAAXZ,EACa,SAAXE,EACF72C,GAAKu3C,EACe,UAAXV,IACT72C,GAAKu3C,GAEa,SAAXV,EACT72C,GAAKtN,KAAKqC,IAAIy4C,EAASE,GAAcqJ,EACjB,UAAXF,IACT72C,GAAKtN,KAAKqC,IAAI04C,EAAUE,GAAeoJ,GAGlC,CACL/2C,GAAGmpB,EAAAA,EAAAA,GAAYnpB,EAAG,EAAGlO,EAAMsb,MAAQ/S,EAAK+S,OACxCnN,GAAGkpB,EAAAA,EAAAA,GAAYlpB,EAAG,EAAGnO,EAAMub,OAAShT,EAAKgT,QAE7C,CAEA,SAASqqC,GAAYvC,EAASnxB,EAAOzqB,GACnC,MAAM0f,GAAUO,EAAAA,EAAAA,GAAUjgB,EAAQ0f,SAElC,MAAiB,WAAV+K,EACHmxB,EAAQn1C,EAAIm1C,EAAQ/nC,MAAQ,EAClB,UAAV4W,EACEmxB,EAAQn1C,EAAIm1C,EAAQ/nC,MAAQ6L,EAAQrT,MACpCuvC,EAAQn1C,EAAIiZ,EAAQnT,IAC5B,CAKA,SAAS6xC,GAAwBxxB,GAC/B,OAAOuuB,GAAa,GAAIG,GAAc1uB,GACxC,CAUA,SAASyxB,GAAkB1lD,EAAWyU,GACpC,MAAMqrB,EAAWrrB,GAAWA,EAAQ9G,SAAW8G,EAAQ9G,QAAQs1C,SAAWxuC,EAAQ9G,QAAQs1C,QAAQjjD,UAClG,OAAO8/B,EAAW9/B,EAAU8/B,SAASA,GAAY9/B,CACnD,CAEA,MAAM2lD,GAAmB,CAEvBC,YAAaC,EAAAA,GACb1uB,KAAAA,CAAM2uB,GACJ,GAAIA,EAAa7kD,OAAS,EAAG,CAC3B,MAAMM,EAAOukD,EAAa,GACpBx0C,EAAS/P,EAAK3B,MAAMqP,KAAKqC,OACzBy0C,EAAaz0C,EAASA,EAAOrQ,OAAS,EAE5C,GAAI7B,MAAQA,KAAKiI,SAAiC,YAAtBjI,KAAKiI,QAAQ+B,KACvC,OAAO7H,EAAKoM,QAAQwF,OAAS,GACxB,GAAI5R,EAAK4R,MACd,OAAO5R,EAAK4R,MACP,GAAI4yC,EAAa,GAAKxkD,EAAKqT,UAAYmxC,EAC5C,OAAOz0C,EAAO/P,EAAKqT,WAIvB,MAAO,EACT,EACAoxC,WAAYH,EAAAA,GAGZ/B,WAAY+B,EAAAA,GAGZI,YAAaJ,EAAAA,GACb1yC,KAAAA,CAAM+yC,GACJ,GAAI9mD,MAAQA,KAAKiI,SAAiC,YAAtBjI,KAAKiI,QAAQ+B,KACvC,OAAO88C,EAAY/yC,MAAQ,KAAO+yC,EAAYnD,gBAAkBmD,EAAYnD,eAG9E,IAAI5vC,EAAQ+yC,EAAYv4C,QAAQwF,OAAS,GAErCA,IACFA,GAAS,MAEX,MAAMjL,EAAQg+C,EAAYnD,eAI1B,OAHKjjC,EAAAA,EAAAA,GAAc5X,KACjBiL,GAASjL,GAEJiL,CACT,EACAgzC,UAAAA,CAAWD,GACT,MACM7+C,EADO6+C,EAAYtmD,MAAMuP,eAAe+2C,EAAY78C,cACrCiB,WAAWgK,SAAS4xC,EAAYtxC,WACrD,MAAO,CACL6E,YAAapS,EAAQoS,YACrBF,gBAAiBlS,EAAQkS,gBACzBK,YAAavS,EAAQuS,YACrB8hB,WAAYr0B,EAAQq0B,WACpBE,iBAAkBv0B,EAAQu0B,iBAC1BqX,aAAc,EAElB,EACAmT,cAAAA,GACE,OAAOhnD,KAAKiI,QAAQg/C,SACtB,EACAC,eAAAA,CAAgBJ,GACd,MACM7+C,EADO6+C,EAAYtmD,MAAMuP,eAAe+2C,EAAY78C,cACrCiB,WAAWgK,SAAS4xC,EAAYtxC,WACrD,MAAO,CACLsE,WAAY7R,EAAQ6R,WACpBZ,SAAUjR,EAAQiR,SAEtB,EACAiuC,WAAYV,EAAAA,GAGZ9B,UAAW8B,EAAAA,GAGXW,aAAcX,EAAAA,GACd1C,OAAQ0C,EAAAA,GACRY,YAAaZ,EAAAA,IAYf,SAASa,GAA2B1mD,EAAW2Y,EAAMzM,EAAK+3B,GACxD,MAAM9U,EAASnvB,EAAU2Y,GAAM9X,KAAKqL,EAAK+3B,GAEzC,MAAsB,qBAAX9U,EACFw2B,GAAiBhtC,GAAM9X,KAAKqL,EAAK+3B,GAGnC9U,CACT,CAEO,MAAMw3B,WAAgB74B,GAK3B9hB,mBAAqBi2C,GAErB9iD,WAAAA,CAAY+G,GACVgU,QAEA9a,KAAKwnD,QAAU,EACfxnD,KAAKsC,QAAU,GACftC,KAAKynD,oBAAiBnnD,EACtBN,KAAK0nD,WAAQpnD,EACbN,KAAK2nD,uBAAoBrnD,EACzBN,KAAK4nD,cAAgB,GACrB5nD,KAAKoI,iBAAc9H,EACnBN,KAAK0N,cAAWpN,EAChBN,KAAKQ,MAAQsG,EAAOtG,MACpBR,KAAKiI,QAAUnB,EAAOmB,QACtBjI,KAAK6nD,gBAAavnD,EAClBN,KAAK+3B,WAAQz3B,EACbN,KAAK0kD,gBAAapkD,EAClBN,KAAK8jD,UAAOxjD,EACZN,KAAK2kD,eAAYrkD,EACjBN,KAAK+jD,YAASzjD,EACdN,KAAKulD,YAASjlD,EACdN,KAAKqlD,YAAS/kD,EACdN,KAAK0O,OAAIpO,EACTN,KAAK2O,OAAIrO,EACTN,KAAK+b,YAASzb,EACdN,KAAK8b,WAAQxb,EACbN,KAAK8nD,YAASxnD,EACdN,KAAK+nD,YAASznD,EAGdN,KAAKgoD,iBAAc1nD,EACnBN,KAAKioD,sBAAmB3nD,EACxBN,KAAKkoD,qBAAkB5nD,CACzB,CAEAwN,UAAAA,CAAW7F,GACTjI,KAAKiI,QAAUA,EACfjI,KAAK2nD,uBAAoBrnD,EACzBN,KAAK0N,cAAWpN,CAClB,CAKAiW,kBAAAA,GACE,MAAM9J,EAASzM,KAAK2nD,kBAEpB,GAAIl7C,EACF,OAAOA,EAGT,MAAMjM,EAAQR,KAAKQ,MACbyH,EAAUjI,KAAKiI,QAAQisB,WAAWl0B,KAAKuR,cACvCpI,EAAOlB,EAAQ6nB,SAAWtvB,EAAMyH,QAAQV,WAAaU,EAAQK,WAC7DA,EAAa,IAAIzB,EAAW7G,KAAKQ,MAAO2I,GAK9C,OAJIA,EAAKuN,aACP1W,KAAK2nD,kBAAoBvgD,OAAOkP,OAAOhO,IAGlCA,CACT,CAKAiJ,UAAAA,GACE,OAAOvR,KAAK0N,WACZ1N,KAAK0N,UAtLqB4H,EAsLWtV,KAAKQ,MAAM+Q,aAtLdsyC,EAsL4B7jD,KAtLnB0mD,EAsLyB1mD,KAAK4nD,eArLpEryC,EAAAA,EAAAA,GAAcD,EAAQ,CAC3BuuC,UACA6C,eACA/lD,KAAM,cAJV,IAA8B2U,EAAQuuC,EAAS6C,CAuL7C,CAEAyB,QAAAA,CAAS9yC,EAASpN,GAChB,MAAM,UAACrH,GAAaqH,EAEdu+C,EAAcc,GAA2B1mD,EAAW,cAAeZ,KAAMqV,GACzE0iB,EAAQuvB,GAA2B1mD,EAAW,QAASZ,KAAMqV,GAC7DuxC,EAAaU,GAA2B1mD,EAAW,aAAcZ,KAAMqV,GAE7E,IAAImvC,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAciD,IAC1ChC,EAAQpB,GAAaoB,EAAOjB,GAAcxrB,IAC1CysB,EAAQpB,GAAaoB,EAAOjB,GAAcqD,IAEnCpC,CACT,CAEA4D,aAAAA,CAAc1B,EAAcz+C,GAC1B,OAAOo+C,GACLiB,GAA2Br/C,EAAQrH,UAAW,aAAcZ,KAAM0mD,GAEtE,CAEA2B,OAAAA,CAAQ3B,EAAcz+C,GACpB,MAAM,UAACrH,GAAaqH,EACdqgD,EAAY,GAgBlB,OAdAv/B,EAAAA,EAAAA,GAAK29B,GAAerxC,IAClB,MAAMivC,EAAW,CACfC,OAAQ,GACRC,MAAO,GACPC,MAAO,IAEH8D,EAASjC,GAAkB1lD,EAAWyU,GAC5C+tC,GAAakB,EAASC,OAAQhB,GAAc+D,GAA2BiB,EAAQ,cAAevoD,KAAMqV,KACpG+tC,GAAakB,EAASE,MAAO8C,GAA2BiB,EAAQ,QAASvoD,KAAMqV,IAC/E+tC,GAAakB,EAASG,MAAOlB,GAAc+D,GAA2BiB,EAAQ,aAAcvoD,KAAMqV,KAElGizC,EAAUnlD,KAAKmhD,EAAA,IAGVgE,CACT,CAEAE,YAAAA,CAAa9B,EAAcz+C,GACzB,OAAOo+C,GACLiB,GAA2Br/C,EAAQrH,UAAW,YAAaZ,KAAM0mD,GAErE,CAGA+B,SAAAA,CAAU/B,EAAcz+C,GACtB,MAAM,UAACrH,GAAaqH,EAEdm/C,EAAeE,GAA2B1mD,EAAW,eAAgBZ,KAAM0mD,GAC3E3C,EAASuD,GAA2B1mD,EAAW,SAAUZ,KAAM0mD,GAC/DW,EAAcC,GAA2B1mD,EAAW,cAAeZ,KAAM0mD,GAE/E,IAAIlC,EAAQ,GAKZ,OAJAA,EAAQpB,GAAaoB,EAAOjB,GAAc6D,IAC1C5C,EAAQpB,GAAaoB,EAAOjB,GAAcQ,IAC1CS,EAAQpB,GAAaoB,EAAOjB,GAAc8D,IAEnC7C,CACT,CAKAkE,YAAAA,CAAazgD,GACX,MAAM/B,EAASlG,KAAKsC,QACduN,EAAO7P,KAAKQ,MAAMqP,KAClBm4C,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACI9lD,EAAGquB,EADHi2B,EAAe,GAGnB,IAAKtkD,EAAI,EAAGquB,EAAMvqB,EAAOrE,OAAQO,EAAIquB,IAAOruB,EAC1CskD,EAAavjD,KAAKugD,GAAkB1jD,KAAKQ,MAAO0F,EAAO9D,KAyBzD,OArBI6F,EAAQkE,SACVu6C,EAAeA,EAAav6C,QAAO,CAAC8I,EAAStL,EAAO2a,IAAUrc,EAAQkE,OAAO8I,EAAStL,EAAO2a,EAAOzU,MAIlG5H,EAAQ0gD,WACVjC,EAAeA,EAAa9hC,MAAK,CAAC7H,EAAG5I,IAAMlM,EAAQ0gD,SAAS5rC,EAAG5I,EAAGtE,OAIpEkZ,EAAAA,EAAAA,GAAK29B,GAAerxC,IAClB,MAAMkzC,EAASjC,GAAkBr+C,EAAQrH,UAAWyU,GACpD2yC,EAAY7kD,KAAKmkD,GAA2BiB,EAAQ,aAAcvoD,KAAMqV,IACxE4yC,EAAiB9kD,KAAKmkD,GAA2BiB,EAAQ,kBAAmBvoD,KAAMqV,IAClF6yC,EAAgB/kD,KAAKmkD,GAA2BiB,EAAQ,iBAAkBvoD,KAAMqV,GAAA,IAGlFrV,KAAKgoD,YAAcA,EACnBhoD,KAAKioD,iBAAmBA,EACxBjoD,KAAKkoD,gBAAkBA,EACvBloD,KAAK6nD,WAAanB,EACXA,CACT,CAEAvgD,MAAAA,CAAOohB,EAASqrB,GACd,MAAM3qC,EAAUjI,KAAKiI,QAAQisB,WAAWl0B,KAAKuR,cACvCrL,EAASlG,KAAKsC,QACpB,IAAIuF,EACA6+C,EAAe,GAEnB,GAAKxgD,EAAOrE,OAML,CACL,MAAMkgB,EAAW8gC,GAAY56C,EAAQ8Z,UAAUtgB,KAAKzB,KAAMkG,EAAQlG,KAAKynD,gBACvEf,EAAe1mD,KAAK0oD,aAAazgD,GAEjCjI,KAAK+3B,MAAQ/3B,KAAKmoD,SAASzB,EAAcz+C,GACzCjI,KAAK0kD,WAAa1kD,KAAKooD,cAAc1B,EAAcz+C,GACnDjI,KAAK8jD,KAAO9jD,KAAKqoD,QAAQ3B,EAAcz+C,GACvCjI,KAAK2kD,UAAY3kD,KAAKwoD,aAAa9B,EAAcz+C,GACjDjI,KAAK+jD,OAAS/jD,KAAKyoD,UAAU/B,EAAcz+C,GAE3C,MAAMc,EAAO/I,KAAK0nD,MAAQ9D,GAAe5jD,KAAMiI,GACzC2gD,EAAkBxhD,OAAOe,OAAO,CAAC,EAAG4Z,EAAUhZ,GAC9Cg9C,EAAYH,GAAmB5lD,KAAKQ,MAAOyH,EAAS2gD,GACpDC,EAAkB/C,GAAmB79C,EAAS2gD,EAAiB7C,EAAW/lD,KAAKQ,OAErFR,KAAKulD,OAASQ,EAAUR,OACxBvlD,KAAKqlD,OAASU,EAAUV,OAExBx9C,EAAa,CACX2/C,QAAS,EACT94C,EAAGm6C,EAAgBn6C,EACnBC,EAAGk6C,EAAgBl6C,EACnBmN,MAAO/S,EAAK+S,MACZC,OAAQhT,EAAKgT,OACb+rC,OAAQ/lC,EAASrT,EACjBq5C,OAAQhmC,EAASpT,QA9BE,IAAjB3O,KAAKwnD,UACP3/C,EAAa,CACX2/C,QAAS,IAgCfxnD,KAAK4nD,cAAgBlB,EACrB1mD,KAAK0N,cAAWpN,EAEZuH,GACF7H,KAAKuW,qBAAqBpQ,OAAOnG,KAAM6H,GAGrC0f,GAAWtf,EAAQ6gD,UACrB7gD,EAAQ6gD,SAASrnD,KAAKzB,KAAM,CAACQ,MAAOR,KAAKQ,MAAOqjD,QAAS7jD,KAAM4yC,UAEnE,CAEAmW,SAAAA,CAAUC,EAAcl8C,EAAK/D,EAAMd,GACjC,MAAMghD,EAAgBjpD,KAAKkpD,iBAAiBF,EAAcjgD,EAAMd,GAEhE6E,EAAIoyB,OAAO+pB,EAAcrtB,GAAIqtB,EAAcptB,IAC3C/uB,EAAIoyB,OAAO+pB,EAAcntB,GAAImtB,EAAcltB,IAC3CjvB,EAAIoyB,OAAO+pB,EAAcE,GAAIF,EAAcG,GAC7C,CAEAF,gBAAAA,CAAiBF,EAAcjgD,EAAMd,GACnC,MAAM,OAACs9C,EAAM,OAAEF,GAAUrlD,MACnB,UAACylD,EAAA,aAAWO,GAAgB/9C,GAC5B,QAACi0C,EAAO,SAAEC,EAAQ,WAAEC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAciK,IAC5Dt3C,EAAG26C,EAAK16C,EAAG26C,GAAON,GACnB,MAACltC,EAAA,OAAOC,GAAUhT,EACxB,IAAI6yB,EAAIE,EAAIqtB,EAAIttB,EAAIE,EAAIqtB,EAgDxB,MA9Ce,WAAX/D,GACFtpB,EAAKutB,EAAOvtC,EAAS,EAEN,SAAXwpC,GACF3pB,EAAKytB,EACLvtB,EAAKF,EAAK6pB,EAGV5pB,EAAKE,EAAK0pB,EACV2D,EAAKrtB,EAAK0pB,IAEV7pB,EAAKytB,EAAMvtC,EACXggB,EAAKF,EAAK6pB,EAGV5pB,EAAKE,EAAK0pB,EACV2D,EAAKrtB,EAAK0pB,GAGZ0D,EAAKvtB,IAGHE,EADa,SAAXypB,EACG8D,EAAMjoD,KAAKqC,IAAIy4C,EAASE,GAAeqJ,EACxB,UAAXF,EACJ8D,EAAMvtC,EAAQ1a,KAAKqC,IAAI04C,EAAUE,GAAeoJ,EAEhDzlD,KAAK8nD,OAGG,QAAXzC,GACFxpB,EAAKytB,EACLvtB,EAAKF,EAAK4pB,EAGV7pB,EAAKE,EAAK2pB,EACV0D,EAAKrtB,EAAK2pB,IAEV5pB,EAAKytB,EAAMvtC,EACXggB,EAAKF,EAAK4pB,EAGV7pB,EAAKE,EAAK2pB,EACV0D,EAAKrtB,EAAK2pB,GAEZ2D,EAAKvtB,GAEA,CAACD,KAAIE,KAAIqtB,KAAIttB,KAAIE,KAAIqtB,KAC9B,CAEAxpB,SAAAA,CAAU2pB,EAAIz8C,EAAK7E,GACjB,MAAM8vB,EAAQ/3B,KAAK+3B,MACbl2B,EAASk2B,EAAMl2B,OACrB,IAAIq/C,EAAW0D,EAAcxiD,EAE7B,GAAIP,EAAQ,CACV,MAAM69C,GAAYC,EAAAA,EAAAA,IAAc13C,EAAQw3C,IAAKz/C,KAAK0O,EAAG1O,KAAK8b,OAa1D,IAXAytC,EAAG76C,EAAI03C,GAAYpmD,KAAMiI,EAAQwqB,WAAYxqB,GAE7C6E,EAAIkwB,UAAY0iB,EAAU1iB,UAAU/0B,EAAQwqB,YAC5C3lB,EAAIqwB,aAAe,SAEnB+jB,GAAY3uB,EAAAA,EAAAA,IAAOtqB,EAAQi5C,WAC3B0D,EAAe38C,EAAQ28C,aAEvB93C,EAAIoN,UAAYjS,EAAQuhD,WACxB18C,EAAIwlB,KAAO4uB,EAAUrnB,OAEhBz3B,EAAI,EAAGA,EAAIP,IAAUO,EACxB0K,EAAIk0C,SAASjpB,EAAM31B,GAAIs9C,EAAUhxC,EAAE66C,EAAG76C,GAAI66C,EAAG56C,EAAIuyC,EAAU1uB,WAAa,GACxE+2B,EAAG56C,GAAKuyC,EAAU1uB,WAAaoyB,EAE3BxiD,EAAI,IAAMP,IACZ0nD,EAAG56C,GAAK1G,EAAQ48C,kBAAoBD,GAI5C,CAKA6E,aAAAA,CAAc38C,EAAKy8C,EAAInnD,EAAGs9C,EAAWz3C,GACnC,MAAM8+C,EAAa/mD,KAAKgoD,YAAY5lD,GAC9B8kD,EAAkBlnD,KAAKioD,iBAAiB7lD,IACxC,UAACi7C,EAAA,SAAWC,GAAYr1C,EACxB+7C,GAAWzxB,EAAAA,EAAAA,IAAOtqB,EAAQ+7C,UAC1B0F,EAAStD,GAAYpmD,KAAM,OAAQiI,GACnC0hD,EAAYjK,EAAUhxC,EAAEg7C,GACxBE,EAAUvM,EAAY2G,EAASxxB,YAAcwxB,EAASxxB,WAAa6qB,GAAa,EAAI,EACpFwM,EAASN,EAAG56C,EAAIi7C,EAEtB,GAAI3hD,EAAQs1C,cAAe,CACzB,MAAMgD,EAAc,CAClBnnC,OAAQhY,KAAKC,IAAIi8C,EAAUD,GAAa,EACxCvjC,WAAYotC,EAAgBptC,WAC5BZ,SAAUguC,EAAgBhuC,SAC1BsB,YAAa,GAIT6D,EAAUqhC,EAAUG,WAAW8J,EAAWrM,GAAYA,EAAW,EACjEh/B,EAAUurC,EAASxM,EAAY,EAGrCvwC,EAAIsN,YAAcnS,EAAQ6hD,mBAC1Bh9C,EAAIoN,UAAYjS,EAAQ6hD,oBACxB7O,EAAAA,EAAAA,IAAUnuC,EAAKyzC,EAAaliC,EAASC,GAGrCxR,EAAIsN,YAAc2sC,EAAW1sC,YAC7BvN,EAAIoN,UAAY6sC,EAAW5sC,iBAC3B8gC,EAAAA,EAAAA,IAAUnuC,EAAKyzC,EAAaliC,EAASC,OAChC,CAELxR,EAAIyN,WAAYrT,EAAAA,EAAAA,GAAS6/C,EAAWvsC,aAAepZ,KAAKqC,OAAO2D,OAAOW,OAAOg/C,EAAWvsC,cAAiBusC,EAAWvsC,aAAe,EACnI1N,EAAIsN,YAAc2sC,EAAW1sC,YAC7BvN,EAAIgyB,YAAYioB,EAAWzqB,YAAc,IACzCxvB,EAAIiyB,eAAiBgoB,EAAWvqB,kBAAoB,EAGpD,MAAMutB,EAASrK,EAAUG,WAAW8J,EAAWrM,GACzC0M,EAAStK,EAAUG,WAAWH,EAAUe,MAAMkJ,EAAW,GAAIrM,EAAW,GACxEzJ,GAAekI,EAAAA,EAAAA,IAAcgL,EAAWlT,cAE1CzsC,OAAOW,OAAO8rC,GAAcnN,MAAKniB,GAAW,IAANA,KACxCzX,EAAIkyB,YACJlyB,EAAIoN,UAAYjS,EAAQ6hD,oBACxB5M,EAAAA,EAAAA,IAAmBpwC,EAAK,CACtB4B,EAAGq7C,EACHp7C,EAAGk7C,EACHnjC,EAAG42B,EACH12B,EAAGy2B,EACHjkC,OAAQy6B,IAEV/mC,EAAIoB,OACJpB,EAAIqyB,SAGJryB,EAAIoN,UAAY6sC,EAAW5sC,gBAC3BrN,EAAIkyB,aACJke,EAAAA,EAAAA,IAAmBpwC,EAAK,CACtB4B,EAAGs7C,EACHr7C,EAAGk7C,EAAS,EACZnjC,EAAG42B,EAAW,EACd12B,EAAGy2B,EAAY,EACfjkC,OAAQy6B,IAEV/mC,EAAIoB,SAGJpB,EAAIoN,UAAYjS,EAAQ6hD,mBACxBh9C,EAAIwxB,SAASyrB,EAAQF,EAAQvM,EAAUD,GACvCvwC,EAAIm9C,WAAWF,EAAQF,EAAQvM,EAAUD,GAEzCvwC,EAAIoN,UAAY6sC,EAAW5sC,gBAC3BrN,EAAIwxB,SAAS0rB,EAAQH,EAAS,EAAGvM,EAAW,EAAGD,EAAY,IAK/DvwC,EAAIoN,UAAYla,KAAKkoD,gBAAgB9lD,EACvC,CAEA8nD,QAAAA,CAASX,EAAIz8C,EAAK7E,GAChB,MAAM,KAAC67C,GAAQ9jD,MACT,YAAC+kD,EAAA,UAAaoF,EAAA,cAAWrF,EAAA,UAAezH,EAAA,SAAWC,EAAA,WAAUp3B,GAAcje,EAC3E+7C,GAAWzxB,EAAAA,EAAAA,IAAOtqB,EAAQ+7C,UAChC,IAAIoG,EAAiBpG,EAASxxB,WAC1B63B,EAAe,EAEnB,MAAM3K,GAAYC,EAAAA,EAAAA,IAAc13C,EAAQw3C,IAAKz/C,KAAK0O,EAAG1O,KAAK8b,OAEpDwuC,EAAiB,SAAS9qC,GAC9B1S,EAAIk0C,SAASxhC,EAAMkgC,EAAUhxC,EAAE66C,EAAG76C,EAAI27C,GAAed,EAAG56C,EAAIy7C,EAAiB,GAC7Eb,EAAG56C,GAAKy7C,EAAiBrF,CAC3B,EAEMwF,EAA0B7K,EAAU1iB,UAAUmtB,GACpD,IAAI7F,EAAUkG,EAAWhG,EAAOpiD,EAAG8f,EAAGxY,EAAM4vB,EAiB5C,IAfAxsB,EAAIkwB,UAAYmtB,EAChBr9C,EAAIqwB,aAAe,SACnBrwB,EAAIwlB,KAAO0xB,EAASnqB,OAEpB0vB,EAAG76C,EAAI03C,GAAYpmD,KAAMuqD,EAAyBtiD,GAGlD6E,EAAIoN,UAAYjS,EAAQg/C,WACxBl+B,EAAAA,EAAAA,GAAK/oB,KAAK0kD,WAAY4F,GAEtBD,EAAevF,GAA6C,UAA5ByF,EACd,WAAdJ,EAA0B7M,EAAW,EAAIp3B,EAAeo3B,EAAW,EAAIp3B,EACvE,EAGC9jB,EAAI,EAAGsH,EAAOo6C,EAAKjiD,OAAQO,EAAIsH,IAAQtH,EAAG,CAc7C,IAbAkiD,EAAWR,EAAK1hD,GAChBooD,EAAYxqD,KAAKkoD,gBAAgB9lD,GAEjC0K,EAAIoN,UAAYswC,GAChBzhC,EAAAA,EAAAA,GAAKu7B,EAASC,OAAQ+F,GAEtB9F,EAAQF,EAASE,MAEbM,GAAiBN,EAAM3iD,SACzB7B,KAAKypD,cAAc38C,EAAKy8C,EAAInnD,EAAGs9C,EAAWz3C,GAC1CmiD,EAAiBhpD,KAAKqC,IAAIugD,EAASxxB,WAAY6qB,IAG5Cn7B,EAAI,EAAGoX,EAAOkrB,EAAM3iD,OAAQqgB,EAAIoX,IAAQpX,EAC3CooC,EAAe9F,EAAMtiC,IAErBkoC,EAAiBpG,EAASxxB,YAG5BzJ,EAAAA,EAAAA,GAAKu7B,EAASG,MAAO6F,EACvB,CAGAD,EAAe,EACfD,EAAiBpG,EAASxxB,YAG1BzJ,EAAAA,EAAAA,GAAK/oB,KAAK2kD,UAAW2F,GACrBf,EAAG56C,GAAKo2C,CACV,CAEA0F,UAAAA,CAAWlB,EAAIz8C,EAAK7E,GAClB,MAAM87C,EAAS/jD,KAAK+jD,OACdliD,EAASkiD,EAAOliD,OACtB,IAAIoiD,EAAY7hD,EAEhB,GAAIP,EAAQ,CACV,MAAM69C,GAAYC,EAAAA,EAAAA,IAAc13C,EAAQw3C,IAAKz/C,KAAK0O,EAAG1O,KAAK8b,OAa1D,IAXAytC,EAAG76C,EAAI03C,GAAYpmD,KAAMiI,EAAQyiD,YAAaziD,GAC9CshD,EAAG56C,GAAK1G,EAAQ+8C,gBAEhBl4C,EAAIkwB,UAAY0iB,EAAU1iB,UAAU/0B,EAAQyiD,aAC5C59C,EAAIqwB,aAAe,SAEnB8mB,GAAa1xB,EAAAA,EAAAA,IAAOtqB,EAAQg8C,YAE5Bn3C,EAAIoN,UAAYjS,EAAQ0iD,YACxB79C,EAAIwlB,KAAO2xB,EAAWpqB,OAEjBz3B,EAAI,EAAGA,EAAIP,IAAUO,EACxB0K,EAAIk0C,SAAS+C,EAAO3hD,GAAIs9C,EAAUhxC,EAAE66C,EAAG76C,GAAI66C,EAAG56C,EAAIs1C,EAAWzxB,WAAa,GAC1E+2B,EAAG56C,GAAKs1C,EAAWzxB,WAAavqB,EAAQg9C,cAG9C,CAEA7mB,cAAAA,CAAemrB,EAAIz8C,EAAK89C,EAAa3iD,GACnC,MAAM,OAACs9C,EAAM,OAAEF,GAAUrlD,MACnB,EAAC0O,EAAA,EAAGC,GAAK46C,GACT,MAACztC,EAAA,OAAOC,GAAU6uC,GAClB,QAAC1O,EAAA,SAASC,EAAA,WAAUC,EAAA,YAAYC,IAAeN,EAAAA,EAAAA,IAAc9zC,EAAQ+9C,cAE3El5C,EAAIoN,UAAYjS,EAAQkS,gBACxBrN,EAAIsN,YAAcnS,EAAQoS,YAC1BvN,EAAIyN,UAAYtS,EAAQuS,YAExB1N,EAAIkyB,YACJlyB,EAAImyB,OAAOvwB,EAAIwtC,EAASvtC,GACT,QAAX02C,GACFrlD,KAAK+oD,UAAUQ,EAAIz8C,EAAK89C,EAAa3iD,GAEvC6E,EAAIoyB,OAAOxwB,EAAIoN,EAAQqgC,EAAUxtC,GACjC7B,EAAI+9C,iBAAiBn8C,EAAIoN,EAAOnN,EAAGD,EAAIoN,EAAOnN,EAAIwtC,GACnC,WAAXkJ,GAAkC,UAAXE,GACzBvlD,KAAK+oD,UAAUQ,EAAIz8C,EAAK89C,EAAa3iD,GAEvC6E,EAAIoyB,OAAOxwB,EAAIoN,EAAOnN,EAAIoN,EAASsgC,GACnCvvC,EAAI+9C,iBAAiBn8C,EAAIoN,EAAOnN,EAAIoN,EAAQrN,EAAIoN,EAAQugC,EAAa1tC,EAAIoN,GAC1D,WAAXspC,GACFrlD,KAAK+oD,UAAUQ,EAAIz8C,EAAK89C,EAAa3iD,GAEvC6E,EAAIoyB,OAAOxwB,EAAI0tC,EAAYztC,EAAIoN,GAC/BjP,EAAI+9C,iBAAiBn8C,EAAGC,EAAIoN,EAAQrN,EAAGC,EAAIoN,EAASqgC,GACrC,WAAXiJ,GAAkC,SAAXE,GACzBvlD,KAAK+oD,UAAUQ,EAAIz8C,EAAK89C,EAAa3iD,GAEvC6E,EAAIoyB,OAAOxwB,EAAGC,EAAIutC,GAClBpvC,EAAI+9C,iBAAiBn8C,EAAGC,EAAGD,EAAIwtC,EAASvtC,GACxC7B,EAAIqpC,YAEJrpC,EAAIoB,OAEAjG,EAAQuS,YAAc,GACxB1N,EAAIqyB,QAER,CAMA2rB,sBAAAA,CAAuB7iD,GACrB,MAAMzH,EAAQR,KAAKQ,MACbC,EAAQT,KAAKoI,YACb2iD,EAAQtqD,GAASA,EAAMiO,EACvBs8C,EAAQvqD,GAASA,EAAMkO,EAC7B,GAAIo8C,GAASC,EAAO,CAClB,MAAMjpC,EAAW8gC,GAAY56C,EAAQ8Z,UAAUtgB,KAAKzB,KAAMA,KAAKsC,QAAStC,KAAKynD,gBAC7E,IAAK1lC,EACH,OAEF,MAAMhZ,EAAO/I,KAAK0nD,MAAQ9D,GAAe5jD,KAAMiI,GACzC2gD,EAAkBxhD,OAAOe,OAAO,CAAC,EAAG4Z,EAAU/hB,KAAK0nD,OACnD3B,EAAYH,GAAmBplD,EAAOyH,EAAS2gD,GAC/CroC,EAAQulC,GAAmB79C,EAAS2gD,EAAiB7C,EAAWvlD,GAClEuqD,EAAM/kD,MAAQua,EAAM7R,GAAKs8C,EAAMhlD,MAAQua,EAAM5R,IAC/C3O,KAAKulD,OAASQ,EAAUR,OACxBvlD,KAAKqlD,OAASU,EAAUV,OACxBrlD,KAAK8b,MAAQ/S,EAAK+S,MAClB9b,KAAK+b,OAAShT,EAAKgT,OACnB/b,KAAK8nD,OAAS/lC,EAASrT,EACvB1O,KAAK+nD,OAAShmC,EAASpT,EACvB3O,KAAKuW,qBAAqBpQ,OAAOnG,KAAMugB,IAG7C,CAMA0qC,WAAAA,GACE,QAASjrD,KAAKwnD,OAChB,CAEAnlD,IAAAA,CAAKyK,GACH,MAAM7E,EAAUjI,KAAKiI,QAAQisB,WAAWl0B,KAAKuR,cAC7C,IAAIi2C,EAAUxnD,KAAKwnD,QAEnB,IAAKA,EACH,OAGFxnD,KAAK8qD,uBAAuB7iD,GAE5B,MAAM2iD,EAAc,CAClB9uC,MAAO9b,KAAK8b,MACZC,OAAQ/b,KAAK+b,QAETwtC,EAAK,CACT76C,EAAG1O,KAAK0O,EACRC,EAAG3O,KAAK2O,GAIV64C,EAAUpmD,KAAKsd,IAAI8oC,GAAW,KAAO,EAAIA,EAEzC,MAAM7/B,GAAUO,EAAAA,EAAAA,GAAUjgB,EAAQ0f,SAG5BujC,EAAoBlrD,KAAK+3B,MAAMl2B,QAAU7B,KAAK0kD,WAAW7iD,QAAU7B,KAAK8jD,KAAKjiD,QAAU7B,KAAK2kD,UAAU9iD,QAAU7B,KAAK+jD,OAAOliD,OAE9HoG,EAAQ6nB,SAAWo7B,IACrBp+C,EAAIuxB,OACJvxB,EAAIq+C,YAAc3D,EAGlBxnD,KAAKo+B,eAAemrB,EAAIz8C,EAAK89C,EAAa3iD,IAE1Ci4C,EAAAA,EAAAA,IAAsBpzC,EAAK7E,EAAQk4C,eAEnCoJ,EAAG56C,GAAKgZ,EAAQtT,IAGhBrU,KAAK4/B,UAAU2pB,EAAIz8C,EAAK7E,GAGxBjI,KAAKkqD,SAASX,EAAIz8C,EAAK7E,GAGvBjI,KAAKyqD,WAAWlB,EAAIz8C,EAAK7E,IAEzBg5C,EAAAA,EAAAA,IAAqBn0C,EAAK7E,EAAQk4C,eAElCrzC,EAAIyxB,UAER,CAMA8T,iBAAAA,GACE,OAAOryC,KAAKsC,SAAW,EACzB,CAOAgwC,iBAAAA,CAAkBC,EAAgByQ,GAChC,MAAMxQ,EAAaxyC,KAAKsC,QAClB4D,EAASqsC,EAAex4B,KAAIqxC,IAA2B,IAA1B,aAACnhD,EAAY,MAAEN,GAAMyhD,EACtD,MAAM9gD,EAAOtK,KAAKQ,MAAMuP,eAAe9F,GAEvC,IAAKK,EACH,MAAM,IAAI62B,MAAM,kCAAoCl3B,GAGtD,MAAO,CACLA,eACAgL,QAAS3K,EAAKuF,KAAKlG,GACnBA,QACD,IAEG4d,IAAWmrB,EAAAA,EAAAA,IAAeF,EAAYtsC,GACtCmlD,EAAkBrrD,KAAKsrD,iBAAiBplD,EAAQ88C,IAElDz7B,GAAW8jC,KACbrrD,KAAKsC,QAAU4D,EACflG,KAAKynD,eAAiBzE,EACtBhjD,KAAKurD,qBAAsB,EAC3BvrD,KAAKmG,QAAO,GAEhB,CASAq7C,WAAAA,CAAY7mC,EAAGi4B,GAA4B,IAApBK,IAAArxC,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,KAAAA,UAAA,GACrB,GAAIgxC,GAAU5yC,KAAKurD,oBACjB,OAAO,EAETvrD,KAAKurD,qBAAsB,EAE3B,MAAMtjD,EAAUjI,KAAKiI,QACfuqC,EAAaxyC,KAAKsC,SAAW,GAC7B4D,EAASlG,KAAKozC,mBAAmBz4B,EAAG63B,EAAYI,EAAQK,GAKxDoY,EAAkBrrD,KAAKsrD,iBAAiBplD,EAAQyU,GAGhD4M,EAAUqrB,KAAWF,EAAAA,EAAAA,IAAexsC,EAAQssC,IAAe6Y,EAgBjE,OAbI9jC,IACFvnB,KAAKsC,QAAU4D,GAEX+B,EAAQ6nB,SAAW7nB,EAAQ6gD,YAC7B9oD,KAAKynD,eAAiB,CACpB/4C,EAAGiM,EAAEjM,EACLC,EAAGgM,EAAEhM,GAGP3O,KAAKmG,QAAO,EAAMysC,KAIfrrB,CACT,CAWA6rB,kBAAAA,CAAmBz4B,EAAG63B,EAAYI,EAAQK,GACxC,MAAMhrC,EAAUjI,KAAKiI,QAErB,GAAe,aAAX0S,EAAEha,KACJ,MAAO,GAGT,IAAKsyC,EAGH,OAAOT,EAAWrmC,QAAO/J,GACvBpC,KAAKQ,MAAMqP,KAAKC,SAAS1N,EAAE6H,oBACiD3J,IAA5EN,KAAKQ,MAAMuP,eAAe3N,EAAE6H,cAAciB,WAAWsH,UAAUpQ,EAAEuH,SAKrE,MAAMzD,EAASlG,KAAKQ,MAAM4wC,0BAA0Bz2B,EAAG1S,EAAQ+B,KAAM/B,EAAS2qC,GAM9E,OAJI3qC,EAAQmB,SACVlD,EAAOkD,UAGFlD,CACT,CASAolD,gBAAAA,CAAiBplD,EAAQyU,GACvB,MAAM,OAACmtC,EAAA,OAAQC,EAAA,QAAQ9/C,GAAWjI,KAC5B+hB,EAAW8gC,GAAY56C,EAAQ8Z,UAAUtgB,KAAKzB,KAAMkG,EAAQyU,GAClE,OAAoB,IAAboH,IAAuB+lC,IAAW/lC,EAASrT,GAAKq5C,IAAWhmC,EAASpT,EAC7E,EAGF,IAAA68C,GAAe,CACb5/C,GAAI,UACJm2C,SAAUwF,GACV1E,eAEA4I,SAAAA,CAAUjrD,EAAOwhD,EAAO/5C,GAClBA,IACFzH,EAAMqjD,QAAU,IAAI0D,GAAQ,CAAC/mD,QAAOyH,YAExC,EAEA2sB,YAAAA,CAAap0B,EAAOwhD,EAAO/5C,GACrBzH,EAAMqjD,SACRrjD,EAAMqjD,QAAQ/1C,WAAW7F,EAE7B,EAEAiI,KAAAA,CAAM1P,EAAOwhD,EAAO/5C,GACdzH,EAAMqjD,SACRrjD,EAAMqjD,QAAQ/1C,WAAW7F,EAE7B,EAEAyjD,SAAAA,CAAUlrD,GACR,MAAMqjD,EAAUrjD,EAAMqjD,QAEtB,GAAIA,GAAWA,EAAQoH,cAAe,CACpC,MAAM5yC,EAAO,CACXwrC,WAGF,IAA8E,IAA1ErjD,EAAMq2B,cAAc,oBAAqB,IAAIxe,EAAMytB,YAAY,IACjE,OAGF+d,EAAQxhD,KAAK7B,EAAMsM,KAEnBtM,EAAMq2B,cAAc,mBAAoBxe,GAE5C,EAEA4pC,UAAAA,CAAWzhD,EAAO6X,GAChB,GAAI7X,EAAMqjD,QAAS,CAEjB,MAAMzhC,EAAmB/J,EAAKu6B,OAC1BpyC,EAAMqjD,QAAQrC,YAAYnpC,EAAKpV,MAAOmf,EAAkB/J,EAAK46B,eAE/D56B,EAAKkP,SAAU,GAGrB,EAEAjgB,SAAU,CACRwoB,SAAS,EACTg5B,SAAU,KACV/mC,SAAU,UACV5H,gBAAiB,kBACjBqvC,WAAY,OACZtI,UAAW,CACThiC,OAAQ,QAEV0lC,aAAc,EACdC,kBAAmB,EACnBpyB,WAAY,OACZw0B,UAAW,OACXlC,YAAa,EACbf,SAAU,CAAC,EAEXmG,UAAW,OACXQ,YAAa,OACb1F,cAAe,EACfD,gBAAiB,EACjBf,WAAY,CACV/kC,OAAQ,QAEVwrC,YAAa,OACb/iC,QAAS,EACT+9B,aAAc,EACdD,UAAW,EACXO,aAAc,EACd3I,UAAWA,CAACvwC,EAAK3D,IAASA,EAAK66C,SAASj7C,KACxCu0C,SAAUA,CAACxwC,EAAK3D,IAASA,EAAK66C,SAASj7C,KACvC+gD,mBAAoB,OACpBhF,eAAe,EACf5+B,WAAY,EACZ7L,YAAa,gBACbG,YAAa,EACbjT,UAAW,CACTxG,SAAU,IACVuE,OAAQ,gBAEVgD,WAAY,CACV0Q,QAAS,CACPrY,KAAM,SACNkH,WAAY,CAAC,IAAK,IAAK,QAAS,SAAU,SAAU,WAEtD2/C,QAAS,CACPliD,OAAQ,SACRvE,SAAU,MAGdH,UAAW2lD,IAGbjlB,cAAe,CACb0iB,SAAU,OACVC,WAAY,OACZ/C,UAAW,QAGb/e,YAAa,CACX7oB,YAAcC,GAAkB,WAATA,GAA8B,aAATA,GAAgC,aAATA,EACnEC,YAAY,EACZ5Y,UAAW,CACT0Y,aAAa,EACbE,YAAY,GAEdjS,UAAW,CACTokD,WAAW,GAEbrjD,WAAY,CACVqjD,UAAW,cAKfhiB,uBAAwB,CAAC,gBClzC3B,SAASiiB,GAAe15C,EAAQuD,EAAK9L,EAAOkiD,GAC1C,MAAM37B,EAAQhe,EAAO0Q,QAAQnN,GAC7B,IAAe,IAAXya,EACF,MAbgB47B,EAAC55C,EAAQuD,EAAK9L,EAAOkiD,KACpB,kBAARp2C,GACT9L,EAAQuI,EAAO/O,KAAKsS,GAAO,EAC3Bo2C,EAAYE,QAAQ,CAACpiD,QAAOoK,MAAO0B,KAC1BgJ,MAAMhJ,KACf9L,EAAQ,MAEHA,GAMEmiD,CAAY55C,EAAQuD,EAAK9L,EAAOkiD,GAGzC,OAAO37B,IADMhe,EAAO85C,YAAYv2C,GACR9L,EAAQumB,CAClC,CAIA,SAAS+7B,GAAkBnjD,GACzB,MAAMoJ,EAASlS,KAAKmS,YAEpB,OAAIrJ,GAAS,GAAKA,EAAQoJ,EAAOrQ,OACxBqQ,EAAOpJ,GAETA,CACT,CAEe,MAAMojD,WAAsBr5B,GAEzCjmB,UAAY,WAKZA,gBAAkB,CAChBoiB,MAAO,CACL6F,SAAUo3B,KAIdlsD,WAAAA,CAAY+E,GACVgW,MAAMhW,GAGN9E,KAAKmsD,iBAAc7rD,EACnBN,KAAKosD,YAAc,EACnBpsD,KAAKqsD,aAAe,EACtB,CAEAp4B,IAAAA,CAAKoT,GACH,MAAMilB,EAAQtsD,KAAKqsD,aACnB,GAAIC,EAAMzqD,OAAQ,CAChB,MAAMqQ,EAASlS,KAAKmS,YACpB,IAAK,MAAM,MAACxI,EAAA,MAAOoK,KAAUu4C,EACvBp6C,EAAOvI,KAAWoK,GACpB7B,EAAOiG,OAAOxO,EAAO,GAGzB3J,KAAKqsD,aAAe,GAEtBvxC,MAAMmZ,KAAKoT,EACb,CAEA51B,KAAAA,CAAMgE,EAAK9L,GACT,IAAI+W,EAAAA,EAAAA,GAAcjL,GAChB,OAAO,KAET,MAAMvD,EAASlS,KAAKmS,YAGpB,MAtDeyf,EAACjoB,EAAOlG,IAAkB,OAAVkG,EAAiB,MAAOkuB,EAAAA,EAAAA,GAAYz2B,KAAK4vB,MAAMrnB,GAAQ,EAAGlG,GAsDlFmuB,CAFPjoB,EAAQ4iD,SAAS5iD,IAAUuI,EAAOvI,KAAW8L,EAAM9L,EAC/CiiD,GAAe15C,EAAQuD,GAAK1G,EAAAA,EAAAA,GAAepF,EAAO8L,GAAMzV,KAAKqsD,cACxCn6C,EAAOrQ,OAAS,EAC3C,CAEAyzB,mBAAAA,GACE,MAAM,WAAC9hB,EAAA,WAAYC,GAAczT,KAAK0T,gBACtC,IAAI,IAACrS,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAEJ,UAAxB9S,KAAKiI,QAAQuzC,SACVhoC,IACHnS,EAAM,GAEHoS,IACHhQ,EAAMzD,KAAKmS,YAAYtQ,OAAS,IAIpC7B,KAAKqB,IAAMA,EACXrB,KAAKyD,IAAMA,CACb,CAEAiyB,UAAAA,GACE,MAAMr0B,EAAMrB,KAAKqB,IACXoC,EAAMzD,KAAKyD,IACXsb,EAAS/e,KAAKiI,QAAQ8W,OACtBiQ,EAAQ,GACd,IAAI9c,EAASlS,KAAKmS,YAGlBD,EAAkB,IAAT7Q,GAAcoC,IAAQyO,EAAOrQ,OAAS,EAAKqQ,EAASA,EAAO88B,MAAM3tC,EAAKoC,EAAM,GAErFzD,KAAKosD,YAAchrD,KAAKqC,IAAIyO,EAAOrQ,QAAUkd,EAAS,EAAI,GAAI,GAC9D/e,KAAKmsD,YAAcnsD,KAAKqB,KAAO0d,EAAS,GAAM,GAE9C,IAAK,IAAIjW,EAAQzH,EAAKyH,GAASrF,EAAKqF,IAClCkmB,EAAM7rB,KAAK,CAAC2F,UAEd,OAAOkmB,CACT,CAEAhb,gBAAAA,CAAiBlL,GACf,OAAOmjD,GAAkBxqD,KAAKzB,KAAM8I,EACtC,CAKA7B,SAAAA,GACE6T,MAAM7T,YAEDjH,KAAKooB,iBAERpoB,KAAKuhB,gBAAkBvhB,KAAKuhB,eAEhC,CAGAX,gBAAAA,CAAiB9X,GAKf,MAJqB,kBAAVA,IACTA,EAAQ9I,KAAKyR,MAAM3I,IAGJ,OAAVA,EAAiB+J,IAAM7S,KAAKs6B,oBAAoBxxB,EAAQ9I,KAAKmsD,aAAensD,KAAKosD,YAC1F,CAIAn6B,eAAAA,CAAgBtoB,GACd,MAAMqlB,EAAQhvB,KAAKgvB,MACnB,OAAIrlB,EAAQ,GAAKA,EAAQqlB,EAAMntB,OAAS,EAC/B,KAEF7B,KAAK4gB,iBAAiBoO,EAAMrlB,GAAOb,MAC5C,CAEAsxB,gBAAAA,CAAiBC,GACf,OAAOj5B,KAAK4vB,MAAMhxB,KAAKmsD,YAAcnsD,KAAK06B,mBAAmBL,GAASr6B,KAAKosD,YAC7E,CAEAtrC,YAAAA,GACE,OAAO9gB,KAAKuU,MACd,ECVF,SAASi4C,GAAkB1jD,EAAO2jD,EAAUC,GAA6B,IAA3B,WAAC9mC,EAAU,YAAEsR,GAAYw1B,EACrE,MAAMC,GAAMtxC,EAAAA,EAAAA,GAAU6b,GAChB01B,GAAShnC,EAAaxkB,KAAKsb,IAAIiwC,GAAOvrD,KAAKob,IAAImwC,KAAS,KACxD9qD,EAAS,IAAO4qD,GAAc,GAAK3jD,GAAOjH,OAChD,OAAOT,KAAKC,IAAIorD,EAAaG,EAAO/qD,EACtC,CAEe,MAAMgrD,WAAwBh6B,GAE3C9yB,WAAAA,CAAY+E,GACVgW,MAAMhW,GAGN9E,KAAKsB,WAAQhB,EAEbN,KAAKqJ,SAAM/I,EAEXN,KAAKmsD,iBAAc7rD,EAEnBN,KAAK8sD,eAAYxsD,EACjBN,KAAKosD,YAAc,CACrB,CAEA36C,KAAAA,CAAMgE,EAAK9L,GACT,OAAI+W,EAAAA,EAAAA,GAAcjL,KAGE,kBAARA,GAAoBA,aAAetC,UAAYo5C,UAAU92C,GAF5D,MAMDA,CACV,CAEAs3C,sBAAAA,GACE,MAAM,YAACh4B,GAAe/0B,KAAKiI,SACrB,WAACuL,EAAA,WAAYC,GAAczT,KAAK0T,gBACtC,IAAI,IAACrS,EAAG,IAAEoC,GAAOzD,KAEjB,MAAMgtD,EAASzoC,GAAMljB,EAAMmS,EAAanS,EAAMkjB,EACxC0oC,EAAS1oC,GAAM9gB,EAAMgQ,EAAahQ,EAAM8gB,EAE9C,GAAIwQ,EAAa,CACf,MAAMm4B,GAAU9iD,EAAAA,EAAAA,GAAK/I,GACf8rD,GAAU/iD,EAAAA,EAAAA,GAAK3G,GAEjBypD,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,GAIX,GAAI3rD,IAAQoC,EAAK,CACf,IAAIsb,EAAiB,IAARtb,EAAY,EAAIrC,KAAKsd,IAAU,IAANjb,GAEtCwpD,EAAOxpD,EAAMsb,GAERgW,GACHi4B,EAAO3rD,EAAM0d,GAGjB/e,KAAKqB,IAAMA,EACXrB,KAAKyD,IAAMA,CACb,CAEA2pD,YAAAA,GACE,MAAMn+B,EAAWjvB,KAAKiI,QAAQ+mB,MAE9B,IACIq+B,GADA,cAAC19B,EAAA,SAAe29B,GAAYr+B,EAkBhC,OAfIq+B,GACFD,EAAWjsD,KAAKkvB,KAAKtwB,KAAKyD,IAAM6pD,GAAYlsD,KAAKqE,MAAMzF,KAAKqB,IAAMisD,GAAY,EAC1ED,EAAW,MACbj/C,QAAQC,KAAK,UAAUrO,KAAK4L,sBAAsB0hD,mCAA0CD,8BAC5FA,EAAW,OAGbA,EAAWrtD,KAAKutD,mBAChB59B,EAAgBA,GAAiB,IAG/BA,IACF09B,EAAWjsD,KAAKC,IAAIsuB,EAAe09B,IAG9BA,CACT,CAKAE,gBAAAA,GACE,OAAOp6C,OAAOC,iBAChB,CAEAsiB,UAAAA,GACE,MAAMvsB,EAAOnJ,KAAKiI,QACZgnB,EAAW9lB,EAAK6lB,MAMtB,IAAIq+B,EAAWrtD,KAAKotD,eACpBC,EAAWjsD,KAAKqC,IAAI,EAAG4pD,GAEvB,MAcMr+B,EApPV,SAAuBw+B,EAAmBC,GACxC,MAAMz+B,EAAQ,IAMR,OAACwsB,EAAM,KAAEtf,EAAA,IAAM76B,EAAA,IAAKoC,EAAG,UAAEiqD,EAAA,MAAWh8C,EAAA,SAAO27C,EAAQ,UAAEM,EAAA,cAAWC,GAAiBJ,EACjFK,EAAO3xB,GAAQ,EACf4xB,EAAYT,EAAW,GACtBhsD,IAAK0sD,EAAMtqD,IAAKuqD,GAAQP,EACzBj6C,IAAckN,EAAAA,EAAAA,GAAcrf,GAC5BoS,IAAciN,EAAAA,EAAAA,GAAcjd,GAC5BwqD,IAAgBvtC,EAAAA,EAAAA,GAAchP,GAC9B+6C,GAAcuB,EAAOD,IAASJ,EAAY,GAChD,IACItpD,EAAQ6pD,EAASC,EAASC,EAD1B/0C,GAAUg1C,EAAAA,EAAAA,KAASL,EAAOD,GAAQD,EAAYD,GAAQA,EAK1D,GAAIx0C,EAdgB,QAcU7F,IAAeC,EAC3C,MAAO,CAAC,CAAC3K,MAAOilD,GAAO,CAACjlD,MAAOklD,IAGjCI,EAAYhtD,KAAKkvB,KAAK09B,EAAO30C,GAAWjY,KAAKqE,MAAMsoD,EAAO10C,GACtD+0C,EAAYN,IAEdz0C,GAAUg1C,EAAAA,EAAAA,IAAQD,EAAY/0C,EAAUy0C,EAAYD,GAAQA,IAGzDntC,EAAAA,EAAAA,GAAcgtC,KAEjBrpD,EAASjD,KAAK+hB,IAAI,GAAIuqC,GACtBr0C,EAAUjY,KAAKkvB,KAAKjX,EAAUhV,GAAUA,GAG3B,UAAXm3C,GACF0S,EAAU9sD,KAAKqE,MAAMsoD,EAAO10C,GAAWA,EACvC80C,EAAU/sD,KAAKkvB,KAAK09B,EAAO30C,GAAWA,IAEtC60C,EAAUH,EACVI,EAAUH,GAGRx6C,GAAcC,GAAcyoB,IAAQoyB,EAAAA,EAAAA,KAAa7qD,EAAMpC,GAAO66B,EAAM7iB,EAAU,MAKhF+0C,EAAYhtD,KAAK4vB,MAAM5vB,KAAKC,KAAKoC,EAAMpC,GAAOgY,EAASg0C,IACvDh0C,GAAW5V,EAAMpC,GAAO+sD,EACxBF,EAAU7sD,EACV8sD,EAAU1qD,GACDwqD,GAITC,EAAU16C,EAAanS,EAAM6sD,EAC7BC,EAAU16C,EAAahQ,EAAM0qD,EAC7BC,EAAY18C,EAAQ,EACpB2H,GAAW80C,EAAUD,GAAWE,IAGhCA,GAAaD,EAAUD,GAAW70C,EAIhC+0C,GADEG,EAAAA,EAAAA,IAAaH,EAAWhtD,KAAK4vB,MAAMo9B,GAAY/0C,EAAU,KAC/CjY,KAAK4vB,MAAMo9B,GAEXhtD,KAAKkvB,KAAK89B,IAM1B,MAAMI,EAAgBptD,KAAKqC,KACzBgrD,EAAAA,EAAAA,IAAep1C,IACfo1C,EAAAA,EAAAA,IAAeP,IAEjB7pD,EAASjD,KAAK+hB,IAAI,IAAIzC,EAAAA,EAAAA,GAAcgtC,GAAac,EAAgBd,GACjEQ,EAAU9sD,KAAK4vB,MAAMk9B,EAAU7pD,GAAUA,EACzC8pD,EAAU/sD,KAAK4vB,MAAMm9B,EAAU9pD,GAAUA,EAEzC,IAAI6d,EAAI,EAiBR,IAhBI1O,IACEo6C,GAAiBM,IAAY7sD,GAC/B2tB,EAAM7rB,KAAK,CAAC2F,MAAOzH,IAEf6sD,EAAU7sD,GACZ6gB,KAGEqsC,EAAAA,EAAAA,IAAantD,KAAK4vB,OAAOk9B,EAAUhsC,EAAI7I,GAAWhV,GAAUA,EAAQhD,EAAKmrD,GAAkBnrD,EAAKorD,EAAYe,KAC9GtrC,KAEOgsC,EAAU7sD,GACnB6gB,KAIGA,EAAIksC,IAAalsC,EAAG,CACzB,MAAMwsC,EAAYttD,KAAK4vB,OAAOk9B,EAAUhsC,EAAI7I,GAAWhV,GAAUA,EACjE,GAAIoP,GAAci7C,EAAYjrD,EAC5B,MAEFurB,EAAM7rB,KAAK,CAAC2F,MAAO4lD,GACrB,CAaA,OAXIj7C,GAAcm6C,GAAiBO,IAAY1qD,EAEzCurB,EAAMntB,SAAU0sD,EAAAA,EAAAA,IAAav/B,EAAMA,EAAMntB,OAAS,GAAGiH,MAAOrF,EAAK+oD,GAAkB/oD,EAAKgpD,EAAYe,IACtGx+B,EAAMA,EAAMntB,OAAS,GAAGiH,MAAQrF,EAEhCurB,EAAM7rB,KAAK,CAAC2F,MAAOrF,IAEXgQ,GAAc06C,IAAY1qD,GACpCurB,EAAM7rB,KAAK,CAAC2F,MAAOqlD,IAGdn/B,CACT,CA4HkB2/B,CAdkB,CAC9BtB,WACA7R,OAAQryC,EAAKqyC,OACbn6C,IAAK8H,EAAK9H,IACVoC,IAAK0F,EAAK1F,IACViqD,UAAWz+B,EAASy+B,UACpBxxB,KAAMjN,EAASq+B,SACf57C,MAAOud,EAASvd,MAChBi8C,UAAW3tD,KAAKsgC,aAChB1a,WAAY5lB,KAAKooB,eACjB8O,YAAajI,EAASiI,aAAe,EACrC02B,eAA0C,IAA3B3+B,EAAS2+B,eAER5tD,KAAKozB,QAAUpzB,MAmBjC,MAdoB,UAAhBmJ,EAAKqyC,SACPoT,EAAAA,EAAAA,IAAmB5/B,EAAOhvB,KAAM,SAG9BmJ,EAAKC,SACP4lB,EAAM5lB,UAENpJ,KAAKsB,MAAQtB,KAAKyD,IAClBzD,KAAKqJ,IAAMrJ,KAAKqB,MAEhBrB,KAAKsB,MAAQtB,KAAKqB,IAClBrB,KAAKqJ,IAAMrJ,KAAKyD,KAGXurB,CACT,CAKA/nB,SAAAA,GACE,MAAM+nB,EAAQhvB,KAAKgvB,MACnB,IAAI1tB,EAAQtB,KAAKqB,IACbgI,EAAMrJ,KAAKyD,IAIf,GAFAqX,MAAM7T,YAEFjH,KAAKiI,QAAQ8W,QAAUiQ,EAAMntB,OAAQ,CACvC,MAAMkd,GAAU1V,EAAM/H,GAASF,KAAKqC,IAAIurB,EAAMntB,OAAS,EAAG,GAAK,EAC/DP,GAASyd,EACT1V,GAAO0V,EAET/e,KAAKmsD,YAAc7qD,EACnBtB,KAAK8sD,UAAYzjD,EACjBrJ,KAAKosD,YAAc/iD,EAAM/H,CAC3B,CAEA0S,gBAAAA,CAAiBlL,GACf,OAAO6V,EAAAA,EAAAA,GAAa7V,EAAO9I,KAAKQ,MAAMyH,QAAQ2W,OAAQ5e,KAAKiI,QAAQ+mB,MAAM6/B,OAC3E,EClTa,MAAMC,WAAoBjC,GAEvCjgD,UAAY,SAKZA,gBAAkB,CAChBoiB,MAAO,CACL6F,SAAUk6B,EAAAA,GAAMC,WAAWC,UAK/B35B,mBAAAA,GACE,MAAM,IAACj0B,EAAG,IAAEoC,GAAOzD,KAAK8S,WAAU,GAElC9S,KAAKqB,KAAM8I,EAAAA,EAAAA,GAAS9I,GAAOA,EAAM,EACjCrB,KAAKyD,KAAM0G,EAAAA,EAAAA,GAAS1G,GAAOA,EAAM,EAGjCzD,KAAK+sD,wBACP,CAMAQ,gBAAAA,GACE,MAAM3nC,EAAa5lB,KAAKooB,eAClBvmB,EAAS+jB,EAAa5lB,KAAK8b,MAAQ9b,KAAK+b,OACxCmb,GAAc7b,EAAAA,EAAAA,GAAUrb,KAAKiI,QAAQ+mB,MAAMkI,aAC3C01B,GAAShnC,EAAaxkB,KAAKsb,IAAIwa,GAAe91B,KAAKob,IAAI0a,KAAiB,KACxEqC,EAAWv5B,KAAK45B,wBAAwB,GAC9C,OAAOx4B,KAAKkvB,KAAKzuB,EAAST,KAAKC,IAAI,GAAIk4B,EAAS/G,WAAao6B,GAC/D,CAGAhsC,gBAAAA,CAAiB9X,GACf,OAAiB,OAAVA,EAAiB+J,IAAM7S,KAAKs6B,oBAAoBxxB,EAAQ9I,KAAKmsD,aAAensD,KAAKosD,YAC1F,CAEAhyB,gBAAAA,CAAiBC,GACf,OAAOr6B,KAAKmsD,YAAcnsD,KAAK06B,mBAAmBL,GAASr6B,KAAKosD,WAClE,ECiCc2C,EAAAA,GAAMC,WAAWE,YC+RjBH,EAAAA,GAAMC,WAAWC,wBC3WjC,SAASj+B,EAAMzM,GACb,OAAOA,EAAI,GAAM,CACnB,y+BACA,MAAM4qC,EAAMA,CAAC5qC,EAAGnQ,EAAGwS,IAAMxlB,KAAKqC,IAAIrC,KAAKC,IAAIkjB,EAAGqC,GAAIxS,GAClD,SAASg7C,EAAI7qC,GACX,OAAO4qC,EAAIn+B,EAAU,KAAJzM,GAAW,EAAG,IACjC,CAIA,SAAS8qC,EAAI9qC,GACX,OAAO4qC,EAAIn+B,EAAU,IAAJzM,GAAU,EAAG,IAChC,CACA,SAAS+qC,EAAI/qC,GACX,OAAO4qC,EAAIn+B,EAAMzM,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASgrC,EAAIhrC,GACX,OAAO4qC,EAAIn+B,EAAU,IAAJzM,GAAU,EAAG,IAChC,CAEA,MAAMirC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAI/yC,EAAG,GAAI5I,EAAG,GAAI03B,EAAG,GAAI5D,EAAG,GAAIttB,EAAG,GAAIo1C,EAAG,IACrJC,EAAM,IAAI,oBACVC,EAAK97C,GAAK67C,EAAQ,GAAJ77C,GACd+7C,EAAK/7C,GAAK67C,GAAS,IAAJ77C,IAAa,GAAK67C,EAAQ,GAAJ77C,GACrCg8C,EAAKh8C,IAAW,IAAJA,IAAa,KAAY,GAAJA,GAyBvC,SAASxP,EAAU4f,GACjB,IAAIwrC,EAzBUxrC,IAAK4rC,EAAG5rC,EAAE3V,IAAMuhD,EAAG5rC,EAAE6rC,IAAMD,EAAG5rC,EAAEpQ,IAAMg8C,EAAG5rC,EAAExH,GAyBjDszC,CAAQ9rC,GAAK0rC,EAAKC,EAC1B,OAAO3rC,EACH,IAAMwrC,EAAExrC,EAAE3V,GAAKmhD,EAAExrC,EAAE6rC,GAAKL,EAAExrC,EAAEpQ,GAJpB4gC,EAACh4B,EAAGgzC,IAAMhzC,EAAI,IAAMgzC,EAAEhzC,GAAK,GAIFg4B,CAAMxwB,EAAExH,EAAGgzC,QAC5CzvD,CACN,CAEA,MAAMgwD,EAAS,+GACf,SAASC,EAAS3pC,EAAG4pC,EAAGp8C,GACtB,MAAM2I,EAAIyzC,EAAIpvD,KAAKC,IAAI+S,EAAG,EAAIA,GACxB27C,EAAI,SAACU,GAAC,IAAEC,EAAC9uD,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAAI6uD,EAAI7pC,EAAI,IAAM,GAAE,OAAKxS,EAAI2I,EAAI3b,KAAKqC,IAAIrC,KAAKC,IAAIqvD,EAAI,EAAG,EAAIA,EAAG,IAAK,EAAE,EACvF,MAAO,CAACX,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASY,EAAS/pC,EAAG4pC,EAAGjsC,GACtB,MAAMwrC,EAAI,SAACU,GAAC,IAAEC,EAAC9uD,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAAI6uD,EAAI7pC,EAAI,IAAM,EAAC,OAAKrC,EAAIA,EAAIisC,EAAIpvD,KAAKqC,IAAIrC,KAAKC,IAAIqvD,EAAG,EAAIA,EAAG,GAAI,EAAE,EACrF,MAAO,CAACX,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASa,EAAShqC,EAAGF,EAAGvS,GACtB,MAAM08C,EAAMN,EAAS3pC,EAAG,EAAG,IAC3B,IAAIxkB,EAMJ,IALIskB,EAAIvS,EAAI,IACV/R,EAAI,GAAKskB,EAAIvS,GACbuS,GAAKtkB,EACL+R,GAAK/R,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjByuD,EAAIzuD,IAAM,EAAIskB,EAAIvS,EAClB08C,EAAIzuD,IAAMskB,EAEZ,OAAOmqC,CACT,CAUA,SAASC,EAAQvsC,GACf,MACM3V,EAAI2V,EAAE3V,EADE,IAERwhD,EAAI7rC,EAAE6rC,EAFE,IAGRj8C,EAAIoQ,EAAEpQ,EAHE,IAIR1Q,EAAMrC,KAAKqC,IAAImL,EAAGwhD,EAAGj8C,GACrB9S,EAAMD,KAAKC,IAAIuN,EAAGwhD,EAAGj8C,GACrBC,GAAK3Q,EAAMpC,GAAO,EACxB,IAAIulB,EAAG4pC,EAAGvoB,EAOV,OANIxkC,IAAQpC,IACV4mC,EAAIxkC,EAAMpC,EACVmvD,EAAIp8C,EAAI,GAAM6zB,GAAK,EAAIxkC,EAAMpC,GAAO4mC,GAAKxkC,EAAMpC,GAC/CulB,EArBJ,SAAkBhY,EAAGwhD,EAAGj8C,EAAG8zB,EAAGxkC,GAC5B,OAAImL,IAAMnL,GACC2sD,EAAIj8C,GAAK8zB,GAAMmoB,EAAIj8C,EAAI,EAAI,GAElCi8C,IAAM3sD,GACA0Q,EAAIvF,GAAKq5B,EAAI,GAEfr5B,EAAIwhD,GAAKnoB,EAAI,CACvB,CAaQ8oB,CAASniD,EAAGwhD,EAAGj8C,EAAG8zB,EAAGxkC,GACzBmjB,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAO4pC,GAAK,EAAGp8C,EACzB,CACA,SAAS48C,EAAMjB,EAAGhzC,EAAG5I,EAAG03B,GACtB,OACEp7B,MAAM7I,QAAQmV,GACVgzC,EAAEhzC,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChBgzC,EAAEhzC,EAAG5I,EAAG03B,IACZ9xB,IAAIs1C,EACR,CACA,SAAS4B,EAAQrqC,EAAG4pC,EAAGp8C,GACrB,OAAO48C,EAAMT,EAAU3pC,EAAG4pC,EAAGp8C,EAC/B,CAOA,SAAS88C,EAAItqC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASuqC,EAAS3N,GAChB,MAAM4N,EAAId,EAAOe,KAAK7N,GACtB,IACIj/B,EADAxH,EAAI,IAER,IAAKq0C,EACH,OAEEA,EAAE,KAAO7sC,IACXxH,EAAIq0C,EAAE,GAAKhC,GAAKgC,EAAE,IAAM/B,GAAK+B,EAAE,KAEjC,MAAMxqC,EAAIsqC,GAAKE,EAAE,IACXxyB,GAAMwyB,EAAE,GAAK,IACbvyB,GAAMuyB,EAAE,GAAK,IAQnB,OANE7sC,EADW,QAAT6sC,EAAE,GAtBR,SAAiBxqC,EAAGF,EAAGvS,GACrB,OAAO68C,EAAMJ,EAAUhqC,EAAGF,EAAGvS,EAC/B,CAqBQm9C,CAAQ1qC,EAAGgY,EAAIC,GACD,QAATuyB,EAAE,GArBf,SAAiBxqC,EAAG4pC,EAAGjsC,GACrB,OAAOysC,EAAML,EAAU/pC,EAAG4pC,EAAGjsC,EAC/B,CAoBQgtC,CAAQ3qC,EAAGgY,EAAIC,GAEfoyB,EAAQrqC,EAAGgY,EAAIC,GAEd,CACLjwB,EAAG2V,EAAE,GACL6rC,EAAG7rC,EAAE,GACLpQ,EAAGoQ,EAAE,GACLxH,EAAGA,EAEP,CAsBA,MAAMhD,EAAM,CACVrL,EAAG,OACH8iD,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHpC,EAAG,KACHqC,EAAG,KACHC,EAAG,KACHrC,EAAG,KACHC,EAAG,QACHC,EAAG,QACHoC,EAAG,KACHC,EAAG,WACHpC,EAAG,KACHqC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACHxC,EAAG,KACHyC,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,EAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAmBT,IAAI5lD,EACJ,SAAS6lD,EAAUzY,GACZptC,IACHA,EApBJ,WACE,MAAM8lD,EAAW,CAAC,EACZ70D,EAAOD,OAAOC,KAAKurD,GACnBuJ,EAAQ/0D,OAAOC,KAAK0S,GAC1B,IAAI3X,EAAG8f,EAAGwuC,EAAG0L,EAAIC,EACjB,IAAKj6D,EAAI,EAAGA,EAAIiF,EAAKxF,OAAQO,IAAK,CAEhC,IADAg6D,EAAKC,EAAKh1D,EAAKjF,GACV8f,EAAI,EAAGA,EAAIi6C,EAAMt6D,OAAQqgB,IAC5BwuC,EAAIyL,EAAMj6C,GACVm6C,EAAKA,EAAGC,QAAQ5L,EAAG32C,EAAI22C,IAEzBA,EAAI6L,SAAS3J,EAAQwJ,GAAK,IAC1BF,EAASG,GAAM,CAAC3L,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOwL,CACT,CAKYM,GACRpmD,EAAMpS,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAM+Y,EAAI3G,EAAMotC,EAAIjc,eACpB,OAAOxqB,GAAK,CACVnO,EAAGmO,EAAE,GACLqzC,EAAGrzC,EAAE,GACL5I,EAAG4I,EAAE,GACLA,EAAgB,IAAbA,EAAElb,OAAekb,EAAE,GAAK,IAE/B,CAEA,MAAM0/C,EAAS,uGAiCf,MAAMr4D,EAAKmgB,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzBnjB,KAAK+hB,IAAIoB,EAAG,EAAM,KAAe,KACxEpgB,EAAOogB,GAAKA,GAAK,OAAUA,EAAI,MAAQnjB,KAAK+hB,KAAKoB,EAAI,MAAS,MAAO,KAa3E,SAASm4C,EAAOn4C,EAAGniB,EAAGwqD,GACpB,GAAIroC,EAAG,CACL,IAAIo4C,EAAM7L,EAAQvsC,GAClBo4C,EAAIv6D,GAAKhB,KAAKqC,IAAI,EAAGrC,KAAKC,IAAIs7D,EAAIv6D,GAAKu6D,EAAIv6D,GAAKwqD,EAAa,IAANxqD,EAAU,IAAM,IACvEu6D,EAAM1L,EAAQ0L,GACdp4C,EAAE3V,EAAI+tD,EAAI,GACVp4C,EAAE6rC,EAAIuM,EAAI,GACVp4C,EAAEpQ,EAAIwoD,EAAI,EACZ,CACF,CACA,SAASC,EAAMr4C,EAAGwc,GAChB,OAAOxc,EAAInd,OAAOe,OAAO44B,GAAS,CAAC,EAAGxc,GAAKA,CAC7C,CACA,SAASs4C,EAAWC,GAClB,IAAIv4C,EAAI,CAAC3V,EAAG,EAAGwhD,EAAG,EAAGj8C,EAAG,EAAG4I,EAAG,KAY9B,OAXItM,MAAM7I,QAAQk1D,GACZA,EAAMj7D,QAAU,IAClB0iB,EAAI,CAAC3V,EAAGkuD,EAAM,GAAI1M,EAAG0M,EAAM,GAAI3oD,EAAG2oD,EAAM,GAAI//C,EAAG,KAC3C+/C,EAAMj7D,OAAS,IACjB0iB,EAAExH,EAAIsyC,EAAIyN,EAAM,OAIpBv4C,EAAIq4C,EAAME,EAAO,CAACluD,EAAG,EAAGwhD,EAAG,EAAGj8C,EAAG,EAAG4I,EAAG,KACrCA,EAAIsyC,EAAI9qC,EAAExH,GAEPwH,CACT,CACA,SAASw4C,EAAcvZ,GACrB,MAAsB,MAAlBA,EAAI36C,OAAO,GA3EjB,SAAkB26C,GAChB,MAAM4N,EAAIqL,EAAOpL,KAAK7N,GACtB,IACI50C,EAAGwhD,EAAGj8C,EADN4I,EAAI,IAER,GAAKq0C,EAAL,CAGA,GAAIA,EAAE,KAAOxiD,EAAG,CACd,MAAM2V,GAAK6sC,EAAE,GACbr0C,EAAIq0C,EAAE,GAAKhC,EAAI7qC,GAAK4qC,EAAQ,IAAJ5qC,EAAS,EAAG,IACtC,CAOA,OANA3V,GAAKwiD,EAAE,GACPhB,GAAKgB,EAAE,GACPj9C,GAAKi9C,EAAE,GACPxiD,EAAI,KAAOwiD,EAAE,GAAKhC,EAAIxgD,GAAKugD,EAAIvgD,EAAG,EAAG,MACrCwhD,EAAI,KAAOgB,EAAE,GAAKhC,EAAIgB,GAAKjB,EAAIiB,EAAG,EAAG,MACrCj8C,EAAI,KAAOi9C,EAAE,GAAKhC,EAAIj7C,GAAKg7C,EAAIh7C,EAAG,EAAG,MAC9B,CACLvF,EAAGA,EACHwhD,EAAGA,EACHj8C,EAAGA,EACH4I,EAAGA,EAfL,CAiBF,CAqDWigD,CAASxZ,GAEX2N,EAAS3N,EAClB,CACA,MAAMyZ,EACJl9D,WAAAA,CAAY+8D,GACV,GAAIA,aAAiBG,EACnB,OAAOH,EAET,MAAMn8D,SAAcm8D,EACpB,IAAIv4C,EACS,WAAT5jB,EACF4jB,EAAIs4C,EAAWC,GACG,WAATn8D,IACT4jB,EAjcN,SAAkBi/B,GAChB,IACI10B,EADA2B,EAAM+yB,EAAI3hD,OAmBd,MAjBe,MAAX2hD,EAAI,KACM,IAAR/yB,GAAqB,IAARA,EACf3B,EAAM,CACJlgB,EAAG,IAAsB,GAAhB4gD,EAAMhM,EAAI,IACnB4M,EAAG,IAAsB,GAAhBZ,EAAMhM,EAAI,IACnBrvC,EAAG,IAAsB,GAAhBq7C,EAAMhM,EAAI,IACnBzmC,EAAW,IAAR0T,EAA4B,GAAhB++B,EAAMhM,EAAI,IAAW,KAErB,IAAR/yB,GAAqB,IAARA,IACtB3B,EAAM,CACJlgB,EAAG4gD,EAAMhM,EAAI,KAAO,EAAIgM,EAAMhM,EAAI,IAClC4M,EAAGZ,EAAMhM,EAAI,KAAO,EAAIgM,EAAMhM,EAAI,IAClCrvC,EAAGq7C,EAAMhM,EAAI,KAAO,EAAIgM,EAAMhM,EAAI,IAClCzmC,EAAW,IAAR0T,EAAa++B,EAAMhM,EAAI,KAAO,EAAIgM,EAAMhM,EAAI,IAAO,OAIrD10B,CACT,CA4aUouC,CAASJ,IAAUb,EAAUa,IAAUC,EAAcD,IAE3D98D,KAAKm9D,KAAO54C,EACZvkB,KAAKo9D,SAAW74C,CAClB,CACA,SAAI9f,GACF,OAAOzE,KAAKo9D,MACd,CACA,OAAIvM,GACF,IAAItsC,EAAIq4C,EAAM58D,KAAKm9D,MAInB,OAHI54C,IACFA,EAAExH,EAAIuyC,EAAI/qC,EAAExH,IAEPwH,CACT,CACA,OAAIssC,CAAI5nB,GACNjpC,KAAKm9D,KAAON,EAAW5zB,EACzB,CACAo0B,SAAAA,GACE,OAAOr9D,KAAKo9D,QArFG74C,EAqFgBvkB,KAAKm9D,QAnFpC54C,EAAExH,EAAI,IACF,QAAQwH,EAAE3V,MAAM2V,EAAE6rC,MAAM7rC,EAAEpQ,MAAMm7C,EAAI/qC,EAAExH,MACtC,OAAOwH,EAAE3V,MAAM2V,EAAE6rC,MAAM7rC,EAAEpQ,WAiFe7T,EArFhD,IAAmBikB,CAsFjB,CACA5f,SAAAA,GACE,OAAO3E,KAAKo9D,OAASz4D,EAAU3E,KAAKm9D,WAAQ78D,CAC9C,CACAg9D,SAAAA,GACE,OAAOt9D,KAAKo9D,OApVhB,SAAmB74C,GACjB,IAAKA,EACH,OAEF,MAAMxH,EAAI+zC,EAAQvsC,GACZqC,EAAI7J,EAAE,GACNyzC,EAAIjB,EAAIxyC,EAAE,IACV3I,EAAIm7C,EAAIxyC,EAAE,IAChB,OAAOwH,EAAExH,EAAI,IACT,QAAQ6J,MAAM4pC,OAAOp8C,OAAOk7C,EAAI/qC,EAAExH,MAClC,OAAO6J,MAAM4pC,OAAOp8C,KAC1B,CAyUyBkpD,CAAUt9D,KAAKm9D,WAAQ78D,CAC9C,CACAoE,GAAAA,CAAIJ,EAAO4a,GACT,GAAI5a,EAAO,CACT,MAAME,EAAKxE,KAAK6wD,IACV0M,EAAKj5D,EAAMusD,IACjB,IAAI2M,EACJ,MAAM1yB,EAAI5rB,IAAWs+C,EAAK,GAAMt+C,EAC1BwH,EAAI,EAAIokB,EAAI,EACZ/tB,EAAIvY,EAAGuY,EAAIwgD,EAAGxgD,EACd0gD,IAAO/2C,EAAI3J,KAAO,EAAI2J,GAAKA,EAAI3J,IAAM,EAAI2J,EAAI3J,IAAM,GAAK,EAC9DygD,EAAK,EAAIC,EACTj5D,EAAGoK,EAAI,IAAO6uD,EAAKj5D,EAAGoK,EAAI4uD,EAAKD,EAAG3uD,EAAI,GACtCpK,EAAG4rD,EAAI,IAAOqN,EAAKj5D,EAAG4rD,EAAIoN,EAAKD,EAAGnN,EAAI,GACtC5rD,EAAG2P,EAAI,IAAOspD,EAAKj5D,EAAG2P,EAAIqpD,EAAKD,EAAGppD,EAAI,GACtC3P,EAAGuY,EAAI+tB,EAAItmC,EAAGuY,GAAK,EAAI+tB,GAAKyyB,EAAGxgD,EAC/B/c,KAAK6wD,IAAMrsD,CACb,CACA,OAAOxE,IACT,CACAi6C,WAAAA,CAAY31C,EAAO4P,GAIjB,OAHI5P,IACFtE,KAAKm9D,KAvGX,SAAqBO,EAAMC,EAAMzpD,GAC/B,MAAMtF,EAAIzK,EAAKmrD,EAAIoO,EAAK9uD,IAClBwhD,EAAIjsD,EAAKmrD,EAAIoO,EAAKtN,IAClBj8C,EAAIhQ,EAAKmrD,EAAIoO,EAAKvpD,IACxB,MAAO,CACLvF,EAAGygD,EAAIjrD,EAAGwK,EAAIsF,GAAK/P,EAAKmrD,EAAIqO,EAAK/uD,IAAMA,KACvCwhD,EAAGf,EAAIjrD,EAAGgsD,EAAIl8C,GAAK/P,EAAKmrD,EAAIqO,EAAKvN,IAAMA,KACvCj8C,EAAGk7C,EAAIjrD,EAAG+P,EAAID,GAAK/P,EAAKmrD,EAAIqO,EAAKxpD,IAAMA,KACvC4I,EAAG2gD,EAAK3gD,EAAI7I,GAAKypD,EAAK5gD,EAAI2gD,EAAK3gD,GAEnC,CA6FkBk9B,CAAYj6C,KAAKm9D,KAAM74D,EAAM64D,KAAMjpD,IAE1ClU,IACT,CACA48D,KAAAA,GACE,OAAO,IAAIK,EAAMj9D,KAAK6wD,IACxB,CACA9b,KAAAA,CAAMh4B,GAEJ,OADA/c,KAAKm9D,KAAKpgD,EAAIsyC,EAAItyC,GACX/c,IACT,CACA49D,OAAAA,CAAQhR,GAGN,OAFY5sD,KAAKm9D,KACbpgD,GAAK,EAAI6vC,EACN5sD,IACT,CACA69D,SAAAA,GACE,MAAMhN,EAAM7wD,KAAKm9D,KACXjpB,EAAMljB,EAAc,GAAR6/B,EAAIjiD,EAAkB,IAARiiD,EAAIT,EAAmB,IAARS,EAAI18C,GAEnD,OADA08C,EAAIjiD,EAAIiiD,EAAIT,EAAIS,EAAI18C,EAAI+/B,EACjBl0C,IACT,CACA89D,OAAAA,CAAQlR,GAGN,OAFY5sD,KAAKm9D,KACbpgD,GAAK,EAAI6vC,EACN5sD,IACT,CACA+9D,MAAAA,GACE,MAAMx5C,EAAIvkB,KAAKm9D,KAIf,OAHA54C,EAAE3V,EAAI,IAAM2V,EAAE3V,EACd2V,EAAE6rC,EAAI,IAAM7rC,EAAE6rC,EACd7rC,EAAEpQ,EAAI,IAAMoQ,EAAEpQ,EACPnU,IACT,CACAg+D,OAAAA,CAAQpR,GAEN,OADA8P,EAAO18D,KAAKm9D,KAAM,EAAGvQ,GACd5sD,IACT,CACAi+D,MAAAA,CAAOrR,GAEL,OADA8P,EAAO18D,KAAKm9D,KAAM,GAAIvQ,GACf5sD,IACT,CACAk+D,QAAAA,CAAStR,GAEP,OADA8P,EAAO18D,KAAKm9D,KAAM,EAAGvQ,GACd5sD,IACT,CACAm+D,UAAAA,CAAWvR,GAET,OADA8P,EAAO18D,KAAKm9D,KAAM,GAAIvQ,GACf5sD,IACT,CACAo+D,MAAAA,CAAOC,GAEL,OAtaJ,SAAgB95C,EAAG85C,GACjB,IAAIz3C,EAAIkqC,EAAQvsC,GAChBqC,EAAE,GAAKsqC,EAAItqC,EAAE,GAAKy3C,GAClBz3C,EAAIqqC,EAAQrqC,GACZrC,EAAE3V,EAAIgY,EAAE,GACRrC,EAAE6rC,EAAIxpC,EAAE,GACRrC,EAAEpQ,EAAIyS,EAAE,EACV,CA8ZIw3C,CAAOp+D,KAAKm9D,KAAMkB,GACXr+D,IACT,EC3jBK,SAASymD,IACJ,CAML,MAAMha,EAAO,MAClB,IAAI7gC,EAAK,EACT,MAAO,IAAMA,GACd,EAHmB,GAUb,SAAS8U,EAAc5X,GAC5B,OAAiB,OAAVA,GAAmC,qBAAVA,CAClC,CAOO,SAASlB,EAAqBkB,GACnC,GAAI2H,MAAM7I,SAAW6I,MAAM7I,QAAQkB,GACjC,OAAO,EAET,MAAMnI,EAAOyG,OAAOg5B,UAAUk+B,SAAS78D,KAAKqH,GAC5C,MAAyB,YAArBnI,EAAKquC,MAAM,EAAG,IAAuC,WAAnBruC,EAAKquC,OAAO,EAIpD,CAOO,SAAS9nC,EAAS4B,GACvB,OAAiB,OAAVA,GAA4D,oBAA1C1B,OAAOg5B,UAAUk+B,SAAS78D,KAAKqH,EAC1D,CAMA,SAASqB,EAAerB,GACtB,OAAyB,kBAAVA,GAAsBA,aAAiBqK,SAAWo5C,UAAUzjD,EAC7E,CAUO,SAASurB,EAAgBvrB,EAAgBy1D,GAC9C,OAAOp0D,EAAerB,GAASA,EAAQy1D,CACzC,CAOO,SAASxvD,EAAkBjG,EAAsBy1D,GACtD,MAAwB,qBAAVz1D,EAAwBy1D,EAAez1D,CACvD,OAEakT,EAAeA,CAAClT,EAAwB01D,IAClC,kBAAV11D,GAAsBA,EAAM21D,SAAS,KAC1CC,WAAW51D,GAAS,KACjBA,EAAQ01D,EAEF5gD,EAAcA,CAAC9U,EAAwB01D,IACjC,kBAAV11D,GAAsBA,EAAM21D,SAAS,KAC1CC,WAAW51D,GAAS,IAAM01D,GACvB11D,EASA,SAAS+rB,EACd5zB,EACAoX,EACAsmD,GAEA,GAAI19D,GAAyB,oBAAZA,EAAGQ,KAClB,OAAOR,EAAGqiD,MAAMqb,EAAStmD,EAE7B,CAuBO,SAAS0Q,EACd61C,EACA39D,EACA09D,EACAv1D,GAEA,IAAIhH,EAAWquB,EAAappB,EAC5B,GAAIO,EAAQg3D,GAEV,GADAnuC,EAAMmuC,EAAS/8D,OACXuH,EACF,IAAKhH,EAAIquB,EAAM,EAAGruB,GAAK,EAAGA,IACxBnB,EAAGQ,KAAKk9D,EAASC,EAASx8D,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIquB,EAAKruB,IACnBnB,EAAGQ,KAAKk9D,EAASC,EAASx8D,GAAIA,QAG7B,GAAI8E,EAAS03D,GAGlB,IAFAv3D,EAAOD,OAAOC,KAAKu3D,GACnBnuC,EAAMppB,EAAKxF,OACNO,EAAI,EAAGA,EAAIquB,EAAKruB,IACnBnB,EAAGQ,KAAKk9D,EAASC,EAASv3D,EAAKjF,IAAKiF,EAAKjF,GAG/C,CAQO,SAASswC,EAAemsB,EAAuBC,GACpD,IAAI18D,EAAWsH,EAAcmb,EAAqBC,EAElD,IAAK+5C,IAAOC,GAAMD,EAAGh9D,SAAWi9D,EAAGj9D,OACjC,OAAO,EAGT,IAAKO,EAAI,EAAGsH,EAAOm1D,EAAGh9D,OAAQO,EAAIsH,IAAQtH,EAIxC,GAHAyiB,EAAKg6C,EAAGz8D,GACR0iB,EAAKg6C,EAAG18D,GAEJyiB,EAAG5a,eAAiB6a,EAAG7a,cAAgB4a,EAAGlb,QAAUmb,EAAGnb,MACzD,OAAO,EAIX,OAAO,CACT,CAMO,SAASizD,EAAS3mC,GACvB,GAAIruB,EAAQquB,GACV,OAAOA,EAAOlc,IAAI6iD,GAGpB,GAAI11D,EAAS+uB,GAAS,CACpB,MAAMlxB,EAASqC,OAAOu5B,OAAO,MACvBt5B,EAAOD,OAAOC,KAAK4uB,GACnB8oC,EAAO13D,EAAKxF,OAClB,IAAI6uD,EAAI,EAER,KAAOA,EAAIqO,IAAQrO,EACjB3rD,EAAOsC,EAAKqpD,IAAMkM,EAAM3mC,EAAO5uB,EAAKqpD,KAGtC,OAAO3rD,EAGT,OAAOkxB,CACT,CAEA,SAAS+oC,EAAWt3D,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAekb,QAAQlb,EAC3D,CAOO,SAASu3D,EAAQv3D,EAAa3C,EAAmBkxB,EAAmBhuB,GACzE,IAAK+2D,EAAWt3D,GACd,OAGF,MAAMw3D,EAAOn6D,EAAO2C,GACdy3D,EAAOlpC,EAAOvuB,GAEhBR,EAASg4D,IAASh4D,EAASi4D,GAE7B99B,EAAM69B,EAAMC,EAAMl3D,GAElBlD,EAAO2C,GAAOk1D,EAAMuC,EAExB,CA0BO,SAAS99B,EAASt8B,EAAWkxB,EAAqBhuB,GACvD,MAAMm3D,EAAUx3D,EAAQquB,GAAUA,EAAS,CAACA,GACtCvsB,EAAO01D,EAAQv9D,OAErB,IAAKqF,EAASnC,GACZ,OAAOA,EAIT,MAAMs6D,GADNp3D,EAAUA,GAAW,CAAC,GACCo3D,QAAUJ,EACjC,IAAIK,EAEJ,IAAK,IAAIl9D,EAAI,EAAGA,EAAIsH,IAAQtH,EAAG,CAE7B,GADAk9D,EAAUF,EAAQh9D,IACb8E,EAASo4D,GACZ,SAGF,MAAMj4D,EAAOD,OAAOC,KAAKi4D,GACzB,IAAK,IAAI5O,EAAI,EAAGqO,EAAO13D,EAAKxF,OAAQ6uD,EAAIqO,IAAQrO,EAC9C2O,EAAOh4D,EAAKqpD,GAAI3rD,EAAQu6D,EAASr3D,EAErC,CAEA,OAAOlD,CACT,CAgBO,SAASujC,EAAWvjC,EAAWkxB,GAEpC,OAAOoL,EAASt8B,EAAQkxB,EAAQ,CAACopC,OAAQE,IAC3C,CAMO,SAASA,GAAU73D,EAAa3C,EAAmBkxB,GACxD,IAAK+oC,EAAWt3D,GACd,OAGF,MAAMw3D,EAAOn6D,EAAO2C,GACdy3D,EAAOlpC,EAAOvuB,GAEhBR,EAASg4D,IAASh4D,EAASi4D,GAC7B72B,EAAQ42B,EAAMC,GACJ/3D,OAAOg5B,UAAUo/B,eAAe/9D,KAAKsD,EAAQ2C,KACvD3C,EAAO2C,GAAOk1D,EAAMuC,GAExB,CAaA,MAAMM,GAAe,CAEnB,GAAIl7C,GAAKA,EAET7V,EAAGklC,GAAKA,EAAEllC,EACVC,EAAGilC,GAAKA,EAAEjlC,GAqCL,SAAS4D,GAAiB02B,EAAgBvhC,GAC/C,MAAMuiC,EAAWw1B,GAAa/3D,KAAS+3D,GAAa/3D,GAhBtD,SAAyBA,GACvB,MAAML,EAjBD,SAAmBK,GACxB,MAAMo6B,EAAQp6B,EAAIg6B,MAAM,KAClBr6B,EAAiB,GACvB,IAAIs1D,EAAM,GACV,IAAK,MAAM+C,KAAQ59B,EACjB66B,GAAO+C,EACH/C,EAAI8B,SAAS,MACf9B,EAAMA,EAAI3tB,MAAM,GAAI,GAAK,KAEzB3nC,EAAKlE,KAAKw5D,GACVA,EAAM,IAGV,OAAOt1D,CACT,CAGes4D,CAAUj4D,GACvB,OAAOuhC,IACL,IAAK,MAAMynB,KAAKrpD,EAAM,CACpB,GAAU,KAANqpD,EAGF,MAEFznB,EAAMA,GAAOA,EAAIynB,EACnB,CACA,OAAOznB,CAAA,CAEX,CAG6D22B,CAAgBl4D,IAC3E,OAAOuiC,EAAShB,EAClB,CAKO,SAAS5D,GAAYme,GAC1B,OAAOA,EAAI36C,OAAO,GAAGg3D,cAAgBrc,EAAIxU,MAAM,EACjD,OAGa/4B,GAAWnN,GAAoC,qBAAVA,EAErCwhC,GAAcxhC,GAAsE,oBAAVA,EAG1EunC,GAAYA,CAAItzB,EAAW5I,KACtC,GAAI4I,EAAEhU,OAASoL,EAAEpL,KACf,OAAO,EAGT,IAAK,MAAM5G,KAAQ4a,EACjB,IAAK5I,EAAE9Q,IAAIlB,GACT,OAAO,EAIX,OAAO,CAAI,EAON,SAASmxC,GAAc34B,GAC5B,MAAkB,YAAXA,EAAEha,MAAiC,UAAXga,EAAEha,MAA+B,gBAAXga,EAAEha,IACzD,CCvZO,MAAM2c,GAAKlc,KAAKkc,GACV9B,GAAM,EAAI8B,GACVwiD,GAAQtkD,GAAM8B,GACdyiD,GAAW5sD,OAAOC,kBAClB4sD,GAAc1iD,GAAK,IACnBF,GAAUE,GAAK,EACf2iD,GAAa3iD,GAAK,EAClB4iD,GAAqB,EAAL5iD,GAAS,EAEzB6iD,GAAQ/+D,KAAK++D,MACb/1D,GAAOhJ,KAAKgJ,KAElB,SAASmkD,GAAa7/C,EAAWC,EAAWojB,GACjD,OAAO3wB,KAAKsd,IAAIhQ,EAAIC,GAAKojB,CAC3B,CAKO,SAASs8B,GAAQ17C,GACtB,MAAMytD,EAAeh/D,KAAK4vB,MAAMre,GAChCA,EAAQ47C,GAAa57C,EAAOytD,EAAcztD,EAAQ,KAAQytD,EAAeztD,EACzE,MAAM0tD,EAAYj/D,KAAK+hB,IAAI,GAAI/hB,KAAKqE,MAAM06D,GAAMxtD,KAC1C2tD,EAAW3tD,EAAQ0tD,EAEzB,OADqBC,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DD,CACxB,CAMO,SAASxvC,GAAW/nB,GACzB,MAAMinB,EAAmB,GACnB7M,EAAO9hB,KAAK8hB,KAAKpa,GACvB,IAAI1G,EAEJ,IAAKA,EAAI,EAAGA,EAAI8gB,EAAM9gB,IAChB0G,EAAQ1G,IAAM,IAChB2tB,EAAO5sB,KAAKf,GACZ2tB,EAAO5sB,KAAK2F,EAAQ1G,IAQxB,OALI8gB,KAAiB,EAAPA,IACZ6M,EAAO5sB,KAAK+f,GAGd6M,EAAOnL,MAAK,CAAC7H,EAAG5I,IAAM4I,EAAI5I,IAAG1R,MACtBstB,CACT,CAEO,SAAS5P,GAASswC,GACvB,OAAQhyC,MAAMigD,WAAWjO,KAAiBlE,SAASkE,EACrD,CAEO,SAASnC,GAAY5/C,EAAWqjB,GACrC,MAAMwuC,EAAUn/D,KAAK4vB,MAAMtiB,GAC3B,OAAO6xD,EAAYxuC,GAAYrjB,GAAQ6xD,EAAUxuC,GAAYrjB,CAC/D,CAKO,SAASkgD,GACdtqC,EACAvf,EACAy8B,GAEA,IAAIp/B,EAAWsH,EAAcZ,EAE7B,IAAK1G,EAAI,EAAGsH,EAAO4a,EAAMziB,OAAQO,EAAIsH,EAAMtH,IACzC0G,EAAQwb,EAAMliB,GAAGo/B,GACZ/iB,MAAM3V,KACT/D,EAAO1D,IAAMD,KAAKC,IAAI0D,EAAO1D,IAAKyH,GAClC/D,EAAOtB,IAAMrC,KAAKqC,IAAIsB,EAAOtB,IAAKqF,GAGxC,CAEO,SAASuS,GAAUmlD,GACxB,OAAOA,GAAWljD,GAAK,IACzB,CAEO,SAAS0a,GAAUyoC,GACxB,OAAOA,GAAW,IAAMnjD,GAC1B,CASO,SAASmxC,GAAe//C,GAC7B,IAAKvE,EAAeuE,GAClB,OAEF,IAAIiM,EAAI,EACJmwB,EAAI,EACR,KAAO1pC,KAAK4vB,MAAMtiB,EAAIiM,GAAKA,IAAMjM,GAC/BiM,GAAK,GACLmwB,IAEF,OAAOA,CACT,CAGO,SAASnnB,GACd+8C,EACAC,GAEA,MAAMC,EAAsBD,EAAWjyD,EAAIgyD,EAAYhyD,EACjDmyD,EAAsBF,EAAWhyD,EAAI+xD,EAAY/xD,EACjDmyD,EAA2B1/D,KAAK8hB,KAAK09C,EAAsBA,EAAsBC,EAAsBA,GAE7G,IAAI/jD,EAAQ1b,KAAK2/D,MAAMF,EAAqBD,GAM5C,OAJI9jD,GAAU,GAAMQ,KAClBR,GAAStB,IAGJ,CACLsB,QACA0G,SAAUs9C,EAEd,CAEO,SAAS5d,GAAsBpgC,EAAYC,GAChD,OAAO3hB,KAAK8hB,KAAK9hB,KAAK+hB,IAAIJ,EAAIrU,EAAIoU,EAAIpU,EAAG,GAAKtN,KAAK+hB,IAAIJ,EAAIpU,EAAImU,EAAInU,EAAG,GACxE,CAMO,SAASqyD,GAAWjkD,EAAW5I,GACpC,OAAQ4I,EAAI5I,EAAI2rD,IAAStkD,GAAM8B,EACjC,CAMO,SAAS2jD,GAAgBlkD,GAC9B,OAAQA,EAAIvB,GAAMA,IAAOA,EAC3B,CAKO,SAASwB,GAAcF,EAAexb,EAAe+H,EAAa63D,GACvE,MAAMnkD,EAAIkkD,GAAgBnkD,GACpB0zC,EAAIyQ,GAAgB3/D,GACpBqZ,EAAIsmD,GAAgB53D,GACpB83D,EAAeF,GAAgBzQ,EAAIzzC,GACnCqkD,EAAaH,GAAgBtmD,EAAIoC,GACjCskD,EAAeJ,GAAgBlkD,EAAIyzC,GACnC8Q,EAAaL,GAAgBlkD,EAAIpC,GACvC,OAAOoC,IAAMyzC,GAAKzzC,IAAMpC,GAAMumD,GAAyB1Q,IAAM71C,GACvDwmD,EAAeC,GAAcC,EAAeC,CACpD,CASO,SAASzpC,GAAY/uB,EAAezH,EAAaoC,GACtD,OAAOrC,KAAKqC,IAAIpC,EAAKD,KAAKC,IAAIoC,EAAKqF,GACrC,CAMO,SAAS0xB,GAAY1xB,GAC1B,OAAO+uB,GAAY/uB,GAAQ,MAAO,MACpC,CASO,SAASkuC,GAAWluC,EAAexH,EAAe+H,GAA6B,IAAhB0oB,EAAUnwB,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,QAC9E,OAAOkH,GAAS1H,KAAKC,IAAIC,EAAO+H,GAAO0oB,GAAWjpB,GAAS1H,KAAKqC,IAAInC,EAAO+H,GAAO0oB,CACpF,CCpLO,SAASwvC,GACdC,EACA14D,EACA24D,GAEAA,EAAMA,GAAA,CAAS93D,GAAU63D,EAAM73D,GAASb,GACxC,IAEI44D,EAFA7/C,EAAK2/C,EAAM3/D,OAAS,EACpB+f,EAAK,EAGT,KAAOC,EAAKD,EAAK,GACf8/C,EAAO9/C,EAAKC,GAAO,EACf4/C,EAAIC,GACN9/C,EAAK8/C,EAEL7/C,EAAK6/C,EAIT,MAAO,CAAC9/C,KAAIC,KACd,CAUO,MAAMJ,GAAeA,CAC1B+/C,EACA95D,EACAoB,EACAqnB,IAEAoxC,GAAQC,EAAO14D,EAAOqnB,EAClBxmB,IACA,MAAMg4D,EAAKH,EAAM73D,GAAOjC,GACxB,OAAOi6D,EAAK74D,GAAS64D,IAAO74D,GAAS04D,EAAM73D,EAAQ,GAAGjC,KAASoB,CAAA,EAE/Da,GAAS63D,EAAM73D,GAAOjC,GAAOoB,GAStB0Y,GAAgBA,CAC3BggD,EACA95D,EACAoB,IAEAy4D,GAAQC,EAAO14D,GAAOa,GAAS63D,EAAM73D,GAAOjC,IAAQoB,IAS/C,SAAS84D,GAAe75D,EAAkB1G,EAAaoC,GAC5D,IAAInC,EAAQ,EACR+H,EAAMtB,EAAOlG,OAEjB,KAAOP,EAAQ+H,GAAOtB,EAAOzG,GAASD,GACpCC,IAEF,KAAO+H,EAAM/H,GAASyG,EAAOsB,EAAM,GAAK5F,GACtC4F,IAGF,OAAO/H,EAAQ,GAAK+H,EAAMtB,EAAOlG,OAC7BkG,EAAOinC,MAAM1tC,EAAO+H,GACpBtB,CACN,CAEA,MAAM85D,GAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WAgBhD,SAASjxD,GAAkB0T,EAAOqF,GACnCrF,EAAMw9C,SACRx9C,EAAMw9C,SAASjhE,UAAUsC,KAAKwmB,IAIhCviB,OAAO26D,eAAez9C,EAAO,WAAY,CACvC09C,cAAc,EACdC,YAAY,EACZn5D,MAAO,CACLjI,UAAW,CAAC8oB,MAIhBk4C,GAAY7gE,SAAS0G,IACnB,MAAMd,EAAS,UAAYy+B,GAAY39B,GACjC0zC,EAAO92B,EAAM5c,GAEnBN,OAAO26D,eAAez9C,EAAO5c,EAAK,CAChCs6D,cAAc,EACdC,YAAY,EACZn5D,KAAAA,GAAe,QAAA65B,EAAA/gC,UAAAC,OAANwW,EAAI,IAAA5H,MAAAkyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvqB,EAAIuqB,GAAAhhC,UAAAghC,GACX,MAAMn8B,EAAM20C,EAAKkI,MAAMtjD,KAAMqY,GAQ7B,OANAiM,EAAMw9C,SAASjhE,UAAUG,SAASkhE,IACF,oBAAnBA,EAAOt7D,IAChBs7D,EAAOt7D,MAAWyR,MAIf5R,CACT,GACA,IAEN,CAQO,SAAS2J,GAAoBkU,EAAOqF,GACzC,MAAMw4C,EAAO79C,EAAMw9C,SACnB,IAAKK,EACH,OAGF,MAAMthE,EAAYshE,EAAKthE,UACjB8I,EAAQ9I,EAAU+hB,QAAQ+G,IACjB,IAAXhgB,GACF9I,EAAUsX,OAAOxO,EAAO,GAGtB9I,EAAUgB,OAAS,IAIvBggE,GAAY7gE,SAAS0G,WACZ4c,EAAM5c,EAAI,WAGZ4c,EAAMw9C,SACf,CAKO,SAASM,GAAgBlgE,GAC9B,MAAMa,EAAM,IAAI8lC,IAAO3mC,GAEvB,OAAIa,EAAIgG,OAAS7G,EAAML,OACdK,EAGFuO,MAAMtM,KAAKpB,EACpB,CCnLa,MAAAvB,GACW,qBAAXE,OACF,SAASmzB,GACd,OAAOA,GACT,EAEKnzB,OAAO2gE,sBAOT,SAASx1C,GACd5rB,EACA09D,GAEA,IAAI2D,EAAY,GACZC,GAAU,EAEd,OAAO,WAAyB,QAAAz/B,EAAAlhC,UAAAC,OAAbwW,EAAW,IAAA5H,MAAAqyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX1qB,EAAW0qB,GAAAnhC,UAAAmhC,GAE5Bu/B,EAAYjqD,EACPkqD,IACHA,GAAU,EACV/gE,GAAiBC,KAAKC,QAAQ,KAC5B6gE,GAAU,EACVthE,EAAGqiD,MAAMqb,EAAS2D,EAAA,IAGxB,CACF,CAKO,SAASj1B,GAAmCpsC,EAA8ByE,GAC/E,IAAI88D,EACJ,OAAO,WAAyB,QAAAv/B,EAAArhC,UAAAC,OAAbwW,EAAW,IAAA5H,MAAAwyB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAX7qB,EAAW6qB,GAAAthC,UAAAshC,GAO5B,OANIx9B,GACF+8D,aAAaD,GACbA,EAAUE,WAAWzhE,EAAIyE,EAAO2S,IAEhCpX,EAAGqiD,MAAMtjD,KAAMqY,GAEV3S,CACT,CACF,CAMO,MAAMitB,GAAsBD,GAAgD,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SAMrHqN,GAAiBA,CAACrN,EAAmCpxB,EAAe+H,IAA0B,UAAVqpB,EAAoBpxB,EAAkB,QAAVoxB,EAAkBrpB,GAAO/H,EAAQ+H,GAAO,EAMxJy3C,GAASA,CAACpuB,EAAoCle,EAAcF,EAAemrC,IAE/E/sB,KADO+sB,EAAM,OAAS,SACJnrC,EAAkB,WAAVoe,GAAsBle,EAAOF,GAAS,EAAIE,EAOtE,SAASoL,GAAiCtV,EAAqCmV,EAAwBE,GAC5G,MAAMgjD,EAAaljD,EAAO5d,OAE1B,IAAIP,EAAQ,EACRoQ,EAAQixD,EAEZ,GAAIr4D,EAAKsH,QAAS,CAChB,MAAM,OAACtG,EAAA,QAAQgB,GAAWhC,EACpBkB,EAAOF,EAAOE,MACd,IAACnK,EAAG,IAAEoC,EAAG,WAAE+P,EAAU,WAAEC,GAAcnI,EAAOoI,gBAE9CF,IACFlS,EAAQu2B,GAAYz2B,KAAKC,IAEvBogB,GAAanV,EAASd,EAAMnK,GAAKugB,GAEjCjC,EAAqBgjD,EAAalhD,GAAahC,EAAQjU,EAAMF,EAAOsV,iBAAiBvf,IAAMugB,IAC7F,EAAG+gD,EAAa,IAGhBjxD,EADE+B,EACMokB,GAAYz2B,KAAKqC,IAEvBge,GAAanV,EAAShB,EAAOE,KAAM/H,GAAK,GAAMoe,GAAK,EAEnDlC,EAAqB,EAAI8B,GAAahC,EAAQjU,EAAMF,EAAOsV,iBAAiBnd,IAAM,GAAMoe,GAAK,GAC/FvgB,EAAOqhE,GAAcrhE,EAEbqhE,EAAarhE,EAIzB,MAAO,CAACA,QAAOoQ,QACjB,CAQO,SAASmO,GAAoBvV,GAClC,MAAM,OAACmF,EAAM,OAAEE,EAAA,aAAQizD,GAAgBt4D,EACjCu4D,EAAY,CAChBC,KAAMrzD,EAAOpO,IACb0hE,KAAMtzD,EAAOhM,IACbu/D,KAAMrzD,EAAOtO,IACb4hE,KAAMtzD,EAAOlM,KAEf,IAAKm/D,EAEH,OADAt4D,EAAKs4D,aAAeC,GACb,EAET,MAAMt7C,EAAUq7C,EAAaE,OAASrzD,EAAOpO,KAC1CuhE,EAAaG,OAAStzD,EAAOhM,KAC7Bm/D,EAAaI,OAASrzD,EAAOtO,KAC7BuhE,EAAaK,OAAStzD,EAAOlM,IAGhC,OADA2D,OAAOe,OAAOy6D,EAAcC,GACrBt7C,CACT,CC/IA,MAAM27C,GAAUhvD,GAAoB,IAANA,GAAiB,IAANA,EACnCivD,GAAYA,CAACjvD,EAAWs8C,EAAW1lB,KAAgB1pC,KAAK+hB,IAAI,EAAG,IAAMjP,GAAK,IAAM9S,KAAKsb,KAAKxI,EAAIs8C,GAAKh1C,GAAMsvB,GACzGs4B,GAAaA,CAAClvD,EAAWs8C,EAAW1lB,IAAc1pC,KAAK+hB,IAAI,GAAI,GAAKjP,GAAK9S,KAAKsb,KAAKxI,EAAIs8C,GAAKh1C,GAAMsvB,GAAK,EAOvGzlC,GAAU,CACdE,OAAS2O,GAAcA,EAEvBmvD,WAAanvD,GAAcA,EAAIA,EAE/BovD,YAAcpvD,IAAeA,GAAKA,EAAI,GAEtCqvD,cAAgBrvD,IAAgBA,GAAK,IAAO,EACxC,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAE9BsvD,YAActvD,GAAcA,EAAIA,EAAIA,EAEpCuvD,aAAevvD,IAAeA,GAAK,GAAKA,EAAIA,EAAI,EAEhDwvD,eAAiBxvD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAE9ByvD,YAAczvD,GAAcA,EAAIA,EAAIA,EAAIA,EAExC0vD,aAAe1vD,MAAiBA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEtD2vD,eAAiB3vD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAEnC4vD,YAAc5vD,GAAcA,EAAIA,EAAIA,EAAIA,EAAIA,EAE5C6vD,aAAe7vD,IAAeA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAExD8vD,eAAiB9vD,IAAgBA,GAAK,IAAO,EACzC,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAEtC+vD,WAAa/vD,GAAuC,EAAxB9S,KAAKob,IAAItI,EAAIkJ,IAEzC8mD,YAAchwD,GAAc9S,KAAKsb,IAAIxI,EAAIkJ,IAEzC+mD,cAAgBjwD,IAAe,IAAO9S,KAAKob,IAAIc,GAAKpJ,GAAK,GAEzDkwD,WAAalwD,GAAqB,IAAPA,EAAY,EAAI9S,KAAK+hB,IAAI,EAAG,IAAMjP,EAAI,IAEjEmwD,YAAcnwD,GAAqB,IAAPA,EAAY,EAA4B,EAAvB9S,KAAK+hB,IAAI,GAAI,GAAKjP,GAE/DowD,cAAgBpwD,GAAcgvD,GAAOhvD,GAAKA,EAAIA,EAAI,GAC9C,GAAM9S,KAAK+hB,IAAI,EAAG,IAAU,EAAJjP,EAAQ,IAChC,IAAyC,EAAjC9S,KAAK+hB,IAAI,GAAI,IAAU,EAAJjP,EAAQ,KAEvCqwD,WAAarwD,GAAcA,GAAM,EAAKA,IAAM9S,KAAK8hB,KAAK,EAAIhP,EAAIA,GAAK,GAEnEswD,YAActwD,GAAc9S,KAAK8hB,KAAK,GAAKhP,GAAK,GAAKA,GAErDuwD,cAAgBvwD,IAAgBA,GAAK,IAAO,GACvC,IAAO9S,KAAK8hB,KAAK,EAAIhP,EAAIA,GAAK,GAC/B,IAAO9S,KAAK8hB,KAAK,GAAKhP,GAAK,GAAKA,GAAK,GAEzCwwD,cAAgBxwD,GAAcgvD,GAAOhvD,GAAKA,EAAIivD,GAAUjvD,EAAG,KAAO,IAElEywD,eAAiBzwD,GAAcgvD,GAAOhvD,GAAKA,EAAIkvD,GAAWlvD,EAAG,KAAO,IAEpE0wD,gBAAAA,CAAiB1wD,GACf,MAAMs8C,EAAI,MAEV,OAAO0S,GAAOhvD,GAAKA,EACjBA,EAAI,GACA,GAAMivD,GAAc,EAAJjvD,EAAOs8C,EAHnB,KAIJ,GAAM,GAAM4S,GAAe,EAAJlvD,EAAQ,EAAGs8C,EAJ9B,IAKZ,EAEAqU,UAAAA,CAAW3wD,GACT,MAAMs8C,EAAI,QACV,OAAOt8C,EAAIA,IAAMs8C,EAAI,GAAKt8C,EAAIs8C,EAChC,EAEAsU,WAAAA,CAAY5wD,GACV,MAAMs8C,EAAI,QACV,OAAQt8C,GAAK,GAAKA,IAAMs8C,EAAI,GAAKt8C,EAAIs8C,GAAK,CAC5C,EAEAuU,aAAAA,CAAc7wD,GACZ,IAAIs8C,EAAI,QACR,OAAKt8C,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBs8C,GAAM,QAAet8C,EAAIs8C,GAA3C,GAEF,KAAQt8C,GAAK,GAAKA,IAAuB,GAAhBs8C,GAAM,QAAet8C,EAAIs8C,GAAK,EAChE,EAEAwU,aAAe9wD,GAAc,EAAI7O,GAAQ4/D,cAAc,EAAI/wD,GAE3D+wD,aAAAA,CAAc/wD,GACZ,MAAMk9C,EAAI,OACJnpB,EAAI,KACV,OAAI/zB,EAAK,EAAI+zB,EACJmpB,EAAIl9C,EAAIA,EAEbA,EAAK,EAAI+zB,EACJmpB,GAAKl9C,GAAM,IAAM+zB,GAAM/zB,EAAI,IAEhCA,EAAK,IAAM+zB,EACNmpB,GAAKl9C,GAAM,KAAO+zB,GAAM/zB,EAAI,MAE9Bk9C,GAAKl9C,GAAM,MAAQ+zB,GAAM/zB,EAAI,OACtC,EAEAgxD,gBAAkBhxD,GAAeA,EAAI,GACH,GAA9B7O,GAAQ2/D,aAAiB,EAAJ9wD,GACc,GAAnC7O,GAAQ4/D,cAAkB,EAAJ/wD,EAAQ,GAAW,ICpHxC,SAASixD,GAAoBr8D,GAClC,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMnI,EAAOmI,EAAMw1D,WACnB,MAAgB,2BAAT39D,GAA8C,4BAATA,EAG9C,OAAO,CACT,CAWO,SAAS2D,GAAMwE,GACpB,OAAOq8D,GAAoBr8D,GAASA,EAAQ,IAAIm0D,EAAMn0D,EACxD,CAKO,SAASs8D,GAAct8D,GAC5B,OAAOq8D,GAAoBr8D,GACvBA,EACA,IAAIm0D,EAAMn0D,GAAOo1D,SAAS,IAAKD,OAAO,IAAKt5D,WACjD,CC/BA,MAAMqU,GAAU,CAAC,IAAK,IAAK,cAAe,SAAU,WAC9CqsD,GAAS,CAAC,QAAS,cAAe,mBCAxC,MAAMC,GAAY,IAAInlE,IAaf,SAASwe,GAAa4mD,EAAa3mD,EAAgB3W,GACxD,OAZF,SAAyB2W,EAAgB3W,GACvCA,EAAUA,GAAW,CAAC,EACtB,MAAM8N,EAAW6I,EAAS4mD,KAAKC,UAAUx9D,GACzC,IAAIy9D,EAAYJ,GAAU1iE,IAAImT,GAK9B,OAJK2vD,IACHA,EAAY,IAAIC,KAAKC,aAAahnD,EAAQ3W,GAC1Cq9D,GAAUviE,IAAIgT,EAAU2vD,IAEnBA,CACT,CAGSG,CAAgBjnD,EAAQ3W,GAAS4mD,OAAO0W,EACjD,CCRA,MAAMvW,GAAa,CAOjBjnD,OAAOe,GACElB,EAAQkB,GAAkCA,EAAS,GAAKA,EAWjEmmD,OAAAA,CAAQP,EAAW/kD,EAAOqlB,GACxB,GAAkB,IAAd0/B,EACF,MAAO,IAGT,MAAM9vC,EAAS5e,KAAKQ,MAAMyH,QAAQ2W,OAClC,IAAIknD,EACAC,EAAQrX,EAEZ,GAAI1/B,EAAMntB,OAAS,EAAG,CAEpB,MAAMmkE,EAAU5kE,KAAKqC,IAAIrC,KAAKsd,IAAIsQ,EAAM,GAAGlmB,OAAQ1H,KAAKsd,IAAIsQ,EAAMA,EAAMntB,OAAS,GAAGiH,SAChFk9D,EAAU,MAAQA,EAAU,QAC9BF,EAAW,cAGbC,EAyCN,SAAwBrX,EAAW1/B,GAGjC,IAAI+2C,EAAQ/2C,EAAMntB,OAAS,EAAImtB,EAAM,GAAGlmB,MAAQkmB,EAAM,GAAGlmB,MAAQkmB,EAAM,GAAGlmB,MAAQkmB,EAAM,GAAGlmB,MAGvF1H,KAAKsd,IAAIqnD,IAAU,GAAKrX,IAActtD,KAAKqE,MAAMipD,KAEnDqX,EAAQrX,EAAYttD,KAAKqE,MAAMipD,IAEjC,OAAOqX,CACT,CApDcE,CAAevX,EAAW1/B,GAGpC,MAAMk3C,EAAW/F,GAAM/+D,KAAKsd,IAAIqnD,IAO1BI,EAAa1nD,MAAMynD,GAAY,EAAI9kE,KAAKqC,IAAIrC,KAAKC,KAAK,EAAID,KAAKqE,MAAMygE,GAAW,IAAK,GAErFj+D,EAAU,CAAC69D,WAAUM,sBAAuBD,EAAYE,sBAAuBF,GAGrF,OAFA/+D,OAAOe,OAAOF,EAASjI,KAAKiI,QAAQ+mB,MAAM6/B,QAEnClwC,GAAa+vC,EAAW9vC,EAAQ3W,EACzC,EAWAinD,WAAAA,CAAYR,EAAW/kD,EAAOqlB,GAC5B,GAAkB,IAAd0/B,EACF,MAAO,IAET,MAAMroD,EAAS2oB,EAAMrlB,GAAO28D,aAAgB5X,EAAattD,KAAK+hB,IAAI,GAAI/hB,KAAKqE,MAAM06D,GAAMzR,KACvF,MAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAAItpC,SAAS/e,IAAWsD,EAAQ,GAAMqlB,EAAMntB,OACxDmtD,GAAWC,QAAQxtD,KAAKzB,KAAM0uD,EAAW/kD,EAAOqlB,GAElD,EACT,GAsBF,IAAA+/B,GAAe,CAACC,qBC/FH1sB,GAAYl7B,OAAOu5B,OAAO,MAC1BwB,GAAc/6B,OAAOu5B,OAAO,MAOzC,SAAS4lC,GAASn7C,EAAM1jB,GACtB,IAAKA,EACH,OAAO0jB,EAET,MAAM/jB,EAAOK,EAAIg6B,MAAM,KACvB,IAAK,IAAIt/B,EAAI,EAAGquD,EAAIppD,EAAKxF,OAAQO,EAAIquD,IAAKruD,EAAG,CAC3C,MAAMsuD,EAAIrpD,EAAKjF,GACfgpB,EAAOA,EAAKslC,KAAOtlC,EAAKslC,GAAKtpD,OAAOu5B,OAAO,MAC7C,CACA,OAAOvV,CACT,CAEA,SAASroB,GAAIyjE,EAAM/lC,EAAO14B,GACxB,MAAqB,kBAAV04B,EACFY,EAAMklC,GAASC,EAAM/lC,GAAQ14B,GAE/Bs5B,EAAMklC,GAASC,EAAM,IAAK/lC,EACnC,CAMO,MAAMgmC,GACX1mE,WAAAA,CAAY4lC,EAAc+gC,GACxB1mE,KAAKuH,eAAYjH,EACjBN,KAAKma,gBAAkB,kBACvBna,KAAKqa,YAAc,kBACnBra,KAAKsE,MAAQ,OACbtE,KAAK8P,SAAW,CAAC,EACjB9P,KAAKusB,iBAAoBlX,GAAYA,EAAQ7U,MAAM+oC,SAAS1f,sBAC5D7pB,KAAK6U,SAAW,CAAC,EACjB7U,KAAKowC,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFpwC,KAAKsyB,KAAO,CACVq0C,OAAQ,qDACR59D,KAAM,GACNiR,MAAO,SACPwY,WAAY,IACZtT,OAAQ,MAEVlf,KAAK8yC,MAAQ,CAAC,EACd9yC,KAAK4mE,qBAAuB,CAAC95D,EAAK7E,IAAYm9D,GAAcn9D,EAAQkS,iBACpEna,KAAK6mE,iBAAmB,CAAC/5D,EAAK7E,IAAYm9D,GAAcn9D,EAAQoS,aAChEra,KAAK8mE,WAAa,CAACh6D,EAAK7E,IAAYm9D,GAAcn9D,EAAQ3D,OAC1DtE,KAAKoP,UAAY,IACjBpP,KAAK+mE,YAAc,CACjB/8D,KAAM,UACNqX,WAAW,EACXgB,kBAAkB,GAEpBriB,KAAKwtC,qBAAsB,EAC3BxtC,KAAKyzC,QAAU,KACfzzC,KAAK0a,QAAU,KACf1a,KAAKwR,SAAU,EACfxR,KAAK2Z,QAAU,CAAC,EAChB3Z,KAAKytC,YAAa,EAClBztC,KAAKiJ,WAAQ3I,EACbN,KAAKkM,OAAS,CAAC,EACflM,KAAKof,UAAW,EAChBpf,KAAKgV,yBAA0B,EAE/BhV,KAAKoiC,SAASuD,GACd3lC,KAAKsjD,MAAMojB,EACb,CAMA3jE,GAAAA,CAAI09B,EAAO14B,GACT,OAAOhF,GAAI/C,KAAMygC,EAAO14B,EAC1B,CAKAnF,GAAAA,CAAI69B,GACF,OAAO8lC,GAASvmE,KAAMygC,EACxB,CAMA2B,QAAAA,CAAS3B,EAAO14B,GACd,OAAOhF,GAAIo/B,GAAa1B,EAAO14B,EACjC,CAEA24B,QAAAA,CAASD,EAAO14B,GACd,OAAOhF,GAAIu/B,GAAW7B,EAAO14B,EAC/B,CAmBAk6B,KAAAA,CAAMxB,EAAOlnB,EAAMyoB,EAAaD,GAC9B,MAAMilC,EAAcT,GAASvmE,KAAMygC,GAC7BwmC,EAAoBV,GAASvmE,KAAMgiC,GACnCklC,EAAc,IAAM3tD,EAE1BnS,OAAO+/D,iBAAiBH,EAAa,CAEnC,CAACE,GAAc,CACbp+D,MAAOk+D,EAAYztD,GACnB6tD,UAAU,GAGZ,CAAC7tD,GAAO,CACN0oD,YAAY,EACZr/D,GAAAA,GACE,MAAMujC,EAAQnmC,KAAKknE,GACbniE,EAASkiE,EAAkBllC,GACjC,OAAI76B,EAASi/B,GACJ/+B,OAAOe,OAAO,CAAC,EAAGpD,EAAQohC,GAE5Bp3B,EAAeo3B,EAAOphC,EAC/B,EACAhC,GAAAA,CAAI+F,GACF9I,KAAKknE,GAAep+D,CACtB,IAGN,CAEAw6C,KAAAA,CAAM+jB,GACJA,EAASrmE,SAASsiD,GAAUA,EAAMtjD,OACpC,EAIF,IAAAsH,GAA+B,IAAIm/D,GAAS,CAC1CntD,YAAcC,IAAUA,EAAKE,WAAW,MACxCD,WAAaD,GAAkB,WAATA,EACtBu5B,MAAO,CACL6Y,UAAW,eAEbob,YAAa,CACXztD,aAAa,EACbE,YAAY,IAEb,CH3KI,SAAiClS,GACtCA,EAASvE,IAAI,YAAa,CACxB2C,WAAOpF,EACPS,SAAU,IACVuE,OAAQ,eACRrE,QAAIX,EACJ6D,UAAM7D,EACNsF,UAAMtF,EACN8D,QAAI9D,EACJK,UAAML,IAGRgH,EAAS86B,SAAS,YAAa,CAC7BupB,WAAW,EACXnyC,YAAY,EACZF,YAAcC,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAG3EjS,EAASvE,IAAI,aAAc,CACzBsiE,OAAQ,CACN1kE,KAAM,QACNkH,WAAYw9D,IAEdrsD,QAAS,CACPrY,KAAM,SACNkH,WAAYmR,MAIhB1R,EAAS86B,SAAS,aAAc,CAC9BupB,UAAW,cAGbrkD,EAASvE,IAAI,cAAe,CAC1BmD,OAAQ,CACNqB,UAAW,CACTxG,SAAU,MAGdyrB,OAAQ,CACNjlB,UAAW,CACTxG,SAAU,IAGd0wC,KAAM,CACJnpC,WAAY,CACV+8D,OAAQ,CACNlhE,KAAM,eAERkrC,QAAS,CACP1uC,KAAM,UACNI,SAAU,KAIhBywC,KAAM,CACJlpC,WAAY,CACV+8D,OAAQ,CACNjhE,GAAI,eAENirC,QAAS,CACP1uC,KAAM,UACN2E,OAAQ,SACRrE,GAAIsjB,GAAS,EAAJA,MAKnB,EIvEO,SAA8Bjd,GACnCA,EAASvE,IAAI,SAAU,CACrB8sC,aAAa,EACbloB,QAAS,CACPtT,IAAK,EACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,IAGZ,ECRO,SAA4BlN,GACjCA,EAASvE,IAAI,QAAS,CACpBmmB,SAAS,EACTnK,QAAQ,EACR3V,SAAS,EACT2rB,aAAa,EASbymB,OAAQ,QAER7mC,MAAM,EAMNqgB,MAAO,EAGP8C,KAAM,CACJ5O,SAAS,EACT3O,UAAW,EACX6kB,iBAAiB,EACjBjN,WAAW,EACXhD,WAAY,EACZiI,UAAWA,CAACvqB,EAAM5E,IAAYA,EAAQsS,UACtCmiB,UAAWA,CAAC7vB,EAAM5E,IAAYA,EAAQ3D,MACtCya,QAAQ,GAGVgC,OAAQ,CACNmI,SAAS,EACTqT,KAAM,GACNE,WAAY,EACZ3gB,MAAO,GAITic,MAAO,CAEL7O,SAAS,EAGTjP,KAAM,GAGN0N,QAAS,CACPtT,IAAK,EACLE,OAAQ,IAKZya,MAAO,CACLkI,YAAa,EACbC,YAAa,GACbsB,QAAQ,EACRkF,gBAAiB,EACjBF,gBAAiB,GACjB9V,QAAS,EACTuB,SAAS,EACT6F,UAAU,EACVgM,gBAAiB,EACjBuC,YAAa,EAEbzI,SAAUk6B,GAAMC,WAAWjnD,OAC3Bu/D,MAAO,CAAC,EACRz3C,MAAO,CAAC,EACR6C,MAAO,SACPmK,WAAY,OAEZiB,mBAAmB,EACnBG,cAAe,4BACfD,gBAAiB,KAIrB12B,EAAS26B,MAAM,cAAe,QAAS,GAAI,SAC3C36B,EAAS26B,MAAM,aAAc,QAAS,GAAI,eAC1C36B,EAAS26B,MAAM,eAAgB,QAAS,GAAI,eAC5C36B,EAAS26B,MAAM,cAAe,QAAS,GAAI,SAE3C36B,EAAS86B,SAAS,QAAS,CACzBupB,WAAW,EACXryC,YAAcC,IAAUA,EAAKE,WAAW,YAAcF,EAAKE,WAAW,UAAqB,aAATF,GAAgC,WAATA,EACzGC,WAAaD,GAAkB,eAATA,GAAkC,mBAATA,GAAsC,SAATA,IAG9EjS,EAAS86B,SAAS,SAAU,CAC1BupB,UAAW,UAGbrkD,EAAS86B,SAAS,cAAe,CAC/B9oB,YAAcC,GAAkB,oBAATA,GAAuC,aAATA,EACrDC,WAAaD,GAAkB,oBAATA,GAE1B,IClEO,SAASwgB,GACdjtB,EACA+C,EACAiqB,EACAytC,EACA1tC,GAEA,IAAIumB,EAAYvwC,EAAKgqB,GAQrB,OAPKumB,IACHA,EAAYvwC,EAAKgqB,GAAU/sB,EAAI6xC,YAAY9kB,GAAQ/d,MACnDge,EAAG32B,KAAK02B,IAENumB,EAAYmnB,IACdA,EAAUnnB,GAELmnB,CACT,CASO,SAASC,GACd16D,EACAwlB,EACAm1C,EACA3xD,GAGA,IAAIjG,GADJiG,EAAQA,GAAS,CAAC,GACDjG,KAAOiG,EAAMjG,MAAQ,CAAC,EACnCiqB,EAAKhkB,EAAMmkB,eAAiBnkB,EAAMmkB,gBAAkB,GAEpDnkB,EAAMwc,OAASA,IACjBziB,EAAOiG,EAAMjG,KAAO,CAAC,EACrBiqB,EAAKhkB,EAAMmkB,eAAiB,GAC5BnkB,EAAMwc,KAAOA,GAGfxlB,EAAIuxB,OAEJvxB,EAAIwlB,KAAOA,EACX,IAAIi1C,EAAU,EACd,MAAM79D,EAAO+9D,EAAc5lE,OAC3B,IAAIO,EAAW8f,EAAWoX,EAAcouC,EAAwBC,EAChE,IAAKvlE,EAAI,EAAGA,EAAIsH,EAAMtH,IAIpB,GAHAslE,EAAQD,EAAcrlE,QAGR9B,IAAVonE,GAAiC,OAAVA,GAAmB9/D,EAAQ8/D,IAE/C,GAAI9/D,EAAQ8/D,GAGjB,IAAKxlD,EAAI,EAAGoX,EAAOouC,EAAM7lE,OAAQqgB,EAAIoX,EAAMpX,IACzCylD,EAAcD,EAAMxlD,QAEA5hB,IAAhBqnE,GAA6C,OAAhBA,GAAyB//D,EAAQ+/D,KAChEJ,EAAUxtC,GAAajtB,EAAK+C,EAAMiqB,EAAIytC,EAASI,SARnDJ,EAAUxtC,GAAajtB,EAAK+C,EAAMiqB,EAAIytC,EAASG,GAcnD56D,EAAIyxB,UAEJ,MAAMvE,EAAQF,EAAGj4B,OAAS,EAC1B,GAAIm4B,EAAQytC,EAAc5lE,OAAQ,CAChC,IAAKO,EAAI,EAAGA,EAAI43B,EAAO53B,WACdyN,EAAKiqB,EAAG13B,IAEjB03B,EAAG3hB,OAAO,EAAG6hB,GAEf,OAAOutC,CACT,CAUO,SAAS9sC,GAAYj6B,EAAc65B,EAAeve,GACvD,MAAMyQ,EAAmB/rB,EAAMisB,wBACzBm7C,EAAsB,IAAV9rD,EAAc1a,KAAKqC,IAAIqY,EAAQ,EAAG,IAAO,EAC3D,OAAO1a,KAAK4vB,OAAOqJ,EAAQutC,GAAar7C,GAAoBA,EAAmBq7C,CACjF,CAKO,SAASh6B,GAAYpkB,EAA4B1c,IACjDA,GAAQ0c,MAIb1c,EAAMA,GAAO0c,EAAOjY,WAAW,OAE3B8sB,OAGJvxB,EAAI+6D,iBACJ/6D,EAAIg7D,UAAU,EAAG,EAAGt+C,EAAO1N,MAAO0N,EAAOzN,QACzCjP,EAAIyxB,UACN,CASO,SAAS0c,GACdnuC,EACA7E,EACAyG,EACAC,GAGA+xC,GAAgB5zC,EAAK7E,EAASyG,EAAGC,EAAG,KACtC,CAGO,SAAS+xC,GACd5zC,EACA7E,EACAyG,EACAC,EACA+X,GAEA,IAAI/lB,EAAconE,EAAiBC,EAAiBj/D,EAAci9C,EAAsBlqC,EAAemsD,EAAkBC,EACzH,MAAMluD,EAAQ/R,EAAQ6R,WAChBZ,EAAWjR,EAAQiR,SACnBE,EAASnR,EAAQmR,OACvB,IAAIuzC,GAAOzzC,GAAY,GAAK8mD,GAE5B,GAAIhmD,GAA0B,kBAAVA,IAClBrZ,EAAOqZ,EAAMskD,WACA,8BAAT39D,GAAiD,+BAATA,GAM1C,OALAmM,EAAIuxB,OACJvxB,EAAIqqC,UAAUzoC,EAAGC,GACjB7B,EAAIsxD,OAAOzR,GACX7/C,EAAIq7D,UAAUnuD,GAAQA,EAAM8B,MAAQ,GAAI9B,EAAM+B,OAAS,EAAG/B,EAAM8B,MAAO9B,EAAM+B,aAC7EjP,EAAIyxB,UAKR,KAAI9f,MAAMrF,IAAWA,GAAU,GAA/B,CAMA,OAFAtM,EAAIkyB,YAEIhlB,GAEN,QACM0M,EACF5Z,EAAIs7D,QAAQ15D,EAAGC,EAAG+X,EAAI,EAAGtN,EAAQ,EAAG,EAAGoC,IAEvC1O,EAAIyR,IAAI7P,EAAGC,EAAGyK,EAAQ,EAAGoC,IAE3B1O,EAAIqpC,YACJ,MACF,IAAK,WACHr6B,EAAQ4K,EAAIA,EAAI,EAAItN,EACpBtM,EAAImyB,OAAOvwB,EAAItN,KAAKsb,IAAIiwC,GAAO7wC,EAAOnN,EAAIvN,KAAKob,IAAImwC,GAAOvzC,GAC1DuzC,GAAOuT,GACPpzD,EAAIoyB,OAAOxwB,EAAItN,KAAKsb,IAAIiwC,GAAO7wC,EAAOnN,EAAIvN,KAAKob,IAAImwC,GAAOvzC,GAC1DuzC,GAAOuT,GACPpzD,EAAIoyB,OAAOxwB,EAAItN,KAAKsb,IAAIiwC,GAAO7wC,EAAOnN,EAAIvN,KAAKob,IAAImwC,GAAOvzC,GAC1DtM,EAAIqpC,YACJ,MACF,IAAK,cAQH6P,EAAwB,KAAT5sC,EACfrQ,EAAOqQ,EAAS4sC,EAChB+hB,EAAU3mE,KAAKob,IAAImwC,EAAMsT,IAAcl3D,EACvCk/D,EAAW7mE,KAAKob,IAAImwC,EAAMsT,KAAev5C,EAAIA,EAAI,EAAIs/B,EAAej9C,GACpEi/D,EAAU5mE,KAAKsb,IAAIiwC,EAAMsT,IAAcl3D,EACvCm/D,EAAW9mE,KAAKsb,IAAIiwC,EAAMsT,KAAev5C,EAAIA,EAAI,EAAIs/B,EAAej9C,GACpE+D,EAAIyR,IAAI7P,EAAIu5D,EAAUt5D,EAAIq5D,EAAShiB,EAAc2G,EAAMrvC,GAAIqvC,EAAMvvC,IACjEtQ,EAAIyR,IAAI7P,EAAIw5D,EAAUv5D,EAAIo5D,EAAS/hB,EAAc2G,EAAMvvC,GAASuvC,GAChE7/C,EAAIyR,IAAI7P,EAAIu5D,EAAUt5D,EAAIq5D,EAAShiB,EAAc2G,EAAKA,EAAMvvC,IAC5DtQ,EAAIyR,IAAI7P,EAAIw5D,EAAUv5D,EAAIo5D,EAAS/hB,EAAc2G,EAAMvvC,GAASuvC,EAAMrvC,IACtExQ,EAAIqpC,YACJ,MACF,IAAK,OACH,IAAKj9B,EAAU,CACbnQ,EAAO3H,KAAKinE,QAAUjvD,EACtB0C,EAAQ4K,EAAIA,EAAI,EAAI3d,EACpB+D,EAAI6vC,KAAKjuC,EAAIoN,EAAOnN,EAAI5F,EAAM,EAAI+S,EAAO,EAAI/S,GAC7C,MAEF4jD,GAAOsT,GAET,IAAK,UACHgI,EAAW7mE,KAAKob,IAAImwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxC2uD,EAAU3mE,KAAKob,IAAImwC,GAAOvzC,EAC1B4uD,EAAU5mE,KAAKsb,IAAIiwC,GAAOvzC,EAC1B8uD,EAAW9mE,KAAKsb,IAAIiwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxCtM,EAAImyB,OAAOvwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAIoyB,OAAOxwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bj7D,EAAIoyB,OAAOxwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAIoyB,OAAOxwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bj7D,EAAIqpC,YACJ,MACF,IAAK,WACHwW,GAAOsT,GAET,IAAK,QACHgI,EAAW7mE,KAAKob,IAAImwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxC2uD,EAAU3mE,KAAKob,IAAImwC,GAAOvzC,EAC1B4uD,EAAU5mE,KAAKsb,IAAIiwC,GAAOvzC,EAC1B8uD,EAAW9mE,KAAKsb,IAAIiwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxCtM,EAAImyB,OAAOvwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAIoyB,OAAOxwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAImyB,OAAOvwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bj7D,EAAIoyB,OAAOxwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7B,MACF,IAAK,OACHE,EAAW7mE,KAAKob,IAAImwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxC2uD,EAAU3mE,KAAKob,IAAImwC,GAAOvzC,EAC1B4uD,EAAU5mE,KAAKsb,IAAIiwC,GAAOvzC,EAC1B8uD,EAAW9mE,KAAKsb,IAAIiwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxCtM,EAAImyB,OAAOvwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAIoyB,OAAOxwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAImyB,OAAOvwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bj7D,EAAIoyB,OAAOxwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bpb,GAAOsT,GACPgI,EAAW7mE,KAAKob,IAAImwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxC2uD,EAAU3mE,KAAKob,IAAImwC,GAAOvzC,EAC1B4uD,EAAU5mE,KAAKsb,IAAIiwC,GAAOvzC,EAC1B8uD,EAAW9mE,KAAKsb,IAAIiwC,IAAQjmC,EAAIA,EAAI,EAAItN,GACxCtM,EAAImyB,OAAOvwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAIoyB,OAAOxwB,EAAIu5D,EAAUt5D,EAAIq5D,GAC7Bl7D,EAAImyB,OAAOvwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7Bj7D,EAAIoyB,OAAOxwB,EAAIw5D,EAAUv5D,EAAIo5D,GAC7B,MACF,IAAK,OACHA,EAAUrhD,EAAIA,EAAI,EAAItlB,KAAKob,IAAImwC,GAAOvzC,EACtC4uD,EAAU5mE,KAAKsb,IAAIiwC,GAAOvzC,EAC1BtM,EAAImyB,OAAOvwB,EAAIq5D,EAASp5D,EAAIq5D,GAC5Bl7D,EAAIoyB,OAAOxwB,EAAIq5D,EAASp5D,EAAIq5D,GAC5B,MACF,IAAK,OACHl7D,EAAImyB,OAAOvwB,EAAGC,GACd7B,EAAIoyB,OAAOxwB,EAAItN,KAAKob,IAAImwC,IAAQjmC,EAAIA,EAAI,EAAItN,GAASzK,EAAIvN,KAAKsb,IAAIiwC,GAAOvzC,GACzE,MACF,KAAK,EACHtM,EAAIqpC,YAIRrpC,EAAIoB,OACAjG,EAAQuS,YAAc,GACxB1N,EAAIqyB,SAER,CASO,SAAS5c,GACdhC,EACAzL,EACAoS,GAIA,OAFAA,EAASA,GAAU,IAEXpS,GAASyL,GAASA,EAAM7R,EAAIoG,EAAKN,KAAO0S,GAAU3G,EAAM7R,EAAIoG,EAAKR,MAAQ4S,GACjF3G,EAAM5R,EAAImG,EAAKT,IAAM6S,GAAU3G,EAAM5R,EAAImG,EAAKP,OAAS2S,CACzD,CAEO,SAASsY,GAAS1yB,EAA+BgI,GACtDhI,EAAIuxB,OACJvxB,EAAIkyB,YACJlyB,EAAI6vC,KAAK7nC,EAAKN,KAAMM,EAAKT,IAAKS,EAAKR,MAAQQ,EAAKN,KAAMM,EAAKP,OAASO,EAAKT,KACzEvH,EAAI6H,MACN,CAEO,SAASgrB,GAAW7yB,GACzBA,EAAIyxB,SACN,CAKO,SAAS4Z,GACdrrC,EACA2qC,EACA1yC,EACAujE,EACAt+D,GAEA,IAAKytC,EACH,OAAO3qC,EAAIoyB,OAAOn6B,EAAO2J,EAAG3J,EAAO4J,GAErC,GAAa,WAAT3E,EAAmB,CACrB,MAAMu+D,GAAY9wB,EAAS/oC,EAAI3J,EAAO2J,GAAK,EAC3C5B,EAAIoyB,OAAOqpC,EAAU9wB,EAAS9oC,GAC9B7B,EAAIoyB,OAAOqpC,EAAUxjE,EAAO4J,EAC9B,KAAoB,UAAT3E,MAAuBs+D,EAChCx7D,EAAIoyB,OAAOuY,EAAS/oC,EAAG3J,EAAO4J,GAE9B7B,EAAIoyB,OAAOn6B,EAAO2J,EAAG+oC,EAAS9oC,GAEhC7B,EAAIoyB,OAAOn6B,EAAO2J,EAAG3J,EAAO4J,EAC9B,CAKO,SAAS2pC,GACdxrC,EACA2qC,EACA1yC,EACAujE,GAEA,IAAK7wB,EACH,OAAO3qC,EAAIoyB,OAAOn6B,EAAO2J,EAAG3J,EAAO4J,GAErC7B,EAAI07D,cACFF,EAAO7wB,EAASgxB,KAAOhxB,EAASixB,KAChCJ,EAAO7wB,EAASkxB,KAAOlxB,EAASmxB,KAChCN,EAAOvjE,EAAO2jE,KAAO3jE,EAAO0jE,KAC5BH,EAAOvjE,EAAO6jE,KAAO7jE,EAAO4jE,KAC5B5jE,EAAO2J,EACP3J,EAAO4J,EACX,CAwBA,SAASk6D,GACP/7D,EACA4B,EACAC,EACA6Q,EACArW,GAEA,GAAIA,EAAK43C,eAAiB53C,EAAK2/D,UAAW,CAQxC,MAAMC,EAAUj8D,EAAI6xC,YAAYn/B,GAC1BhL,EAAO9F,EAAIq6D,EAAQC,sBACnB10D,EAAQ5F,EAAIq6D,EAAQE,uBACpB50D,EAAM1F,EAAIo6D,EAAQG,wBAClB30D,EAAS5F,EAAIo6D,EAAQI,yBACrBC,EAAcjgE,EAAK43C,eAAiB1sC,EAAME,GAAU,EAAIA,EAE9DzH,EAAIsN,YAActN,EAAIoN,UACtBpN,EAAIkyB,YACJlyB,EAAIyN,UAAYpR,EAAKkgE,iBAAmB,EACxCv8D,EAAImyB,OAAOzqB,EAAM40D,GACjBt8D,EAAIoyB,OAAO5qB,EAAO80D,GAClBt8D,EAAIqyB,SAER,CAEA,SAASmqC,GAAax8D,EAA+B3D,GACnD,MAAMogE,EAAWz8D,EAAIoN,UAErBpN,EAAIoN,UAAY/Q,EAAK7E,MACrBwI,EAAIwxB,SAASn1B,EAAKqL,KAAMrL,EAAKkL,IAAKlL,EAAK2S,MAAO3S,EAAK4S,QACnDjP,EAAIoN,UAAYqvD,CAClB,CAKO,SAAS7pC,GACd5yB,EACAmN,EACAvL,EACAC,EACA2jB,GAEA,IADAnpB,EAAuBvH,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,MAEvB,MAAM4iD,EAAQ58C,EAAQqS,GAAQA,EAAO,CAACA,GAChCklB,EAASh2B,EAAKu0B,YAAc,GAA0B,KAArBv0B,EAAKq0B,YAC5C,IAAIp7B,EAAWod,EAMf,IAJA1S,EAAIuxB,OACJvxB,EAAIwlB,KAAOA,EAAKuH,OA7ElB,SAAuB/sB,EAA+B3D,GAChDA,EAAK+0B,aACPpxB,EAAIqqC,UAAUhuC,EAAK+0B,YAAY,GAAI/0B,EAAK+0B,YAAY,IAGjDxd,EAAcvX,EAAK+P,WACtBpM,EAAIsxD,OAAOj1D,EAAK+P,UAGd/P,EAAK7E,QACPwI,EAAIoN,UAAY/Q,EAAK7E,OAGnB6E,EAAK6zB,YACPlwB,EAAIkwB,UAAY7zB,EAAK6zB,WAGnB7zB,EAAKg0B,eACPrwB,EAAIqwB,aAAeh0B,EAAKg0B,aAE5B,CA0DEqsC,CAAc18D,EAAK3D,GAEd/G,EAAI,EAAGA,EAAIoiD,EAAM3iD,SAAUO,EAC9Bod,EAAOglC,EAAMpiD,GAET+G,EAAKy0B,UACP0rC,GAAax8D,EAAK3D,EAAKy0B,UAGrBuB,IACEh2B,EAAKq0B,cACP1wB,EAAIsN,YAAcjR,EAAKq0B,aAGpB9c,EAAcvX,EAAKu0B,eACtB5wB,EAAIyN,UAAYpR,EAAKu0B,aAGvB5wB,EAAI28D,WAAWjqD,EAAM9Q,EAAGC,EAAGxF,EAAKsU,WAGlC3Q,EAAIk0C,SAASxhC,EAAM9Q,EAAGC,EAAGxF,EAAKsU,UAC9BorD,GAAa/7D,EAAK4B,EAAGC,EAAG6Q,EAAMrW,GAE9BwF,GAAKwE,OAAOmf,EAAKE,YAGnB1lB,EAAIyxB,SACN,CAOO,SAAS2e,GACdpwC,EACA6vC,GAEA,MAAM,EAACjuC,EAAC,EAAEC,EAAC,EAAE+X,EAAC,EAAEE,EAAC,OAAExN,GAAUujC,EAG7B7vC,EAAIyR,IAAI7P,EAAI0K,EAAO8iC,QAASvtC,EAAIyK,EAAO8iC,QAAS9iC,EAAO8iC,QAAS,IAAM5+B,GAAIA,IAAI,GAG9ExQ,EAAIoyB,OAAOxwB,EAAGC,EAAIiY,EAAIxN,EAAOgjC,YAG7BtvC,EAAIyR,IAAI7P,EAAI0K,EAAOgjC,WAAYztC,EAAIiY,EAAIxN,EAAOgjC,WAAYhjC,EAAOgjC,WAAY9+B,GAAIF,IAAS,GAG1FtQ,EAAIoyB,OAAOxwB,EAAIgY,EAAItN,EAAOijC,YAAa1tC,EAAIiY,GAG3C9Z,EAAIyR,IAAI7P,EAAIgY,EAAItN,EAAOijC,YAAa1tC,EAAIiY,EAAIxN,EAAOijC,YAAajjC,EAAOijC,YAAaj/B,GAAS,GAAG,GAGhGtQ,EAAIoyB,OAAOxwB,EAAIgY,EAAG/X,EAAIyK,EAAO+iC,UAG7BrvC,EAAIyR,IAAI7P,EAAIgY,EAAItN,EAAO+iC,SAAUxtC,EAAIyK,EAAO+iC,SAAU/iC,EAAO+iC,SAAU,GAAI/+B,IAAS,GAGpFtQ,EAAIoyB,OAAOxwB,EAAI0K,EAAO8iC,QAASvtC,EACjC,CCxgBA,MAAM+6D,GAAc,uCACdC,GAAa,wEAcZ,SAASC,GAAa9gE,EAAwBC,GACnD,MAAM8gE,GAAW,GAAK/gE,GAAOghE,MAAMJ,IACnC,IAAKG,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAP9gE,EAKT,OAFAD,GAAS+gE,EAAQ,GAETA,EAAQ,IACd,IAAK,KACH,OAAO/gE,EACT,IAAK,IACHA,GAAS,IAMb,OAAOC,EAAOD,CAChB,CAEA,MAAMihE,GAAgBxlD,IAAgBA,GAAK,EAQpC,SAASuvB,GAAkBhrC,EAAwCF,GACxE,MAAMkmB,EAAM,CAAC,EACPk7C,EAAW9iE,EAAS0B,GACpBvB,EAAO2iE,EAAW5iE,OAAOC,KAAKuB,GAASA,EACvCqhE,EAAO/iE,EAAS4B,GAClBkhE,EACEhlE,GAAQ+J,EAAejG,EAAM9D,GAAO8D,EAAMF,EAAM5D,KAChDA,GAAQ8D,EAAM9D,GAChB,IAAM8D,EAEV,IAAK,MAAM9D,KAAQqC,EACjBynB,EAAI9pB,GAAQ+kE,GAAaE,EAAKjlE,IAEhC,OAAO8pB,CACT,CAUO,SAAS8sB,GAAO9yC,GACrB,OAAOgrC,GAAkBhrC,EAAO,CAACuL,IAAK,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,KAAM,KAC5E,CASO,SAASunC,GAAcjzC,GAC5B,OAAOgrC,GAAkBhrC,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CAUO,SAASof,GAAUpf,GACxB,MAAMmgC,EAAM2S,GAAO9yC,GAKnB,OAHAmgC,EAAIntB,MAAQmtB,EAAIz0B,KAAOy0B,EAAI30B,MAC3B20B,EAAIltB,OAASktB,EAAI50B,IAAM40B,EAAI10B,OAEpB00B,CACT,CAUO,SAAS1W,GAAOtqB,EAA4BoqB,GACjDpqB,EAAUA,GAAW,CAAC,EACtBoqB,EAAWA,GAAY/qB,GAASgrB,KAEhC,IAAIvpB,EAAOgG,EAAe9G,EAAQc,KAAMspB,EAAStpB,MAE7B,kBAATA,IACTA,EAAOwzD,SAASxzD,EAAM,KAExB,IAAIiR,EAAQjL,EAAe9G,EAAQ+R,MAAOqY,EAASrY,OAC/CA,KAAW,GAAKA,GAAO8vD,MAAMH,MAC/Bv7D,QAAQC,KAAK,kCAAoC2L,EAAQ,KACzDA,OAAQ1Z,GAGV,MAAMgyB,EAAO,CACXq0C,OAAQ53D,EAAe9G,EAAQ0+D,OAAQt0C,EAASs0C,QAChDn0C,WAAYo3C,GAAa76D,EAAe9G,EAAQuqB,WAAYH,EAASG,YAAazpB,GAClFA,OACAiR,QACAkF,OAAQnQ,EAAe9G,EAAQiX,OAAQmT,EAASnT,QAChD2a,OAAQ,IAIV,OADAvH,EAAKuH,ODlHA,SAAsBvH,GAC3B,OAAKA,GAAQ5R,EAAc4R,EAAKvpB,OAAS2X,EAAc4R,EAAKq0C,QACnD,MAGDr0C,EAAKtY,MAAQsY,EAAKtY,MAAQ,IAAM,KACrCsY,EAAKpT,OAASoT,EAAKpT,OAAS,IAAM,IACnCoT,EAAKvpB,KAAO,MACZupB,EAAKq0C,MACT,CCyGgBuD,CAAa53C,GACpBA,CACT,CAaO,SAASptB,GAAQilE,EAAwB90D,EAAkB1L,EAAgBygE,GAChF,IACIhoE,EAAWsH,EAAcZ,EADzBuhE,GAAY,EAGhB,IAAKjoE,EAAI,EAAGsH,EAAOygE,EAAOtoE,OAAQO,EAAIsH,IAAQtH,EAE5C,GADA0G,EAAQqhE,EAAO/nE,QACD9B,IAAVwI,SAGYxI,IAAZ+U,GAA0C,oBAAVvM,IAClCA,EAAQA,EAAMuM,GACdg1D,GAAY,QAEA/pE,IAAVqJ,GAAuB/B,EAAQkB,KACjCA,EAAQA,EAAMa,EAAQb,EAAMjH,QAC5BwoE,GAAY,QAEA/pE,IAAVwI,GAIF,OAHIshE,IAASC,IACXD,EAAKC,WAAY,GAEZvhE,CAGb,CAQO,SAAS0sB,GAAU80C,EAAuCt1C,EAAwBD,GACvF,MAAM,IAAC1zB,EAAA,IAAKoC,GAAO6mE,EACblhD,EAASxL,EAAYoX,GAAQvxB,EAAMpC,GAAO,GAC1CkpE,EAAWA,CAACzhE,EAAe1F,IAAgB2xB,GAAyB,IAAVjsB,EAAc,EAAIA,EAAQ1F,EAC1F,MAAO,CACL/B,IAAKkpE,EAASlpE,GAAMD,KAAKsd,IAAI0K,IAC7B3lB,IAAK8mE,EAAS9mE,EAAK2lB,GAEvB,CAUO,SAAS7T,GAAci1D,EAAuBn1D,GACnD,OAAOjO,OAAOe,OAAOf,OAAOu5B,OAAO6pC,GAAgBn1D,EACrD,CCnLO,SAASw1B,GAIdz5B,GAKA,IAJA+E,EAAWvU,UAAAC,OAAA,QAAAvB,IAAAsB,UAAC,GAADA,UAAC,GAAD,CAAC,IAEZywB,EAA4BzwB,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,EAC5BmqE,EAAA7oE,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAY,IAAMwP,EAAO,GAEzB,MAAMs5D,GAJQ9oE,UAAAC,OAAA,EAAAD,UAAA,QAAAtB,IAIwB8Q,EACd,qBAAbihB,IACTA,EAAWs4C,GAAS,YAAav5D,IAEnC,MAAM0E,EAA6B,CACjC,CAAC80D,OAAOC,aAAc,SACtBn0D,YAAY,EACZo0D,QAAS15D,EACT25D,YAAaL,EACb/e,UAAWt5B,EACX24C,WAAYP,EACZ/pC,SAAWD,GAAqBoK,GAAgB,CAACpK,KAAUrvB,GAAS+E,EAAUu0D,EAAiBr4C,IAEjG,OAAO,IAAI44C,MAAMn1D,EAAO,CAItBo1D,eAAeA,CAAAnmE,EAAQC,YACdD,EAAOC,UACPD,EAAOomE,aACP/5D,EAAO,GAAGpM,IACV,GAMTpC,IAAIA,CAAAmC,EAAQC,IACHomE,GAAQrmE,EAAQC,GACrB,IAoUR,SACEA,EACAmR,EACA/E,EACAkc,GAEA,IAAIxkB,EACJ,IAAK,MAAMspC,KAAUj8B,EAEnB,GADArN,EAAQ6hE,GAASU,GAAQj5B,EAAQptC,GAAOoM,GACnB,qBAAVtI,EACT,OAAOwiE,GAAiBtmE,EAAM8D,GAC1ByiE,GAAkBn6D,EAAQkc,EAAOtoB,EAAM8D,GACvCA,CAGV,CAnVc0iE,CAAqBxmE,EAAMmR,EAAU/E,EAAQrM,KAOvD0mE,yBAAyBA,CAAA1mE,EAAQC,IACxB0mE,QAAQD,yBAAyB1mE,EAAO+lE,QAAQ,GAAI9lE,GAM7Dg8B,eAAiBA,IACR0qC,QAAQ1qC,eAAe5vB,EAAO,IAMvC/N,IAAIA,CAAA0B,EAAQC,IACH2mE,GAAqB5mE,GAAQqgB,SAASpgB,GAM/C4mE,QAAQ7mE,GACC4mE,GAAqB5mE,GAM9BhC,GAAAA,CAAIgC,EAAQC,EAAc8D,GACxB,MAAM+iE,EAAU9mE,EAAO+mE,WAAa/mE,EAAO+mE,SAAWrB,KAGtD,OAFA1lE,EAAOC,GAAQ6mE,EAAQ7mE,GAAQ8D,SACxB/D,EAAOomE,OACP,CACT,GAEJ,CAUO,SAASzgC,GAIdpd,EACAjY,EACA02D,EACAphC,GAEA,MAAM70B,EAA4B,CAChCY,YAAY,EACZqxB,OAAQza,EACR0+C,SAAU32D,EACV42D,UAAWF,EACX1mD,OAAQ,IAAIwjB,IACZlD,aAAcA,GAAarY,EAAOqd,GAClCzW,WAAapnB,GAAmB49B,GAAepd,EAAOxgB,EAAKi/D,EAAUphC,GACrEjK,SAAWD,GAAqBiK,GAAepd,EAAMoT,SAASD,GAAQprB,EAAS02D,EAAUphC,IAE3F,OAAO,IAAIsgC,MAAMn1D,EAAO,CAItBo1D,eAAeA,CAAAnmE,EAAQC,YACdD,EAAOC,UACPsoB,EAAMtoB,IACN,GAMTpC,IAAG,CAACmC,EAAQC,EAAcknE,IACjBd,GAAQrmE,EAAQC,GACrB,IAiFR,SACED,EACAC,EACAknE,GAEA,MAAM,OAACnkC,EAAM,SAAEikC,EAAQ,UAAEC,EAAWtmC,aAAcxD,GAAep9B,EACjE,IAAI+D,EAAQi/B,EAAO/iC,GAGfslC,GAAWxhC,IAAUq5B,EAAYiI,aAAaplC,KAChD8D,EAYJ,SACE9D,EACAmnE,EACApnE,EACAmnE,GAEA,MAAM,OAACnkC,EAAA,SAAQikC,EAAA,UAAUC,EAAS,OAAE5mD,GAAUtgB,EAC9C,GAAIsgB,EAAOhiB,IAAI2B,GACb,MAAM,IAAIm8B,MAAM,uBAAyB1wB,MAAMtM,KAAKkhB,GAAQwc,KAAK,MAAQ,KAAO78B,GAElFqgB,EAAOjiB,IAAI4B,GACX,IAAI8D,EAAQqjE,EAASH,EAAUC,GAAaC,GAC5C7mD,EAAOvhB,OAAOkB,GACVsmE,GAAiBtmE,EAAM8D,KAEzBA,EAAQyiE,GAAkBxjC,EAAO+iC,QAAS/iC,EAAQ/iC,EAAM8D,IAE1D,OAAOA,CACT,CA9BYsjE,CAAmBpnE,EAAM8D,EAAO/D,EAAQmnE,IAE9CtkE,EAAQkB,IAAUA,EAAMjH,SAC1BiH,EA6BJ,SACE9D,EACA8D,EACA/D,EACAslC,GAEA,MAAM,OAACtC,EAAM,SAAEikC,EAAQ,UAAEC,EAAWtmC,aAAcxD,GAAep9B,EAEjE,GAA8B,qBAAnBinE,EAASriE,OAAyB0gC,EAAYrlC,GACvD,OAAO8D,EAAMkjE,EAASriE,MAAQb,EAAMjH,QAC/B,GAAIqF,EAAS4B,EAAM,IAAK,CAE7B,MAAMkP,EAAMlP,EACNsI,EAAS22B,EAAO+iC,QAAQ3+D,QAAOqkD,GAAKA,IAAMx4C,IAChDlP,EAAQ,GACR,IAAK,MAAM3G,KAAQ6V,EAAK,CACtB,MAAMiyB,EAAWshC,GAAkBn6D,EAAQ22B,EAAQ/iC,EAAM7C,GACzD2G,EAAM3F,KAAKunC,GAAeT,EAAU+hC,EAAUC,GAAaA,EAAUjnE,GAAOm9B,GAC9E,EAEF,OAAOr5B,CACT,CAlDYujE,CAAcrnE,EAAM8D,EAAO/D,EAAQo9B,EAAYkI,cAErDihC,GAAiBtmE,EAAM8D,KAEzBA,EAAQ4hC,GAAe5hC,EAAOkjE,EAAUC,GAAaA,EAAUjnE,GAAOm9B,IAExE,OAAOr5B,CACT,CArGcwjE,CAAoBvnE,EAAQC,EAAMknE,KAO5CT,yBAAyBA,CAAA1mE,EAAQC,IACxBD,EAAO4gC,aAAaoB,QACvB2kC,QAAQroE,IAAIiqB,EAAOtoB,GAAQ,CAACi9D,YAAY,EAAMD,cAAc,QAAQ1hE,EACpEorE,QAAQD,yBAAyBn+C,EAAOtoB,GAM9Cg8B,eAAiBA,IACR0qC,QAAQ1qC,eAAe1T,GAMhCjqB,IAAIA,CAAA0B,EAAQC,IACH0mE,QAAQroE,IAAIiqB,EAAOtoB,GAM5B4mE,QAAUA,IACDF,QAAQE,QAAQt+C,GAMzBvqB,IAAG,CAACgC,EAAQC,EAAM8D,KAChBwkB,EAAMtoB,GAAQ8D,SACP/D,EAAOC,IACP,IAGb,CAKO,SAAS2gC,GACdrY,GAEY,IADZhmB,EAA+B1F,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,IAACilC,YAAY,EAAMC,WAAW,GAE7D,MAAM,YAACxtB,EAAchS,EAASu/B,WAAU,WAAErtB,EAAalS,EAASw/B,UAAS,SAAEylC,EAAWjlE,EAASy/B,SAAWzZ,EAC1G,MAAO,CACLyZ,QAASwlC,EACT1lC,WAAYvtB,EACZwtB,UAAWttB,EACX4wB,aAAcE,GAAWhxB,GAAeA,EAAc,IAAMA,EAC5D+wB,YAAaC,GAAW9wB,GAAcA,EAAa,IAAMA,EAE7D,CAEA,MAAM6xD,GAAUA,CAACj5B,EAAgB74B,IAAiB64B,EAASA,EAAS/M,GAAY9rB,GAAQA,EAClF+xD,GAAmBA,CAACtmE,EAAc8D,IAAmB5B,EAAS4B,IAAmB,aAAT9D,IAC1C,OAAjCoC,OAAO45B,eAAel4B,IAAmBA,EAAM/I,cAAgBqH,QAElE,SAASgkE,GACPrmE,EACAC,EACAE,GAEA,GAAIkC,OAAOg5B,UAAUo/B,eAAe/9D,KAAKsD,EAAQC,IAAkB,gBAATA,EACxD,OAAOD,EAAOC,GAGhB,MAAM8D,EAAQ5D,IAGd,OADAH,EAAOC,GAAQ8D,EACRA,CACT,CAmEA,SAAS0jE,GACPn6C,EACArtB,EACA8D,GAEA,OAAOwhC,GAAWjY,GAAYA,EAASrtB,EAAM8D,GAASupB,CACxD,CAEA,MAAMo6C,GAAWA,CAAC/kE,EAAwB4N,KAA8B,IAAR5N,EAAe4N,EAC5D,kBAAR5N,EAAmB6K,GAAiB+C,EAAQ5N,QAAOpH,EAE9D,SAASosE,GACP3pE,EACA4pE,EACAjlE,EACAklE,EACA9jE,GAEA,IAAK,MAAMwM,KAAUq3D,EAAc,CACjC,MAAMlsC,EAAQgsC,GAAS/kE,EAAK4N,GAC5B,GAAImrB,EAAO,CACT19B,EAAIK,IAAIq9B,GACR,MAAMpO,EAAWm6C,GAAgB/rC,EAAMkrB,UAAWjkD,EAAKoB,GACvD,GAAwB,qBAAbupB,GAA4BA,IAAa3qB,GAAO2qB,IAAau6C,EAGtE,OAAOv6C,OAEJ,IAAc,IAAVoO,GAA6C,qBAAnBmsC,GAAkCllE,IAAQklE,EAG7E,OAAO,IAEX,CACA,OAAO,CACT,CAEA,SAASrB,GACPoB,EACA1iC,EACAjlC,EACA8D,GAEA,MAAM+jE,EAAa5iC,EAAS8gC,YACtB14C,EAAWm6C,GAAgBviC,EAAS0hB,UAAW3mD,EAAM8D,GACrDgkE,EAAY,IAAIH,KAAiBE,GACjC9pE,EAAM,IAAI8lC,IAChB9lC,EAAIK,IAAI0F,GACR,IAAIpB,EAAMqlE,GAAiBhqE,EAAK+pE,EAAW9nE,EAAMqtB,GAAYrtB,EAAM8D,GACnE,OAAY,OAARpB,KAGoB,qBAAb2qB,GAA4BA,IAAartB,IAClD0C,EAAMqlE,GAAiBhqE,EAAK+pE,EAAWz6C,EAAU3qB,EAAKoB,GAC1C,OAARpB,KAICmjC,GAAgBp6B,MAAMtM,KAAKpB,GAAM,CAAC,IAAK8pE,EAAYx6C,GACxD,IAgBJ,SACE4X,EACAjlC,EACA8D,GAEA,MAAMwM,EAAS20B,EAAS+gC,aAClBhmE,KAAQsQ,IACZA,EAAOtQ,GAAQ,CAAC,GAElB,MAAMD,EAASuQ,EAAOtQ,GACtB,GAAI4C,EAAQ7C,IAAWmC,EAAS4B,GAE9B,OAAOA,EAET,OAAO/D,GAAU,CAAC,CACpB,CA/BUioE,CAAa/iC,EAAUjlC,EAAgB8D,KACjD,CAEA,SAASikE,GACPhqE,EACA+pE,EACAplE,EACA2qB,EACAlwB,GAEA,KAAOuF,GACLA,EAAMglE,GAAU3pE,EAAK+pE,EAAWplE,EAAK2qB,EAAUlwB,GAEjD,OAAOuF,CACT,CAoCA,SAASijE,GAASjjE,EAAa0J,GAC7B,IAAK,MAAMqvB,KAASrvB,EAAQ,CAC1B,IAAKqvB,EACH,SAEF,MAAM33B,EAAQ23B,EAAM/4B,GACpB,GAAqB,qBAAVoB,EACT,OAAOA,CAEX,CACF,CAEA,SAAS6iE,GAAqB5mE,GAC5B,IAAIsC,EAAOtC,EAAOomE,MAIlB,OAHK9jE,IACHA,EAAOtC,EAAOomE,MAKlB,SAAkC/5D,GAChC,MAAMrO,EAAM,IAAI8lC,IAChB,IAAK,MAAMpI,KAASrvB,EAClB,IAAK,MAAM1J,KAAON,OAAOC,KAAKo5B,GAAOt0B,QAAOukD,IAAMA,EAAEj3C,WAAW,OAC7D1W,EAAIK,IAAIsE,GAGZ,OAAO+I,MAAMtM,KAAKpB,EACpB,CAb0BkqE,CAAyBloE,EAAO+lE,UAEjDzjE,CACT,CAYO,SAAS6lE,GACd5iE,EACAuF,EACAvO,EACAoQ,GAEA,MAAM,OAACpG,GAAUhB,GACX,IAAC5C,EAAM,KAAO1H,KAAKkN,SACnB/B,EAAS,IAAIsF,MAAoBiB,GACvC,IAAItP,EAAWsH,EAAcC,EAAexH,EAE5C,IAAKC,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,IAAQtH,EACpCuH,EAAQvH,EAAId,EACZa,EAAO0N,EAAKlG,GACZwB,EAAO/I,GAAK,CACVwM,EAAGtD,EAAOmG,MAAMc,GAAiBpQ,EAAMuF,GAAMiC,IAGjD,OAAOwB,CACT,CClcA,MAAMgiE,GAAUh6D,OAAOg6D,SAAW,MAG5BC,GAAWA,CAAC3tD,EAAuBrd,IAAmCA,EAAIqd,EAAO5d,SAAW4d,EAAOrd,GAAGoe,MAAQf,EAAOrd,GACrHirE,GAAgBj+D,GAAuC,MAAdA,EAAoB,IAAM,IAElE,SAASk+D,GACdtsD,EACAusD,EACAC,EACAt5D,GAUA,MAAMujC,EAAWz2B,EAAWR,KAAO+sD,EAAcvsD,EAC3Cs+C,EAAUiO,EACVl9C,EAAOm9C,EAAWhtD,KAAO+sD,EAAcC,EACvCC,EAAMvqB,GAAsBoc,EAAS7nB,GACrCi2B,EAAMxqB,GAAsB7yB,EAAMivC,GAExC,IAAIqO,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GAGvBC,EAAMlvD,MAAMkvD,GAAO,EAAIA,EACvBC,EAAMnvD,MAAMmvD,GAAO,EAAIA,EAEvB,MAAMC,EAAK35D,EAAIy5D,EACTG,EAAK55D,EAAI05D,EAEf,MAAO,CACLn2B,SAAU,CACR/oC,EAAG4wD,EAAQ5wD,EAAIm/D,GAAMx9C,EAAK3hB,EAAI+oC,EAAS/oC,GACvCC,EAAG2wD,EAAQ3wD,EAAIk/D,GAAMx9C,EAAK1hB,EAAI8oC,EAAS9oC,IAEzC0hB,KAAM,CACJ3hB,EAAG4wD,EAAQ5wD,EAAIo/D,GAAMz9C,EAAK3hB,EAAI+oC,EAAS/oC,GACvCC,EAAG2wD,EAAQ3wD,EAAIm/D,GAAMz9C,EAAK1hB,EAAI8oC,EAAS9oC,IAG7C,CAsEO,SAASo/D,GAAoBtuD,GAAmD,IAA5BrQ,EAAAxN,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAuB,IAChF,MAAMosE,EAAYX,GAAaj+D,GACzB6+D,EAAYxuD,EAAO5d,OACnBqsE,EAAmBz9D,MAAMw9D,GAAW//D,KAAK,GACzCigE,EAAe19D,MAAMw9D,GAG3B,IAAI7rE,EAAGgsE,EAAkCC,EACrCC,EAAalB,GAAS3tD,EAAQ,GAElC,IAAKrd,EAAI,EAAGA,EAAI6rE,IAAa7rE,EAI3B,GAHAgsE,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS3tD,EAAQrd,EAAI,GAC7BisE,EAAL,CAIA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAWl/D,GAAai/D,EAAaj/D,GAGxD8+D,EAAO9rE,GAAoB,IAAfmsE,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,EAElGJ,EAAG/rE,GAAMgsE,EACJE,EACElkE,GAAK8jE,EAAO9rE,EAAI,MAAQgI,GAAK8jE,EAAO9rE,IAAO,GACzC8rE,EAAO9rE,EAAI,GAAK8rE,EAAO9rE,IAAM,EAFpB8rE,EAAO9rE,EAAI,GADN8rE,EAAO9rE,IAzFlC,SAAwBqd,EAAuByuD,EAAkBC,GAC/D,MAAMF,EAAYxuD,EAAO5d,OAEzB,IAAI2sE,EAAgBC,EAAeC,EAAcC,EAA0BN,EACvEC,EAAalB,GAAS3tD,EAAQ,GAClC,IAAK,IAAIrd,EAAI,EAAGA,EAAI6rE,EAAY,IAAK7rE,EACnCisE,EAAeC,EACfA,EAAalB,GAAS3tD,EAAQrd,EAAI,GAC7BisE,GAAiBC,IAIlB/f,GAAa2f,EAAO9rE,GAAI,EAAG+qE,IAC7BgB,EAAG/rE,GAAK+rE,EAAG/rE,EAAI,GAAK,GAItBosE,EAASL,EAAG/rE,GAAK8rE,EAAO9rE,GACxBqsE,EAAQN,EAAG/rE,EAAI,GAAK8rE,EAAO9rE,GAC3BusE,EAAmBvtE,KAAK+hB,IAAIqrD,EAAQ,GAAKptE,KAAK+hB,IAAIsrD,EAAO,GACrDE,GAAoB,IAIxBD,EAAO,EAAIttE,KAAK8hB,KAAKyrD,GACrBR,EAAG/rE,GAAKosE,EAASE,EAAOR,EAAO9rE,GAC/B+rE,EAAG/rE,EAAI,GAAKqsE,EAAQC,EAAOR,EAAO9rE,KAEtC,CAmEEwsE,CAAenvD,EAAQyuD,EAAQC,GAjEjC,SAAyB1uD,EAAuB0uD,GAA0C,IAA5B/+D,EAAAxN,UAAAC,OAAA,QAAAvB,IAAAsB,UAAA,GAAAA,UAAA,GAAuB,IACnF,MAAMosE,EAAYX,GAAaj+D,GACzB6+D,EAAYxuD,EAAO5d,OACzB,IAAIkkE,EAAeqI,EAAkCC,EACjDC,EAAalB,GAAS3tD,EAAQ,GAElC,IAAK,IAAIrd,EAAI,EAAGA,EAAI6rE,IAAa7rE,EAAG,CAIlC,GAHAgsE,EAAcC,EACdA,EAAeC,EACfA,EAAalB,GAAS3tD,EAAQrd,EAAI,IAC7BisE,EACH,SAGF,MAAM1tD,EAAS0tD,EAAaj/D,GACtByR,EAASwtD,EAAaL,GACxBI,IACFrI,GAASplD,EAASytD,EAAYh/D,IAAc,EAC5Ci/D,EAAa,MAAMj/D,KAAeuR,EAASolD,EAC3CsI,EAAa,MAAML,KAAentD,EAASklD,EAAQoI,EAAG/rE,IAEpDksE,IACFvI,GAASuI,EAAWl/D,GAAauR,GAAU,EAC3C0tD,EAAa,MAAMj/D,KAAeuR,EAASolD,EAC3CsI,EAAa,MAAML,KAAentD,EAASklD,EAAQoI,EAAG/rE,GAE1D,CACF,CAwCEysE,CAAgBpvD,EAAQ0uD,EAAI/+D,EAC9B,CAEA,SAAS0/D,GAAgBvlB,EAAYloD,EAAaoC,GAChD,OAAOrC,KAAKqC,IAAIrC,KAAKC,IAAIkoD,EAAI9lD,GAAMpC,EACrC,CA2BO,SAAS04C,GACdt6B,EACAxX,EACA6M,EACAlP,EACAwJ,GAEA,IAAIhN,EAAWsH,EAAc6W,EAAoBwuD,EAOjD,GAJI9mE,EAAQoX,WACVI,EAASA,EAAOtT,QAAQo9C,IAAQA,EAAG/oC,QAGE,aAAnCvY,EAAQowC,uBACV01B,GAAoBtuD,EAAQrQ,OACvB,CACL,IAAIyC,EAAOjM,EAAO6Z,EAAOA,EAAO5d,OAAS,GAAK4d,EAAO,GACrD,IAAKrd,EAAI,EAAGsH,EAAO+V,EAAO5d,OAAQO,EAAIsH,IAAQtH,EAC5Cme,EAAQd,EAAOrd,GACf2sE,EAAgBzB,GACdz7D,EACA0O,EACAd,EAAOre,KAAKC,IAAIe,EAAI,EAAGsH,GAAQ9D,EAAO,EAAI,IAAM8D,GAChDzB,EAAQmwC,SAEV73B,EAAMkoD,KAAOsG,EAAct3B,SAAS/oC,EACpC6R,EAAMooD,KAAOoG,EAAct3B,SAAS9oC,EACpC4R,EAAMmoD,KAAOqG,EAAc1+C,KAAK3hB,EAChC6R,EAAMqoD,KAAOmG,EAAc1+C,KAAK1hB,EAChCkD,EAAO0O,EAIPtY,EAAQyxC,iBA3Dd,SAAyBj6B,EAAuB3K,GAC9C,IAAI1S,EAAGsH,EAAM6W,EAAOyuD,EAAQC,EACxBC,EAAa3sD,GAAe9C,EAAO,GAAI3K,GAC3C,IAAK1S,EAAI,EAAGsH,EAAO+V,EAAO5d,OAAQO,EAAIsH,IAAQtH,EAC5C6sE,EAAaD,EACbA,EAASE,EACTA,EAAa9sE,EAAIsH,EAAO,GAAK6Y,GAAe9C,EAAOrd,EAAI,GAAI0S,GACtDk6D,IAGLzuD,EAAQd,EAAOrd,GACX6sE,IACF1uD,EAAMkoD,KAAOqG,GAAgBvuD,EAAMkoD,KAAM3zD,EAAKN,KAAMM,EAAKR,OACzDiM,EAAMooD,KAAOmG,GAAgBvuD,EAAMooD,KAAM7zD,EAAKT,IAAKS,EAAKP,SAEtD26D,IACF3uD,EAAMmoD,KAAOoG,GAAgBvuD,EAAMmoD,KAAM5zD,EAAKN,KAAMM,EAAKR,OACzDiM,EAAMqoD,KAAOkG,GAAgBvuD,EAAMqoD,KAAM9zD,EAAKT,IAAKS,EAAKP,SAG9D,CAwCImlC,CAAgBj6B,EAAQ3K,EAE5B,CC9MO,SAAS22B,KACd,MAAyB,qBAAX/pC,QAA8C,qBAAbqqB,QACjD,CAKO,SAASa,GAAeuiD,GAC7B,IAAI75D,EAAS65D,EAAQC,WAIrB,OAHI95D,GAAgC,wBAAtBA,EAAOgpD,aACnBhpD,EAAUA,EAAsB+5D,MAE3B/5D,CACT,CAOA,SAASg6D,GAAcC,EAA6BnkD,EAAmBokD,GACrE,IAAIC,EAYJ,MAX0B,kBAAfF,GACTE,EAAgBlT,SAASgT,EAAY,KAEJ,IAA7BA,EAAW3sD,QAAQ,OAErB6sD,EAAgBA,EAAiB,IAAOrkD,EAAKgkD,WAAWI,KAG1DC,EAAgBF,EAGXE,CACT,CAEA,MAAMC,GAAoBz6D,GACxBA,EAAQ06D,cAAcC,YAAYF,iBAAiBz6D,EAAS,MAM9D,MAAMgS,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAAS4oD,GAAmBC,EAA6B91D,EAAe+1D,GACtE,MAAMhgD,EAAS,CAAC,EAChBggD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI3tE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMoiB,EAAMyC,GAAU7kB,GACtB2tB,EAAOvL,GAAOk6C,WAAWoR,EAAO91D,EAAQ,IAAMwK,EAAMurD,KAAY,CAClE,CAGA,OAFAhgD,EAAOjU,MAAQiU,EAAOvb,KAAOub,EAAOzb,MACpCyb,EAAOhU,OAASgU,EAAO1b,IAAM0b,EAAOxb,OAC7Bwb,CACT,CAEA,MAAMigD,GAAeA,CAACthE,EAAWC,EAAW5J,KACzC2J,EAAI,GAAKC,EAAI,MAAQ5J,IAAWA,EAAwBkrE,YAuCpD,SAAS/rD,GACdjhB,EACAzC,GAEA,GAAI,WAAYyC,EACd,OAAOA,EAGT,MAAM,OAACumB,EAAA,wBAAQiD,GAA2BjsB,EACpCwZ,EAAQ01D,GAAiBlmD,GACzB0mD,EAAgC,eAApBl2D,EAAM8T,UAClBqiD,EAAWN,GAAmB71D,EAAO,WACrCo2D,EAAUP,GAAmB71D,EAAO,SAAU,UAC9C,EAACtL,EAAA,EAAGC,EAAA,IAAG+V,GA7Cf,SACE/J,EACA6O,GAMA,MAAM6mD,EAAU11D,EAAkB01D,QAC5Bp6C,EAAUo6C,GAAWA,EAAQxuE,OAASwuE,EAAQ,GAAK11D,GACnD,QAACM,EAAA,QAASC,GAAW+a,EAC3B,IACIvnB,EAAGC,EADH+V,GAAM,EAEV,GAAIsrD,GAAa/0D,EAASC,EAASP,EAAE5V,QACnC2J,EAAIuM,EACJtM,EAAIuM,MACC,CACL,MAAMyhC,EAAOnzB,EAAO8mD,wBACpB5hE,EAAIunB,EAAOs6C,QAAU5zB,EAAKnoC,KAC1B7F,EAAIsnB,EAAOu6C,QAAU7zB,EAAKtoC,IAC1BqQ,GAAM,EAER,MAAO,CAAChW,IAAGC,IAAG+V,MAChB,CAsBsB+rD,CAAkBxtE,EAAOumB,GACvCu+C,EAAUoI,EAAS37D,MAAQkQ,GAAO0rD,EAAQ57D,MAC1CwzD,EAAUmI,EAAS97D,KAAOqQ,GAAO0rD,EAAQ/7D,KAE/C,IAAI,MAACyH,EAAA,OAAOC,GAAUvb,EAKtB,OAJI0vE,IACFp0D,GAASq0D,EAASr0D,MAAQs0D,EAAQt0D,MAClCC,GAAUo0D,EAASp0D,OAASq0D,EAAQr0D,QAE/B,CACLrN,EAAGtN,KAAK4vB,OAAOtiB,EAAIq5D,GAAWjsD,EAAQ0N,EAAO1N,MAAQ2Q,GACrD9d,EAAGvN,KAAK4vB,OAAOriB,EAAIq5D,GAAWjsD,EAASyN,EAAOzN,OAAS0Q,GAE3D,CA6BA,MAAMikD,GAAUnsD,GAAcnjB,KAAK4vB,MAAU,GAAJzM,GAAU,GAG5C,SAASuF,GACdN,EACAmnD,EACAC,EACAl3D,GAEA,MAAMM,EAAQ01D,GAAiBlmD,GACzBsL,EAAU+6C,GAAmB71D,EAAO,UACpCyD,EAAW6xD,GAAct1D,EAAMyD,SAAU+L,EAAQ,gBAAkBu2C,GACnEriD,EAAY4xD,GAAct1D,EAAM0D,UAAW8L,EAAQ,iBAAmBu2C,GACtE8Q,EAxCR,SAA0BrnD,EAA2B1N,EAAeC,GAClE,IAAI0B,EAAkBC,EAEtB,QAAcpd,IAAVwb,QAAkCxb,IAAXyb,EAAsB,CAC/C,MAAM4Q,EAAYnD,GAAUoD,GAAepD,GAC3C,GAAKmD,EAGE,CACL,MAAMgwB,EAAOhwB,EAAU2jD,wBACjBQ,EAAiBpB,GAAiB/iD,GAClCokD,EAAkBlB,GAAmBiB,EAAgB,SAAU,SAC/DE,EAAmBnB,GAAmBiB,EAAgB,WAC5Dh1D,EAAQ6gC,EAAK7gC,MAAQk1D,EAAiBl1D,MAAQi1D,EAAgBj1D,MAC9DC,EAAS4gC,EAAK5gC,OAASi1D,EAAiBj1D,OAASg1D,EAAgBh1D,OACjE0B,EAAW6xD,GAAcwB,EAAerzD,SAAUkP,EAAW,eAC7DjP,EAAY4xD,GAAcwB,EAAepzD,UAAWiP,EAAW,qBAV/D7Q,EAAQ0N,EAAOsD,YACf/Q,EAASyN,EAAOynD,aAYpB,MAAO,CACLn1D,QACAC,SACA0B,SAAUA,GAAYsiD,GACtBriD,UAAWA,GAAaqiD,GAE5B,CAewBmR,CAAiB1nD,EAAQmnD,EAASC,GACxD,IAAI,MAAC90D,EAAA,OAAOC,GAAU80D,EAEtB,GAAwB,gBAApB72D,EAAM8T,UAA6B,CACrC,MAAMsiD,EAAUP,GAAmB71D,EAAO,SAAU,SAC9Cm2D,EAAWN,GAAmB71D,EAAO,WAC3C8B,GAASq0D,EAASr0D,MAAQs0D,EAAQt0D,MAClCC,GAAUo0D,EAASp0D,OAASq0D,EAAQr0D,OAEtCD,EAAQ1a,KAAKqC,IAAI,EAAGqY,EAAQgZ,EAAQhZ,OACpCC,EAAS3a,KAAKqC,IAAI,EAAGiW,EAAcoC,EAAQpC,EAAcqC,EAAS+Y,EAAQ/Y,QAC1ED,EAAQ40D,GAAOtvE,KAAKC,IAAIya,EAAO2B,EAAUozD,EAAcpzD,WACvD1B,EAAS20D,GAAOtvE,KAAKC,IAAI0a,EAAQ2B,EAAWmzD,EAAcnzD,YACtD5B,IAAUC,IAGZA,EAAS20D,GAAO50D,EAAQ,IAU1B,YAPmCxb,IAAZqwE,QAAsCrwE,IAAbswE,IAE1Bl3D,GAAem3D,EAAc90D,QAAUA,EAAS80D,EAAc90D,SAClFA,EAAS80D,EAAc90D,OACvBD,EAAQ40D,GAAOtvE,KAAKqE,MAAMsW,EAASrC,KAG9B,CAACoC,QAAOC,SACjB,CAQO,SAAS2xB,GACdltC,EACA2wE,EACAC,GAEA,MAAMC,EAAaF,GAAc,EAC3BG,EAAelwE,KAAKqE,MAAMjF,EAAMub,OAASs1D,GACzCE,EAAcnwE,KAAKqE,MAAMjF,EAAMsb,MAAQu1D,GAE7C7wE,EAAMub,OAAS3a,KAAKqE,MAAMjF,EAAMub,QAChCvb,EAAMsb,MAAQ1a,KAAKqE,MAAMjF,EAAMsb,OAE/B,MAAM0N,EAAShpB,EAAMgpB,OAUrB,OALIA,EAAOxP,QAAUo3D,IAAgB5nD,EAAOxP,MAAM+B,SAAWyN,EAAOxP,MAAM8B,SACxE0N,EAAOxP,MAAM+B,OAAS,GAAGvb,EAAMub,WAC/ByN,EAAOxP,MAAM8B,MAAQ,GAAGtb,EAAMsb,YAG5Btb,EAAMisB,0BAA4B4kD,GAC/B7nD,EAAOzN,SAAWu1D,GAClB9nD,EAAO1N,QAAUy1D,KACtB/wE,EAAMisB,wBAA0B4kD,EAChC7nD,EAAOzN,OAASu1D,EAChB9nD,EAAO1N,MAAQy1D,EACf/wE,EAAMsM,IAAI0kE,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CAOa,MAAAtmD,GAAgC,WAC3C,IAAI0mD,GAAmB,EACvB,IACE,MAAMxpE,EAAU,CACd,WAAI+iB,GAEF,OADAymD,GAAmB,GACZ,CACT,GAGEhmC,OACF/pC,OAAOgoB,iBAAiB,OAAQ,KAAMzhB,GACtCvG,OAAOkoB,oBAAoB,OAAQ,KAAM3hB,GAE7C,CAAE,MAAO0S,IAGT,OAAO82D,CACT,CAlB6C,GA8BtC,SAASzjD,GACd/Y,EACAusB,GAEA,MAAM14B,EAzOD,SAAkB4Y,EAAiB8f,GACxC,OAAOkuC,GAAiBhuD,GAAIgwD,iBAAiBlwC,EAC/C,CAuOgBtsB,CAASD,EAASusB,GAC1BqoC,EAAU/gE,GAASA,EAAMghE,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAKvpE,CACjC,CC9RO,SAASg6C,GAAa1b,EAAWC,EAAW3qB,EAAWlK,GAC5D,MAAO,CACL0E,EAAGkwB,EAAGlwB,EAAIwF,GAAK2qB,EAAGnwB,EAAIkwB,EAAGlwB,GACzBC,EAAGiwB,EAAGjwB,EAAIuF,GAAK2qB,EAAGlwB,EAAIiwB,EAAGjwB,GAE7B,CAKO,SAASyrC,GACdxb,EACAC,EACA3qB,EAAWlK,GAEX,MAAO,CACL0E,EAAGkwB,EAAGlwB,EAAIwF,GAAK2qB,EAAGnwB,EAAIkwB,EAAGlwB,GACzBC,EAAY,WAAT3E,EAAoBkK,EAAI,GAAM0qB,EAAGjwB,EAAIkwB,EAAGlwB,EAC9B,UAAT3E,EAAmBkK,EAAI,EAAI0qB,EAAGjwB,EAAIkwB,EAAGlwB,EACnCuF,EAAI,EAAI2qB,EAAGlwB,EAAIiwB,EAAGjwB,EAE5B,CAKO,SAAS0rC,GAAqBzb,EAAiBC,EAAiB3qB,EAAWlK,GAChF,MAAM2nE,EAAM,CAACjjE,EAAGkwB,EAAG8pC,KAAM/5D,EAAGiwB,EAAGgqC,MACzBgJ,EAAM,CAACljE,EAAGmwB,EAAG4pC,KAAM95D,EAAGkwB,EAAG8pC,MACzB5rD,EAAIu9B,GAAa1b,EAAI+yC,EAAKz9D,GAC1BC,EAAImmC,GAAaq3B,EAAKC,EAAK19D,GAC3B23B,EAAIyO,GAAas3B,EAAK/yC,EAAI3qB,GAC1B+zB,EAAIqS,GAAav9B,EAAG5I,EAAGD,GACvByG,EAAI2/B,GAAanmC,EAAG03B,EAAG33B,GAC7B,OAAOomC,GAAarS,EAAGttB,EAAGzG,EAC5B,CChCA,MAAM29D,GAAwB,SAASC,EAAeh2D,GACpD,MAAO,CACLpN,EAAEA,GACOojE,EAAQA,EAAQh2D,EAAQpN,EAEjC2xC,QAAAA,CAAS35B,GACP5K,EAAQ4K,CACV,EACAsW,UAAUtK,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtC+tB,MAAMA,CAAA/xC,EAAG5F,IACA4F,EAAI5F,EAEb+2C,WAAWA,CAAAnxC,EAAGgwC,IACLhwC,EAAIgwC,EAGjB,EAEMqzB,GAAwB,WAC5B,MAAO,CACLrjE,EAAEA,GACOA,EAET2xC,QAAAA,CAAS35B,GAAI,EAEbsW,UAAUtK,GACDA,EAET+tB,MAAMA,CAAA/xC,EAAG5F,IACA4F,EAAI5F,EAEb+2C,WAAWA,CAAAnxC,EAAGsjE,IACLtjE,EAGb,EAEO,SAASixC,GAAcF,EAAcqyB,EAAeh2D,GACzD,OAAO2jC,EAAMoyB,GAAsBC,EAAOh2D,GAASi2D,IACrD,CAEO,SAAS7xB,GAAsBpzC,EAA+BmlE,GACnE,IAAIj4D,EAA4Bk4D,EACd,QAAdD,GAAqC,QAAdA,IACzBj4D,EAAQlN,EAAI0c,OAAOxP,MACnBk4D,EAAW,CACTl4D,EAAM03D,iBAAiB,aACvB13D,EAAMm4D,oBAAoB,cAG5Bn4D,EAAMo4D,YAAY,YAAaH,EAAW,aACzCnlE,EAAiDulE,kBAAoBH,EAE1E,CAEO,SAASjxB,GAAqBn0C,EAA+BolE,QACjD5xE,IAAb4xE,WACMplE,EAAiDulE,kBACzDvlE,EAAI0c,OAAOxP,MAAMo4D,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CC/DA,SAASI,GAAW9wC,GAClB,MAAiB,UAAbA,EACK,CACL+wC,QAASv1D,GACTw1D,QAASxR,GACTyR,UAAWxR,IAGR,CACLsR,QAASv7B,GACTw7B,QAASA,CAACz1D,EAAG5I,IAAM4I,EAAI5I,EACvBs+D,UAAW/jE,GAAKA,EAEpB,CAEA,SAASgkE,GAAiBC,GAAkC,IAAlC,MAACrxE,EAAK,IAAE+H,EAAG,MAAEqI,EAAK,KAAE9L,EAAI,MAAEoU,GAAM24D,EACxD,MAAO,CACLrxE,MAAOA,EAAQoQ,EACfrI,IAAKA,EAAMqI,EACX9L,KAAMA,IAASyD,EAAM/H,EAAQ,GAAKoQ,IAAU,EAC5CsI,QAEJ,CA4CO,SAAS44D,GAAc5yD,EAASP,EAAQ+7B,GAC7C,IAAKA,EACH,MAAO,CAACx7B,GAGV,MAAM,SAACwhB,EAAUlgC,MAAOuxE,EAAYxpE,IAAKypE,GAAYt3B,EAC/C9pC,EAAQ+N,EAAO5d,QACf,QAAC2wE,EAAA,QAASD,EAAA,UAASE,GAAaH,GAAW9wC,IAC3C,MAAClgC,EAAA,IAAO+H,EAAA,KAAKzD,EAAA,MAAMoU,GAlD3B,SAAoBgG,EAASP,EAAQ+7B,GACnC,MAAM,SAACha,EAAUlgC,MAAOuxE,EAAYxpE,IAAKypE,GAAYt3B,GAC/C,QAAC+2B,EAAO,UAAEE,GAAaH,GAAW9wC,GAClC9vB,EAAQ+N,EAAO5d,OAErB,IACIO,EAAGsH,GADH,MAACpI,EAAK,IAAE+H,EAAA,KAAKzD,GAAQoa,EAGzB,GAAIpa,EAAM,CAGR,IAFAtE,GAASoQ,EACTrI,GAAOqI,EACFtP,EAAI,EAAGsH,EAAOgI,EAAOtP,EAAIsH,GACvB6oE,EAAQE,EAAUhzD,EAAOne,EAAQoQ,GAAO8vB,IAAYqxC,EAAYC,KADjC1wE,EAIpCd,IACA+H,IAEF/H,GAASoQ,EACTrI,GAAOqI,EAMT,OAHIrI,EAAM/H,IACR+H,GAAOqI,GAEF,CAACpQ,QAAO+H,MAAKzD,OAAMoU,MAAOgG,EAAQhG,MAC3C,CAwBoC+4D,CAAW/yD,EAASP,EAAQ+7B,GAExDzrB,EAAS,GACf,IAEIjnB,EAAOyX,EAAOyyD,EAFdC,GAAS,EACTC,EAAW,KAGf,MAEMC,EAAcA,IAAMF,GAFEV,EAAQM,EAAYG,EAAWlqE,IAA6C,IAAnC0pE,EAAQK,EAAYG,GAGnFI,EAAaA,KAAOH,GAF6B,IAA7BT,EAAQM,EAAUhqE,IAAgBypE,EAAQO,EAAUE,EAAWlqE,GAIzF,IAAK,IAAI1G,EAAId,EAAOuQ,EAAOvQ,EAAOc,GAAKiH,IAAOjH,EAC5Cme,EAAQd,EAAOrd,EAAIsP,GAEf6O,EAAMC,OAIV1X,EAAQ2pE,EAAUlyD,EAAMihB,IAEpB14B,IAAUkqE,IAIdC,EAASV,EAAQzpE,EAAO+pE,EAAYC,GAEnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BV,EAAQ1pE,EAAO+pE,GAAoBzwE,EAAIyP,GAGnC,OAAbqhE,GAAqBE,MACvBrjD,EAAO5sB,KAAKuvE,GAAiB,CAACpxE,MAAO4xE,EAAU7pE,IAAKjH,EAAGwD,OAAM8L,QAAOsI,WACpEk5D,EAAW,MAEbrhE,EAAOzP,EACP4wE,EAAYlqE,IAOd,OAJiB,OAAboqE,GACFnjD,EAAO5sB,KAAKuvE,GAAiB,CAACpxE,MAAO4xE,EAAU7pE,MAAKzD,OAAM8L,QAAOsI,WAG5D+V,CACT,CAYO,SAASmqB,GAAe16B,EAAMg8B,GACnC,MAAMzrB,EAAS,GACTupB,EAAW95B,EAAK85B,SAEtB,IAAK,IAAIl3C,EAAI,EAAGA,EAAIk3C,EAASz3C,OAAQO,IAAK,CACxC,MAAMixE,EAAMT,GAAct5B,EAASl3C,GAAIod,EAAKC,OAAQ+7B,GAChD63B,EAAIxxE,QACNkuB,EAAO5sB,QAAQkwE,EAEnB,CACA,OAAOtjD,CACT,CAsFO,SAASiqB,GAAiBx6B,EAAM8zD,GACrC,MAAM7zD,EAASD,EAAKC,OACdJ,EAAWG,EAAKvX,QAAQoX,SACxB3N,EAAQ+N,EAAO5d,OAErB,IAAK6P,EACH,MAAO,GAGT,MAAM9L,IAAS4Z,EAAK7Z,OACd,MAACrE,EAAA,IAAO+H,GA3FhB,SAAyBoW,EAAQ/N,EAAO9L,EAAMyZ,GAC5C,IAAI/d,EAAQ,EACR+H,EAAMqI,EAAQ,EAElB,GAAI9L,IAASyZ,EAEX,KAAO/d,EAAQoQ,IAAU+N,EAAOne,GAAOkf,MACrClf,IAKJ,KAAOA,EAAQoQ,GAAS+N,EAAOne,GAAOkf,MACpClf,IAWF,IAPAA,GAASoQ,EAEL9L,IAEFyD,GAAO/H,GAGF+H,EAAM/H,GAASme,EAAOpW,EAAMqI,GAAO8O,MACxCnX,IAMF,OAFAA,GAAOqI,EAEA,CAACpQ,QAAO+H,MACjB,CA2DuBkqE,CAAgB9zD,EAAQ/N,EAAO9L,EAAMyZ,GAE1D,IAAiB,IAAbA,EACF,OAAOm0D,GAAch0D,EAAM,CAAC,CAACle,QAAO+H,MAAKzD,SAAQ6Z,EAAQ6zD,GAK3D,OAAOE,GAAch0D,EA1DvB,SAAuBC,EAAQne,EAAOmC,EAAKmC,GACzC,MAAM8L,EAAQ+N,EAAO5d,OACfkuB,EAAS,GACf,IAEI1mB,EAFA8mB,EAAO7uB,EACPuQ,EAAO4N,EAAOne,GAGlB,IAAK+H,EAAM/H,EAAQ,EAAG+H,GAAO5F,IAAO4F,EAAK,CACvC,MAAM7F,EAAMic,EAAOpW,EAAMqI,GACrBlO,EAAIgd,MAAQhd,EAAIG,KACbkO,EAAK2O,OACR5a,GAAO,EACPmqB,EAAO5sB,KAAK,CAAC7B,MAAOA,EAAQoQ,EAAOrI,KAAMA,EAAM,GAAKqI,EAAO9L,SAE3DtE,EAAQ6uB,EAAO3sB,EAAIG,KAAO0F,EAAM,OAGlC8mB,EAAO9mB,EACHwI,EAAK2O,OACPlf,EAAQ+H,IAGZwI,EAAOrO,CACT,CAMA,OAJa,OAAT2sB,GACFJ,EAAO5sB,KAAK,CAAC7B,MAAOA,EAAQoQ,EAAOrI,IAAK8mB,EAAOze,EAAO9L,SAGjDmqB,CACT,CA4B6B0jD,CAAch0D,EAAQne,EAFrC+H,EAAM/H,EAAQ+H,EAAMqI,EAAQrI,IACjBmW,EAAKm6B,WAAuB,IAAVr4C,GAAe+H,IAAQqI,EAAQ,GACI+N,EAAQ6zD,EACtF,CAQA,SAASE,GAAch0D,EAAM85B,EAAU75B,EAAQ6zD,GAC7C,OAAKA,GAAmBA,EAAep/C,YAAezU,EAaxD,SAAyBD,EAAM85B,EAAU75B,EAAQ6zD,GAC/C,MAAMI,EAAel0D,EAAKzY,OAAOwK,aAC3BoiE,EAAYC,GAAUp0D,EAAKvX,UAC1B6X,cAAe7V,EAAchC,SAAS,SAACoX,IAAaG,EACrD9N,EAAQ+N,EAAO5d,OACfkuB,EAAS,GACf,IAAI8jD,EAAYF,EACZryE,EAAQg4C,EAAS,GAAGh4C,MACpBc,EAAId,EAER,SAASwyE,EAAStjB,EAAG71C,EAAGvG,EAAG2/D,GACzB,MAAMC,EAAM30D,GAAY,EAAI,EAC5B,GAAImxC,IAAM71C,EAAV,CAKA,IADA61C,GAAK9+C,EACE+N,EAAO+wC,EAAI9+C,GAAO8O,MACvBgwC,GAAKwjB,EAEP,KAAOv0D,EAAO9E,EAAIjJ,GAAO8O,MACvB7F,GAAKq5D,EAEHxjB,EAAI9+C,IAAUiJ,EAAIjJ,IACpBqe,EAAO5sB,KAAK,CAAC7B,MAAOkvD,EAAI9+C,EAAOrI,IAAKsR,EAAIjJ,EAAO9L,KAAMwO,EAAG4F,MAAO+5D,IAC/DF,EAAYE,EACZzyE,EAAQqZ,EAAIjJ,GAEhB,CAEA,IAAK,MAAMsO,KAAWs5B,EAAU,CAC9Bh4C,EAAQ+d,EAAW/d,EAAQ0e,EAAQ1e,MACnC,IACI0Y,EADAnI,EAAO4N,EAAOne,EAAQoQ,GAE1B,IAAKtP,EAAId,EAAQ,EAAGc,GAAK4d,EAAQ3W,IAAKjH,IAAK,CACzC,MAAMmnD,EAAK9pC,EAAOrd,EAAIsP,GACtBsI,EAAQ45D,GAAUN,EAAep/C,WAAW3e,GAAcm+D,EAAc,CACtE/yE,KAAM,UACNszE,GAAIpiE,EACJ+sB,GAAI2qB,EACJ2qB,aAAc9xE,EAAI,GAAKsP,EACvByiE,YAAa/xE,EAAIsP,EACjBzH,mBAEEmqE,GAAap6D,EAAO65D,IACtBC,EAASxyE,EAAOc,EAAI,EAAG4d,EAAQpa,KAAMiuE,GAEvChiE,EAAO03C,EACPsqB,EAAY75D,CACd,CACI1Y,EAAQc,EAAI,GACd0xE,EAASxyE,EAAOc,EAAI,EAAG4d,EAAQpa,KAAMiuE,EAEzC,CAEA,OAAO9jD,CACT,CAlESskD,CAAgB70D,EAAM85B,EAAU75B,EAAQ6zD,GAFtCh6B,CAGX,CAmEA,SAASs6B,GAAU3rE,GACjB,MAAO,CACLkS,gBAAiBlS,EAAQkS,gBACzBq9B,eAAgBvvC,EAAQuvC,eACxBlb,WAAYr0B,EAAQq0B,WACpBE,iBAAkBv0B,EAAQu0B,iBAC1B6Z,gBAAiBpuC,EAAQouC,gBACzB77B,YAAavS,EAAQuS,YACrBH,YAAapS,EAAQoS,YAEzB,CAEA,SAAS+5D,GAAap6D,EAAO65D,GAC3B,IAAKA,EACH,OAAO,EAET,MAAM/9D,EAAQ,GACRw+D,EAAW,SAAS5sE,EAAKoB,GAC7B,OAAKq8D,GAAoBr8D,IAGpBgN,EAAMsP,SAAStc,IAClBgN,EAAM3S,KAAK2F,GAENgN,EAAM8M,QAAQ9Z,IALZA,CAMX,EACA,OAAO08D,KAAKC,UAAUzrD,EAAOs6D,KAAc9O,KAAKC,UAAUoO,EAAWS,EACvE,qEC/VA,MAAMC,EAAsB,QAErB,SAASC,EAAgBC,EAAsB3rE,GACjC,oBAAR2rE,EACTA,EAAI3rE,GACK2rE,IACTA,EAAInV,QAAUx2D,EAElB,CAcO,SAAS4rE,EAKdC,EACAC,GAEAD,EAAYziE,OAAS0iE,CACvB,CAEO,SAASC,EAKdF,EACAG,GACA,IAAAC,EAAAnzE,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAe2yE,EAEf,MAAMS,EAA8C,GAEpDL,EAAY7kE,SAAWglE,EAAa/6D,KACjCk7D,IAEC,MAAMC,EAAiBP,EAAY7kE,SAASqlE,MACzC5mE,GACCA,EAAQwmE,KAAkBE,EAAYF,KAI1C,OACGG,GACAD,EAAYplE,OACbmlE,EAAc5vD,SAAS8vD,IAKzBF,EAAc7xE,KAAK+xE,GAEnB9tE,OAAOe,OAAO+sE,EAAgBD,GAEvBC,GAPE,IAAKD,EAOP,GAGb,CAEO,SAASG,EAIdvlE,GAAuC,IAAAklE,EAAAnzE,UAAAC,OAAA,YAAAD,UAAA,GAAAA,UAAA,GAAe2yE,EACtD,MAAMc,EAA4C,CAChDnjE,OAAQ,GACRpC,SAAU,IAMZ,OAHA4kE,EAAUW,EAAUxlE,EAAKqC,QACzB2iE,EAAYQ,EAAUxlE,EAAKC,SAAUilE,GAE9BM,CACT,CCnFA,SAASC,EAKP1sE,EACA6rE,GAEA,MAAM,OACJ14D,EAAS,IAAG,MACZD,EAAQ,WACRy5D,GAAS,EAAK,aACdR,EAAA,KACAp0E,EAAA,KACAkP,EAAA,QACA5H,EAAA,QACA0R,EAAU,GAAE,gBACZ67D,EAAA,WACAC,KACGC,GACD9sE,EACE+sE,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAWD,EAAAA,EAAAA,UAEXE,EAAcA,KACbH,EAAUrW,UAEfuW,EAASvW,QAAU,IAAIyW,EAAAA,GAAQJ,EAAUrW,QAAS,CAChD3+D,OACAkP,KAAMulE,EAAUvlE,EAAMklE,GACtB9sE,QAASA,GAAW,IAAKA,GACzB0R,YAGF66D,EAAaC,EAAKoB,EAASvW,SAAQ,EAG/B0W,EAAeA,KACnBxB,EAAaC,EAAK,MAEdoB,EAASvW,UACXuW,EAASvW,QAAQ3tB,UACjBkkC,EAASvW,QAAU,OA8CvB,OA1CA2W,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASvW,SAAWr3D,GDtChC,SAILzH,EAAoC01E,GACpC,MAAMjuE,EAAUzH,EAAMyH,QAElBA,GAAWiuE,GACb9uE,OAAOe,OAAOF,EAASiuE,EAE3B,CC6BMC,CAAWN,EAASvW,QAASr3D,KAE9B,CAACstE,EAAQttE,KAEZguE,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASvW,SACtBoV,EAAUmB,EAASvW,QAAQx4D,OAAO+I,KAAMA,EAAKqC,UAE9C,CAACqjE,EAAQ1lE,EAAKqC,UAEjB+jE,EAAAA,EAAAA,YAAU,MACHV,GAAUM,EAASvW,SAAWzvD,EAAKC,UACtC+kE,EAAYgB,EAASvW,QAAQx4D,OAAO+I,KAAMA,EAAKC,SAAUilE,KAE1D,CAACQ,EAAQ1lE,EAAKC,YAEjBmmE,EAAAA,EAAAA,YAAU,KACHJ,EAASvW,UAEViW,GACFS,IACAtT,WAAWoT,IAEXD,EAASvW,QAAQn5D,OAAOsvE,MAEzB,CAACF,EAAQttE,EAAS4H,EAAKqC,OAAQrC,EAAKC,SAAU2lE,KAEjDQ,EAAAA,EAAAA,YAAU,KACHJ,EAASvW,UAEd0W,IACAtT,WAAWoT,GAAA,GACV,CAACn1E,KAEJs1E,EAAAA,EAAAA,YAAU,KACRH,IAEO,IAAME,MACZ,IAGDI,EAAAA,cAAC,SAAAhvE,OAAAe,OAAA,CACCssE,IAAKkB,EACLU,KAAK,MACLt6D,OAAQA,EACRD,MAAOA,GACH45D,GAEHF,EAGP,CAEO,MAAMtpC,GAAQoqC,EAAAA,EAAAA,YAAWhB,GC7FhC,SAASiB,EACP51E,EACA61E,GAIA,OAFAT,EAAAA,GAAQj1C,SAAS01C,IAEVF,EAAAA,EAAAA,aACJ,CAAA1tE,EAAO6rE,IAAQ2B,EAAAA,cAAClqC,EAAU9kC,OAAAe,OAAA,GAAAS,EAAA,CAAO6rE,IAAKA,EAAK9zE,KAAMA,MAEtD,OAEa81E,EAAuBF,EAAiB,OAAQp3D,EAAAA,IAMhDu3D,EAA2BH,EACtC,WACA19D,EAAAA","sources":["../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","arguments","length","Date","now","remaining","running","items","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","animations","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","fill","isPluginEnabled","console","warn","updateIndex","dataset","getDataset","chooseId","x","y","r","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","iAxisKey","vAxisKey","adata","Array","convertObjectDataToArray","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","l","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","createContext","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","DoughnutController","animateRotate","animateScale","numbers","cutout","rotation","circumference","radius","spacing","_scriptable","name","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","getDataVisibility","onClick","e","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","TAU","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","width","height","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","a","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","isNaN","abs","formatNumber","locale","borderAlign","hoverBorderWidth","offset","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","_index_","_value_","line","points","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","point","skip","nullData","isNullOrUndef","iPixel","getPixelForValue","vPixel","getBasePixel","border","firstPoint","lastPoint","updateControlPoints","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","_isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","indexOf","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getDistanceMetricForAxis","minDistance","center","getCenterPoint","distance","getNearestItems","getProps","getAngleFromPoint","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","v","pos","filterDynamicPositionByAxis","box","sortByWeight","sort","v0","v1","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","display","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","supportsEventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","ret","autoSkip","ticks","tickOpts","determinedMaxTicks","tickLength","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","last","newTicks","next","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","epsilon","lineValue","getPixelForTick","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lineHeight","titleAlign","align","_toLeftRightCenter","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","beginAtZero","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","grid","title","toDegrees","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","_measureText","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","getPixelForDecimal","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","backdrop","tickTextAlign","showLabelBackdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","getLineWidthForValue","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","titleX","titleY","_alignStartEnd","titleArgs","tz","gz","bz","prototype","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","itemDefaults","merge","defaultRoutes","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","routeDefaults","descriptors","describe","registerDefaults","overrides","unregister","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","toLowerCase","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","boundDs","d","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","mergeIf","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","obj","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","isFunction","hasFunction","needContext","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","_isDomSupported","getElementById","instances","getChart","c","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","onHover","parseBorderRadius$1","angleDelta","o","borderRadius","_readValueToProps","halfThickness","innerLimit","computeOuterLimit","val","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","pixelMargin","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","closePath","fullCircles","borderJoinStyle","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","radiusOffset","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","capBezierPoints","_fullLoop","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_steppedInterpolation","_bezierInterpolation","_pointInLine","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","base","half","skipOrLimit","boundingRects","bounds","maxW","maxH","borderSkipped","toTRBL","parseBorderWidth","enableBorderRadius","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","inflateAmount","addRectPath","addRoundedRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","overrideTextDirection","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","drawLegendBox","_textX","strikethrough","fillText","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","noop","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","_ref7","rad","ratio","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","niceNum","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","tickValue","generateTicks$1","_setMinAndMaxByKey","format","LinearScale","Ticks","formatters","numeric","logarithmic","lim","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","f","hex","h1","h2","eq","g","isShort","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","unpacked","tkeys","ok","nk","replace","parseInt","unpack","RGB_RE","modHSL","tmp","clone","fromObject","input","functionParse","rgbParse","Color","hexParse","_rgb","_valid","rgbString","hslString","c2","w2","w1","rgb1","rgb2","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","toString","defaultValue","dimension","endsWith","parseFloat","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","sources","merger","current","_mergerIf","hasOwnProperty","keyResolvers","part","_splitKey","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","log10","roundedRange","niceRange","fraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","_normalizeAngle","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_lookup","table","cmp","mid","ti","_filterBetween","arrayEvents","_chartjs","defineProperty","configurable","enumerable","object","stub","_arrayUnique","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","intlCache","num","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","significand","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","interaction","scopeObject","targetScopeObject","privateName","defineProperties","writable","appliers","minor","longest","_longestText","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","setRenderOpts","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","toFontString","inputs","info","cacheable","minmax","keepZero","parentContext","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","getValue","_resolveScriptable","_resolveArray","_resolveWithContext","_allKeys","resolveFallback","getScope","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","monotoneCompute","capControlPoint","controlPoints","inArea","inAreaPrev","inAreaNext","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","borderBox","paddings","borders","touches","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","getPropertyValue","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","sub","segmentOptions","findStartAndEnd","splitByStyles","solidSegments","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","replacer","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line","Doughnut"],"sourceRoot":""}