{"version":3,"file":"static/js/6873.9b0c2847.chunk.js","mappings":"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","sources":["../node_modules/react-timeago/es6/dateParser.js","../node_modules/react-timeago/es6/defaultFormatter.js","../node_modules/react-timeago/es6/index.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["export default function dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","export default function defaultFormatter(value, _unit, suffix) {\n  const unit = value !== 1 ? _unit + 's' : _unit;\n  return value + ' ' + unit + ' ' + suffix;\n}","function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport dateParser from './dateParser';\nimport defaultFormatter from './defaultFormatter';\n// Just some simple constants for readability\nconst MINUTE = 60;\nconst HOUR = MINUTE * 60;\nconst DAY = HOUR * 24;\nconst WEEK = DAY * 7;\nconst MONTH = DAY * 30;\nconst YEAR = DAY * 365;\nconst defaultNow = () => Date.now();\nexport default function TimeAgo({\n  date,\n  formatter = defaultFormatter,\n  component = 'time',\n  live = true,\n  minPeriod = 0,\n  maxPeriod = WEEK,\n  title,\n  now = defaultNow,\n  ...passDownProps\n}) {\n  const [timeNow, setTimeNow] = useState(now());\n  useEffect(() => {\n    if (!live) {\n      return;\n    }\n    const tick = () => {\n      const then = dateParser(date).valueOf();\n      if (!then) {\n        console.warn('[react-timeago] Invalid Date provided');\n        return 0;\n      }\n      const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n      const unboundPeriod = seconds < MINUTE ? 1000 : seconds < HOUR ? 1000 * MINUTE : seconds < DAY ? 1000 * HOUR : 1000 * WEEK;\n      const period = Math.min(Math.max(unboundPeriod, minPeriod * 1000), maxPeriod * 1000);\n      if (period) {\n        return setTimeout(() => {\n          setTimeNow(now());\n        }, period);\n      }\n      return 0;\n    };\n    const timeoutId = tick();\n    return () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n    };\n  }, [date, live, maxPeriod, minPeriod, now, timeNow]);\n  const Komponent = component;\n  const then = dateParser(date).valueOf();\n  if (!then) {\n    return null;\n  }\n  const seconds = Math.round(Math.abs(timeNow - then) / 1000);\n  const suffix = then < timeNow ? 'ago' : 'from now';\n  const [value, unit] = seconds < MINUTE ? [Math.round(seconds), 'second'] : seconds < HOUR ? [Math.round(seconds / MINUTE), 'minute'] : seconds < DAY ? [Math.round(seconds / HOUR), 'hour'] : seconds < WEEK ? [Math.round(seconds / DAY), 'day'] : seconds < MONTH ? [Math.round(seconds / WEEK), 'week'] : seconds < YEAR ? [Math.round(seconds / MONTH), 'month'] : [Math.round(seconds / YEAR), 'year'];\n  const passDownTitle = typeof title === 'undefined' ? typeof date === 'string' ? date : dateParser(date).toISOString().substr(0, 16).replace('T', ' ') : title;\n  const spreadProps = Komponent === 'time' ? {\n    ...passDownProps,\n    dateTime: dateParser(date).toISOString()\n  } : passDownProps;\n  const nextFormatter = defaultFormatter.bind(null, value, unit, suffix);\n  return /*#__PURE__*/React.createElement(Komponent, _extends({}, spreadProps, {\n    title: passDownTitle\n  }), formatter(value, unit, suffix, then, nextFormatter, now));\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["dateParser","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","length","firstP","secondP","restPs","map","x","parseInt","correctedParts","UTC","defaultFormatter","value","_unit","suffix","_extends","Object","assign","bind","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","MINUTE","HOUR","DAY","WEEK","MONTH","YEAR","defaultNow","now","TimeAgo","_ref","formatter","component","live","minPeriod","maxPeriod","title","passDownProps","timeNow","setTimeNow","useState","useEffect","timeoutId","tick","then","console","warn","seconds","Math","round","abs","unboundPeriod","period","min","max","setTimeout","clearTimeout","Komponent","unit","passDownTitle","toISOString","substr","replace","spreadProps","dateTime","nextFormatter","React","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","encodedQuery","str","encodeURIComponent","alphabet","prev","seed","num","floor","yeast","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","doWrite","request","req","xhrStatus","pollXhr","re","parse","src","b","m","exec","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}